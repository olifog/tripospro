{
  "myear": 2018,
  "teaching-admin": {
    "f065f201-546d-4ce2-bca5-baafac6f5b38": "ncc25",
    "388ffd77-6521-4997-bf98-22d187c4b7cd": "ckh11",
    "71ff5f31-451d-4a7f-b30e-2c0ea478e61c": "wwwupdate"
  },
  "timetable-url": "https://www.cl.cam.ac.uk/teaching/timetables/",
  "groups": {
    "a8a11b03-1258-490c-ae4e-c8583108ed33": {
      "title": "Undergraduate",
      "_label": "undergraduate",
      "supervisions": 1,
      "syllabus": {
        "27e24a87-6634-46d2-8bcc-28e8caf20980": "cst",
        "_label": "latexhtmlinclude"
      },
      "triposexam": 1,
      "navbar": 0,
      "teaching-admin": {
        "67de529e-6943-4046-87e4-6ef262a0f41c": "dp341",
        "6c200ffa-e02e-41e0-ac27-060fea0a7d12": "ms725",
        "eb62cf17-8cea-4d5a-ba37-af81ebf852ce": "clc32"
      },
      "d7ef2bd3-3b78-4a90-b876-e30afe0f0342": {
        "title": "Part IA CST 75%",
        "_label": "part1a-75"
      },
      "7f372618-a6cb-4696-8f9e-155f8a11639c": {
        "title": "Part IA CST 50%",
        "_label": "part1a-50"
      },
      "847dcdbe-a214-4f3c-bbf2-de9788146786": {
        "title": "Part IA NST",
        "_label": "part1a-other"
      },
      "a451176b-23a9-43d3-bd4b-1f15051f050d": {
        "title": "Part IB CST 75%",
        "_label": "part1b-75"
      },
      "9bf256dc-05de-40fb-ac5f-e9a63879ed00": {
        "title": "Part IB CST 50%",
        "_label": "part1b-50"
      },
      "efdba4eb-1eb3-49a0-bd4a-0d1749f1b887": {
        "title": "Part II CST 75%",
        "note": "In addition to courses examined in Tripos papers 8 and 9,\n                   students also select two further units of assessment, \n\t\t\t\t   which are examined separately.",
        "_label": "part2-75"
      },
      "04428e36-f35a-4569-9bb1-b11c70f6b5d1": {
        "title": "Part II CST 50%",
        "_label": "part2-50"
      }
    },
    "9ced32f5-c11e-4c04-9943-89bbef1aeb55": {
      "title": "Masters",
      "_label": "masters",
      "assessmentpage": 1,
      "note": "Students select five modules in total, distributed across Michaelmas and Lent term. Students should select no more than four modules from those offered in Michaelmas and no more than two modules from those offered in Lent. A module that continues in Lent term will count as a single module.",
      "showcode": 1,
      "syllabus": {
        "7a359c13-cc6e-4f80-8a03-ecca4436bc4a": "syllabus-html",
        "_label": "htmlinclude"
      },
      "teaching-admin": {
        "dea9cba0-a193-493d-af0c-a508eb2c77f1": "lmg30",
        "8d45e4e7-7583-4d3c-821e-40274ad48f78": "jlr59",
        "9b39712d-29f4-4999-8dc1-952d112a0539": "mg797"
      },
      "0e053081-43e8-45fc-9d34-812b249e14f1": {
        "title": "Part III",
        "_label": "part3"
      },
      "ab2ef8e3-edc6-4798-8daa-713f1653d4fa": {
        "title": "MPhil ACS",
        "_label": "acs"
      }
    }
  },
  "courses": {
    "PrepCS": {
      "lecturer": {
        "bb563fab-a474-4773-8834-177132496526": "arb33",
        "c9865950-807c-44d0-8811-224a8231b31d": "acr31"
      },
      "classes": {
        "8ac14320-627f-4414-a1fd-f912800b6eef": "part1a-75",
        "8e414a30-26e0-4769-936a-a6f5a0ea8ba8": "part1a-50",
        "24514116-ab76-436d-a52d-21a8313175ee": "part1a-other"
      },
      "term": "P",
      "_label": "Preparation for Computer Science",
      "supervisions": 0,
      "triposexam": 0,
      "syllabus": 0
    },
    "AdvGraph": {
      "lecturer": {
        "e41968be-3c8c-4bea-8845-5e796e3cceda": "rkm38",
        "a4854618-b9ab-46c7-acaa-26ab1a5b9e76": "pb355"
      },
      "classes": {
        "547c6a9c-64c8-450e-acc0-d369dd7faf84": "part2-75",
        "305a1357-b4d4-4a58-8381-d2da583afa29": "part2-50"
      },
      "_label": "Advanced Graphics",
      "oldnames": {
        "019eee87-c97b-4d9c-bf25-dbdb8f46a806": "Advanced Graphics and HCI"
      }
    },
    "AdvGraphIP": {
      "lecturer": "rkm38",
      "term": "L",
      "_label": "Advanced Graphics and Image Processing",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": {
          "ffe48dc9-e517-45da-8d12-3b4fed64f6ea": "10 lectures, 2 small group seminars, 2 practicals",
          "_label": "16"
        },
        "class-limit": 16,
        "prerequisites": "Programming in C",
        "synopsis": "Advanced Graphics covers topics related to processing, perception and display of images. The focus of the course is on the algorithms behind new emerging display technologies, such as virtual reality, augmented reality, and high dynamic range displays. It complements two computer graphics courses, Introduction to Graphics and Further Graphics, by introducing problems that became the part of graphics pipeline: tone-mapping, post-processing, displays and models of visual perception.",
        "_label": "L352"
      }
    },
    "AdvAlgo": {
      "lecturer": "tms41",
      "classes": {
        "8e505f78-3f2d-4f7c-8048-62a6c598b24e": "part2-75",
        "dc4ae0fc-b5fd-4b5a-891b-a6abefd1b91a": "part2-50"
      },
      "term": "E",
      "_label": "Advanced Algorithms"
    },
    "Algorithms": {
      "lecturer": {
        "2f0c659d-653c-4672-b79d-ebd93fd32130": "fms27",
        "6a9f8f4a-745a-41aa-a6f4-d0778ef8a697": "djw1005"
      },
      "classes": {
        "1ad4644e-0d09-4d5e-b8ed-230fb99e6a59": "part1a-75",
        "50537d5e-0bf6-4970-a08e-8dbd656ee643": "part1a-50",
        "604f3811-2dd2-4413-97c6-acd6ded9f7f9": "part1a-other"
      },
      "term": "L",
      "_label": "Algorithms"
    },
    "ArtInt": {
      "lecturer": "sbh11",
      "classes": {
        "0033723e-93dd-4df1-a522-bc4960764ac1": "part1b-75",
        "84964bbf-ef91-4925-afb5-94f62689789a": "part1b-50"
      },
      "term": "E",
      "_label": "Artificial Intelligence",
      "oldnames": {
        "fb057c99-2619-4dff-80f7-74b8467efce3": "Artificial IntelligenceÂ I"
      }
    },
    "Bioinfo": {
      "lecturer": "pl219",
      "classes": {
        "1aa9e2a5-8465-45db-b77e-50b0905ed1bd": "part2-75",
        "16e1140a-4326-4f36-bda7-afcb4e7a7094": "part2-50"
      },
      "term": "M",
      "_label": "Bioinformatics"
    },
    "BusSeminrs": {
      "lecturer": {
        "a201db15-f345-4f69-a6a7-b2f74b77f4af": "jal1",
        "d3e15b5b-cada-4254-a656-883aafe115f5": "sam56"
      },
      "classes": {
        "e3c07656-7d01-41a2-a0f9-0dcc3bc2e4cb": "part2-75",
        "8512c35f-0bee-42d5-86f3-ef0f77ea26fc": "part2-50"
      },
      "term": "E",
      "_label": "Business Studies Seminars",
      "triposexam": 0
    },
    "Business": {
      "lecturer": {
        "66543799-3030-4b05-95b3-3326fe644dd8": "jal1",
        "24579283-09f1-4672-a6f3-45c4cff1e893": "sam56"
      },
      "classes": {
        "0fdf10d0-f76b-411c-aa60-352ede2180d8": "part2-75",
        "f510f349-1730-495e-8a49-875f837da318": "part2-50"
      },
      "term": "M",
      "_label": "Business Studies"
    },
    "ProgC": {
      "lecturer": {
        "e8922d64-cdb0-47b0-9433-e11e0b3e44b4": "nk480",
        "f91fc3d4-35eb-4ad2-9d41-3cabc2dca354": "am21"
      },
      "classes": {
        "ad9360e6-b0d6-4840-83df-f37709aaf0df": "part1b-75",
        "d6c19233-42eb-4bb8-beee-b91d64e0a2d5": "part1b-50"
      },
      "term": "M",
      "_label": "Programming in C and C++"
    },
    "CloudComp": {
      "lecturer": {
        "a1d7cfef-fe15-41ef-bf7d-e62ae4d2c12a": "ek264",
        "12af9bd5-3aa6-4b0f-be5e-ad4ba6c01190": "avsm2"
      },
      "term": "M",
      "_label": "Cloud Computing",
      "type": "part2-unit"
    },
    "CompArch": {
      "lecturer": "rdm34",
      "classes": {
        "b95105a1-3939-4d4d-942f-7b596aad4ce9": "part2-75",
        "68c76640-612d-4ccb-88ab-35c3e811cc67": "part2-50"
      },
      "term": "L",
      "_label": "Comparative Architectures"
    },
    "CompConstr": {
      "lecturer": "tgg22",
      "classes": {
        "dd99b32e-1ae5-4f1c-bb60-dbc8f51d235b": "part1b-75",
        "453736e4-3d1d-43ad-ac38-71ebc0269a11": "part1b-50"
      },
      "term": "L",
      "_label": "Compiler Construction"
    },
    "CompDesign": {
      "lecturer": {
        "7228827f-fa66-45f5-9c0f-398f7c846711": "swm11",
        "b915ba40-94ef-4271-9353-ab0d1c315960": "tmj32"
      },
      "classes": {
        "9eda342d-414c-4ad3-866e-39240538c6e7": "part1b-75",
        "1f29e192-4190-4498-98ae-e502b90544cd": "part1b-50"
      },
      "term": "M",
      "_label": "Computer Design",
      "oldnames": {
        "2dae7630-e683-4f95-80a2-ae1aae72b058": "ECAD"
      }
    },
    "CompMusic": {
      "lecturer": {
        "1b319108-e583-4569-86c5-841a4888c974": "afb21",
        "fc46ffca-19c2-405b-b593-01d41b8ab56d": "mgk25"
      },
      "term": "L",
      "_label": "Digital Signal Processing with Computer Music",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": {
          "eb5ad501-d65a-4e7f-8631-439c9185e06e": "2 sets of 8 lectures",
          "_label": "16"
        },
        "class-limit": {
          "44b6d519-cb5a-490b-ba8c-67d5c351886e": "minimum 5 students"
        },
        "synopsis": "Introduction to computer music, including applications in generative composition, audio interaction, sonification, game sound and other non-speech audio. Basic principles of music information retrieval and musicological corpus analysis. Overview of current research topics as addressed at venues such as NIME, ICLC, ICCM. Part 1: This will be lectures 1-8 of the Digital Signal Processing course assessed by a test. Part 2: 8 lectures in Computer Music. The course is borrowed from Part II of the Computer Science Tripos but is assessed differently.",
        "_label": "L312"
      }
    },
    "CompNet": {
      "lecturer": "awm22",
      "classes": {
        "dc8952b0-9e60-4e1c-8d3e-20942fcf0e26": "part1b-75",
        "c7ccfe1b-7135-4f77-aad1-9b7c0d9c620d": "part1b-50"
      },
      "term": "L",
      "_label": "Computer Networking",
      "oldnames": {
        "d58976ed-bcd4-468e-a389-d151f6de4cdb": "Digital Communication I"
      }
    },
    "CompSysMod": {
      "lecturer": "tbc",
      "classes": {
        "cb8c0463-3f75-41b8-a7b0-2582f436f737": "part2-75",
        "b53b63a0-6eb6-4a56-9e37-6abd41ea1115": "part2-50"
      },
      "_label": "Computer Systems Modelling"
    },
    "CompTheory": {
      "lecturer": "amp12",
      "classes": {
        "1349ed77-bb38-4d48-8ce2-17297368ffe3": "part1b-75",
        "f9ba66a9-641b-4d91-9821-c38d9b18b378": "part1b-50"
      },
      "term": "L",
      "_label": "Computation Theory"
    },
    "CompVision": {
      "lecturer": "jgd1000",
      "classes": {
        "a8f7ef98-3919-4f95-b007-b66645e687d6": "part2-75",
        "18355591-c6ea-4690-b65f-cf5c62b36ca0": "part2-50"
      },
      "term": "L",
      "_label": "Computer Vision",
      "supervisions": 0,
      "clone": {
        "classes": {
          "0c7f6d7f-ec84-46d5-9e01-bb7653db2b65": "acs"
        },
        "contributor": {
          "f66b4022-4d6a-44e0-886b-4efcfc783d4f": "cpt23",
          "4a5862bd-aaef-4c6e-90b9-d8adfa83eb7a": "mmam3"
        },
        "hours": {
          "1a5022b7-b795-4455-9c3f-1f99b491bd69": "16 lectures, additional briefing session",
          "_label": "18"
        },
        "materials": "clone",
        "synopsis": "Lectures for this module are borrowed from the undergraduate CST Part II Computer Vision. MPhil students undertake practical exercises and a mini-project in Lent Term. The module aims to introduce the principles, models and applications of computer vision. The course will cover image structure, projection, stereo vision, and the interpretation of visual motion. It will be illustrated with case studies of industrial (robotic) applications of computer vision, including visual navigation for autonomous robots, robot hand-eye coordination and novel man-machine interfaces.  There is no written examination for MPhil students. It is not a double module.",
        "_label": "L248"
      }
    },
    "Complexity": {
      "lecturer": "ad260",
      "classes": {
        "3d00b16d-51c0-482b-a02f-0039bbe75acf": "part1b-75",
        "ee042c96-f90b-4efa-aae7-7286d9101def": "part1b-50"
      },
      "term": "E",
      "_label": "Complexity Theory",
      "oldnames": {
        "b7ec9369-6365-4a4c-8f33-5aa8d64f703e": "Complexity"
      }
    },
    "ConcDisSys": {
      "lecturer": {
        "a6069dbe-af1c-406d-941d-ff1008c1af83": "rmm1002",
        "f6a4f1e1-20e3-4cc3-9851-5b826b8c82a0": "avsm2"
      },
      "classes": {
        "3194710e-a1bb-4a42-ab8f-c1c8832c78bd": "part1b-75",
        "aae0e802-5715-45ce-acf6-109e8a2e1306": "part1b-50"
      },
      "term": "M",
      "_label": "Concurrent and Distributed Systems",
      "oldnames": {
        "039296ed-7491-4281-9853-f2d8618af886": "Concurrent Systems"
      }
    },
    "ConceptsPL": {
      "lecturer": "am21",
      "classes": {
        "02e6b522-424d-4bac-b7ce-234f2c222f7d": "part1b-75",
        "c9e6455e-62e1-431b-bb88-53736beacb44": "part2-50"
      },
      "term": "E",
      "_label": "Concepts in Programming Languages",
      "oldnames": {
        "9aca3a5f-27cc-47a5-98aa-8d409ccfe585": "Comparative Programming Languages"
      }
    },
    "DSP": {
      "lecturer": "mgk25",
      "classes": {
        "30cc7e72-8516-4769-bf09-5aaf11c88bd1": "part2-75"
      },
      "term": "L",
      "_label": "Digital Signal Processing",
      "type": "part2-unit",
      "clone": {
        "b0e0a09b-b372-48ba-b838-b220fe5d6250": {
          "type": "masters-shared",
          "classes": {
            "c3320993-6d32-4807-b81a-209c01bd4abf": "acs",
            "ee9896df-cfda-472b-a991-b241e91d8c75": "part3"
          },
          "prerequisites": "basic linear algebra",
          "hours": 16,
          "synopsis": "This course teaches the basic signal-processing principles necessary to understand many modern high-tech systems, with application examples focussing on audio processing, audio and image coding, communication systems, software-defined radio, and linear feed-back control. Students will gain practical experience from numerical experiments in programming assignments.",
          "_label": "L314"
        },
        "a6a5638a-021c-4d98-bacb-f4847a7c4787": {
          "classes": {
            "0af9527b-7272-4f10-9e82-db1ca60a69da": "part2-50"
          },
          "assessmentpage": 0,
          "triposexam": 1,
          "supervisions": 1,
          "materials": "clone",
          "syllabus": "clone",
          "_label": "DSP2"
        }
      }
    },
    "Databases": {
      "lecturer": "tgg22",
      "classes": {
        "983846e2-4420-4d7d-9d4b-f00aace8a8be": "part1a-75",
        "d417a0dd-0d36-4692-8d65-7b96e77d23a3": "part1b-50"
      },
      "term": "M",
      "_label": "Databases"
    },
    "DataSciII": {
      "lecturer": {
        "c9b0eedb-5e37-4b74-8282-2990219eb920": "mr472",
        "67694fac-b224-4e63-af49-5bf0d61f5f78": "ek358",
        "0e86ee33-4058-4bae-9fd1-174c8f2dd19b": "djw1005",
        "b43fd217-b49e-43af-ae24-f19b6377f970": "ejb1"
      },
      "term": "M",
      "_label": "Data Science: principles and practice",
      "type": "part2-unit"
    },
    "DenotSem": {
      "lecturer": "amp12",
      "classes": {
        "98987187-93dd-499a-966d-e59a50ff2d72": "part2-75",
        "9565afb8-5972-46cf-82e7-dde54fbf7ea5": "part2-50"
      },
      "term": "M",
      "_label": "Denotational Semantics"
    },
    "DigElec": {
      "lecturer": "ijw24",
      "classes": {
        "8ab24ff0-418b-4a7e-8b41-c53af20dcf61": "part1a-75",
        "51fee51a-e2c0-4901-8b14-c2bbcfcc40f8": "part1a-50"
      },
      "term": "M",
      "_label": "Digital Electronics"
    },
    "DiscMath": {
      "lecturer": {
        "6707e882-ed38-47f2-968b-ea850e1ecbf0": "gw104",
        "a51a306d-a8fb-4852-9c15-1913d74a346e": "fms27"
      },
      "classes": {
        "df1e113c-2363-47fe-8799-4521062774bf": "part1a-75",
        "ab706a57-d9ac-4b4c-bffd-216b5498b25a": "part1a-50"
      },
      "term": {
        "01aa690a-5464-4f02-969e-bb77f190d53a": "L",
        "_label": "M"
      },
      "_label": "Discrete Mathematics",
      "oldnames": {
        "d4271307-5425-4d20-aad7-9c62bd424767": "Discrete Mathematics I"
      }
    },
    "ECAD+Arch": {
      "lecturer": {
        "c7d68126-da22-4ea9-a530-927848aabe15": "atm26",
        "769876ac-0d97-44b5-9a14-a27a2a54d608": "swm11",
        "087614f5-8604-4b18-8a32-89fd3f4956a6": "rdm34"
      },
      "classes": {
        "a074935d-4a8d-4ff9-92bb-1ffc0c54cdac": "part1b-75",
        "f6b1fb18-ba51-4707-9321-9a157f201135": "part1b-50"
      },
      "term": "M",
      "_label": "ECAD and Architecture Practical Classes",
      "triposexam": 0,
      "supervisions": 0
    },
    "ECommerce": {
      "lecturer": {
        "cd07b527-9823-4a41-8e1a-97b9b90d7a6f": "jal1",
        "6344bd98-7080-41f7-b744-517dde4dbd41": "sam56"
      },
      "classes": {
        "ab8ab977-e9c9-436c-9bc0-8005e8dd7979": "part2-75",
        "9e67da3b-855e-45c8-90b4-1502f738bf32": "part2-50"
      },
      "term": "L",
      "_label": "E-Commerce",
      "oldnames": {
        "02404d33-1c37-4a70-9f07-48be2ce258a1": "Business Studies"
      }
    },
    "EconLaw": {
      "lecturer": "rja14",
      "classes": {
        "5aa5f81a-476f-4fbd-994f-126fa18d492c": "part1b-75",
        "a64836dc-5575-48ed-b33b-e537aa707e09": "part2-50"
      },
      "term": "M",
      "_label": "Economics, Law and Ethics",
      "oldnames": {
        "a1f93783-9969-4656-80bc-ecd7d7530592": "Economics and Law"
      }
    },
    "FJava": {
      "lecturer": {
        "e3cedac4-3eef-44f6-94ce-e747efe59724": "arb33",
        "f2c4d1e5-5c06-4706-95ba-89085443d7a6": "acr31"
      },
      "classes": {
        "1b0b36c1-5c9e-43cf-a0ee-21efed6b2534": "part1b-75",
        "c6b19e0f-a57a-4c88-8b51-89d11cd00554": "part1b-50"
      },
      "term": "M",
      "_label": "Further Java",
      "supervisions": 1
    },
    "FJavaBrfg": {
      "lecturer": "arb33",
      "classes": {
        "dd3faecd-0cb0-4d21-8d12-758fe662e75e": "part1a-75",
        "3c8a51da-6688-4929-8a0b-83ebe591da15": "part1a-50"
      },
      "_label": "Further Java Briefing",
      "supervisions": 0,
      "triposexam": 0
    },
    "FGraphics": {
      "lecturer": "pb355",
      "classes": {
        "0d3ddfbb-5a43-485a-8127-e66ba2d2f3e8": "part1b-75",
        "6e7bafc0-b7d5-4f37-be27-195240778ac5": "part2-50"
      },
      "term": "M",
      "_label": "Further Graphics"
    },
    "FHCI": {
      "lecturer": "afb21",
      "classes": {
        "4faad3af-66bd-4e9b-85b6-0db57e5a4011": "part1b-75",
        "eee174a6-40c0-4b51-abe0-eccc58f71a27": "part2-50"
      },
      "term": "L",
      "_label": "Further HumanâComputer Interaction",
      "contributor": "lec40"
    },
    "ForModLang": {
      "lecturer": "pjb48",
      "classes": {
        "33c06ec7-b900-4a56-b6a9-c9c876fc5e7a": "part1b-75",
        "7a12ab3a-aa09-4a6c-bba3-80731e4102a1": "part2-50"
      },
      "term": "E",
      "_label": "Formal Models of Language"
    },
    "NumAnalys": {
      "lecturer": "abr28",
      "classes": {
        "ecb6bb44-2c98-4d82-b234-23d1ae5f930e": "part1a-75",
        "149efcc6-64bb-4ebe-95bb-023c2aef1eeb": "part1a-50",
        "47997f13-935f-4a72-9282-4d76ceeef575": "part1a-other"
      },
      "term": "E",
      "_label": "Numerical Analysis",
      "oldnames": {
        "a3b43bd7-3c34-40ea-b9ba-5a1f1c42d723": "Floating-Point Computation",
        "1e575b4f-43f3-4281-b62c-8269894f61bd": "Numerical Methods"
      }
    },
    "FoundsCS": {
      "lecturer": {
        "b47163b1-1999-4e20-adf6-8f4384d11960": "am21",
        "83a40e41-fac0-4ab5-b1fb-6712dec160d7": "asp45"
      },
      "classes": {
        "48f48c82-bc00-40f0-9336-b0ce350e085c": "part1a-75",
        "296e4458-749f-41d7-aa34-d72307bc76dc": "part1a-50",
        "7ed57c31-ebfd-4126-9751-a850c41641b9": "part1a-other"
      },
      "term": "M",
      "_label": "Foundations of Computer Science"
    },
    "Graphics": {
      "lecturer": {
        "5c497827-d5ad-4c53-96be-05bf97aea756": "rkm38",
        "f90032d1-1b13-4ec6-aded-590fa4c9acf5": "pr10"
      },
      "classes": {
        "eeafe4ec-389d-40b6-8115-b5d68da46009": "part1a-75",
        "e9c0797b-217d-453c-a923-6295c7bf48af": "part1b-50"
      },
      "term": "M",
      "_label": "Introduction to Graphics"
    },
    "GroupProj": {
      "lecturer": {
        "9e36fe1a-5391-4e3c-b7af-cf6d65034fd1": "afb21",
        "d001e7d9-580c-4d9d-90df-dd00ae6e6fad": "rmm1002"
      },
      "classes": {
        "9b14f5fc-f425-4021-a62e-57db0b45b41e": "part1b-75",
        "4df1a935-f250-4ca6-9610-168bbbd01d60": "part1b-50"
      },
      "term": {
        "1f06bdc9-95fe-4246-8e83-9671f8425af0": "L",
        "_label": "M"
      },
      "_label": "Group Project",
      "url": "http://www.cl.cam.ac.uk/teaching/group-projects/",
      "feedback": 0,
      "triposexam": 0
    },
    "HCI": {
      "lecturer": "afb21",
      "classes": {
        "2f557d07-1ef8-4497-aa17-c4464ce44379": "part2-75",
        "3ad75dd9-c259-4c6e-8826-1ae424b21ad4": "part2-50"
      },
      "_label": "HumanâComputer Interaction",
      "oldnames": {
        "5a4c453e-8033-4e80-a46c-db6ca1a45104": "Advanced Graphics and HCI"
      }
    },
    "HW": {
      "lecturer": "ijw24",
      "classes": {
        "73d5004e-4ca2-45e1-a381-264d12d48222": "part1a-75",
        "44bfac41-183a-4bb3-b739-3275d0826f2f": "part1a-50"
      },
      "term": {
        "48ad6668-bbff-42e0-8d33-a055b5f8080d": "L",
        "_label": "M"
      },
      "_label": "Hardware Practical Classes",
      "supervisions": 0,
      "triposexam": 0,
      "feedback": 0,
      "syllabus": 0
    },
    "HLog+ModC": {
      "lecturer": {
        "61ccd80d-db3a-4412-937a-601b62650000": "jp622",
        "41c94853-37be-4914-8e07-2918cf0b4cf5": "caw77"
      },
      "classes": {
        "8883f8db-34d4-4132-a4bd-8e4e4b566914": "part2-75",
        "8aac69b8-11bb-4436-b365-3f462d2959eb": "part2-50"
      },
      "term": "E",
      "_label": "Hoare Logic and Model Checking",
      "oldnames": {
        "c9a0a53a-d2d6-45dc-ac25-1a4b98aff9f3": "Specification and Verification I",
        "53cca9f0-bcde-48a7-8171-b5153af7a62d": "Hoare Logic"
      }
    },
    "InfoRtrv": {
      "lecturer": "tbc",
      "classes": {
        "c30c1f22-382f-41fe-913d-38363181c84b": "part2-75",
        "e5a41e4f-80e8-4434-8683-20b931f6bf27": "part2-50"
      },
      "_label": "Information Retrieval"
    },
    "InfoTheory": {
      "lecturer": "jgd1000",
      "classes": {
        "9d7a4b08-bec5-4348-9a9e-53e556e300b3": "part2-75",
        "2c3dd140-bbfd-44db-8d69-47c7f429a261": "part2-50"
      },
      "term": "M",
      "_label": "Information Theory",
      "oldnames": {
        "5b1c952a-769a-42fa-a9ac-14f8c8387466": "Information Theory and Coding"
      }
    },
    "IntDesign": {
      "lecturer": {
        "394358d3-faed-4caa-9a9e-a41c480400f4": "hg410",
        "6d60c964-d069-4584-b9b3-4cbc8bd02b64": "afb21"
      },
      "classes": {
        "ee34d89c-efda-4f28-af50-e72fc53e8376": "part1a-75",
        "ab23b730-a813-4089-9810-f5f74c77b2e5": "part1b-50"
      },
      "term": "E",
      "_label": "Interaction Design"
    },
    "LogicProof": {
      "lecturer": "lp15",
      "classes": {
        "a3a3193b-ce6b-4e18-be2a-bac51be2561f": "part1b-75",
        "7301469b-5f9a-4f00-9b7e-ddeed5efc163": "part1b-50"
      },
      "term": "L",
      "_label": "Logic and Proof"
    },
    "MLBayInfer": {
      "lecturer": "sbh11",
      "classes": {
        "0669decb-6bdf-4e01-b2d7-bd24a10483d8": "part2-75",
        "0fc553c3-9174-4e97-b683-9f95d4d3671e": "part2-50"
      },
      "term": "E",
      "_label": "Machine Learning and Bayesian Inference",
      "oldnames": {
        "2a71d5ae-c56f-46d7-9d71-ff6e5dda916c": "Artificial Intelligence"
      }
    },
    "DataSci": {
      "lecturer": {
        "f7cdcf47-099f-4d77-a0cc-4266d5d16ea3": "djw1005"
      },
      "classes": {
        "27d22dd2-5c07-425b-9c38-0457d10df72b": "part1b-75",
        "6ce56252-7a18-4404-b1fb-bf673939839b": "part1b-50"
      },
      "term": "M",
      "_label": "Foundations of Data Science",
      "oldnames": {
        "710941c6-0c9a-43d0-8583-2bac717e1acf": "Continuous Mathematics",
        "6d22dce1-0ab9-4e42-82fb-5485cf2b343e": "Mathematical Methods for Computer Science"
      }
    },
    "MLRD": {
      "lecturer": {
        "9a93239a-c7d6-4da8-a92b-d3a40c0cf3ab": "sht25",
        "ba7104d9-61f4-49d4-ba2b-ba49754c63a9": "pjb48",
        "78b3f891-2560-4895-b6b1-edcf583f1005": "aac10"
      },
      "classes": {
        "a4afadf6-e800-4753-a6b3-6ae77aa882ed": "part1a-75",
        "c6a638f3-9565-4fd8-84c5-5469963a0c85": "part1b-50"
      },
      "term": "L",
      "_label": "Machine Learning and Real-world Data"
    },
    "TeX+MATLAB": {
      "lecturer": "mgk25",
      "classes": {
        "cdf87864-8a28-4e95-98e9-7b2e54fbda42": "part2-75",
        "fd0b80d7-ac30-4c61-8e03-0c4a80f50c87": "part2-50"
      },
      "term": "M",
      "_label": "LaTeX and MATLAB",
      "triposexam": 0,
      "supervisions": 0
    },
    "ML": {
      "lecturer": {
        "382e643c-1e0e-4c42-b7ba-78ae347b1c07": "asp45",
        "16ac73e4-b697-4b59-bd1c-2a4b3ce486e9": "am21"
      },
      "classes": {
        "124505e3-4e95-4cec-9456-f82e490136da": "part1a-75",
        "87394ab1-0dbe-4594-a692-1d5a2d120f86": "part1a-50",
        "2fb33397-5014-4fcd-b7ab-2d4d292ed4bd": "part1a-other"
      },
      "term": "M",
      "_label": "ML Practical Classes",
      "triposexam": 0,
      "supervisions": 0,
      "syllabus": 0,
      "oldnames": {
        "bcd642cf-ca78-4480-babe-a87d0631f300": "ML under Windows"
      }
    },
    "Metaprog": {
      "lecturer": {
        "df437637-4f16-440d-835b-bfea67712fc1": "na482",
        "1b4ff86a-f59d-4436-a294-c36e1c78a312": "jdy22"
      },
      "term": "M",
      "_label": "Metaprogramming",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": {
          "139f2de6-aaa7-42c2-bb7d-ac6d685038d3": "12 lectures and 4 hrs of practical",
          "_label": "16"
        },
        "prerequisites": "Foundations of CS (eg. see Part IA), Prolog, Semantics of Programming Languages, Concepts in Programming Languages, Compiler Construction (eg. see Part IB);\n\tMore loosely-related: Denotational Semantics (eg. IB), Optimising Compilers, Types (eg. II) ",
        "class-limit": {
          "1e5e1244-2aec-457a-8820-75b57f48dc34": "minimum 5 students"
        },
        "synopsis": "NEW: This course surveys principled approaches to meta-programming, writing programs that manipulate programs. Topics include evaluators, reflection, writing programs that write programs, designing domain-specific languages and meta-linguistic abstractions, synthesis. The course is borrowed from Part II of the Computer Science Tripos but is assessed differently.",
        "_label": "L305"
      }
    },
    "MobRobot": {
      "lecturer": "asp45",
      "term": "L",
      "_label": "Mobile Robot Systems",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": {
          "ec5f1582-316d-4619-9bc2-1ab6571d3e7f": "12 lectures and 4 practical classes",
          "_label": "16"
        },
        "class-limit": 8,
        "prerequisites": "C++ or Python; Basic probability/calculus; Basic physics (kinematics); Must feel comfortable working with a Linux environment.",
        "synopsis": "This course teaches the foundations of autonomous mobile robots, covering topics such as perception, motion control, and planning. It also teaches algorithmic strategies that enable the coordination of multi-robot systems and robot swarms. The course will feature several practical sessions with hands-on robot programming. The students will undertake mini-projects, which will be formally evaluated through a report and presentation.",
        "_label": "L310"
      }
    },
    "MobSensSys": {
      "lecturer": "cm542",
      "classes": {
        "5603a65d-b4f0-4b21-9efa-b13e2e56cfbf": "part2-75",
        "8d6bf608-8f5c-4c2a-842e-41e19798f6dd": "part2-50"
      },
      "term": "L",
      "_label": "Mobile and Sensor Systems"
    },
    "Multicore": {
      "lecturer": {
        "0da1ee16-ab1a-41c7-8908-4a15bee49e9b": "pes20",
        "9b5962da-0ace-4a0b-a0a6-adead3be3b42": "tlh20"
      },
      "term": "M",
      "_label": "Multicore Semantics and Programming",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": {
          "71785d8a-aa10-4319-bedb-d94ec903377c": "8 Ã two-hour blocks, including 2 Ã one-hour practical sessions",
          "_label": "16"
        },
        "class-limit": {
          "e652ffbb-da7d-4231-bd6c-d43ef08a8513": "maximum 16 and minimum 6 students",
          "_label": "16"
        },
        "prerequisites": "Some familiarity with discrete mathematics (sets, partial orders, etc.) and with sequential Java \n\tprogramming will be assumed. Experience with operational semantics and with some concurrent programming \n\twould be helpful.",
        "synopsis": "In recent years multiprocessors have become ubiquitous, but building reliable concurrent systems with \n\tgood performance remains very challenging. This module introduces some of the theory and the practice of \n\tconcurrent programming, from hardware memory models and the design of high-level programming languages to the correctness \n\tand performance properties of concurrent algorithms.",
        "_label": "L304"
      }
    },
    "NLP": {
      "lecturer": {
        "c418a142-140b-4a11-a5c6-cde75eca47b6": "sht25",
        "23720574-5334-4fdf-9454-5157c9506e00": "pjb48"
      },
      "term": "M",
      "_label": "Natural Language Processing",
      "type": "part2-unit"
    },
    "OOProg": {
      "lecturer": "acr31",
      "classes": {
        "3b8247aa-1873-4532-abe6-0d84b4dd9404": "part1a-75",
        "1b2b7946-f218-4e2b-b0d1-a07279cfac9c": "part1a-50",
        "2a0b3999-4d5b-4bc3-8104-f7db2898f07b": "part1a-other"
      },
      "term": "M",
      "_label": "Object-Oriented Programming",
      "oldnames": {
        "7584b402-5d57-4297-8ee8-7875ca716ef5": "Programming Methods and Java",
        "66147d69-e2de-4931-a436-3747d815cbb1": "Programming in Java"
      }
    },
    "OpSystems": {
      "lecturer": "rmm1002",
      "classes": {
        "736c1361-2e7f-4f9b-981c-7c9f9a210881": "part1a-75",
        "2bdc7c8f-1924-487e-ac50-c519ec95b7f7": "part1a-50"
      },
      "term": "L",
      "_label": "Operating Systems"
    },
    "OptComp": {
      "lecturer": "tmj32",
      "classes": {
        "f4345080-7389-417e-ae1e-49237e9cacdc": "part2-75",
        "ac350d40-2c87-496a-8711-bc6aaf7a7c74": "part2-50"
      },
      "term": "L",
      "_label": "Optimising Compilers"
    },
    "PrincComm": {
      "lecturer": "jac22",
      "classes": {
        "a86bb377-5a38-4445-8684-38717cca06a9": "part2-75",
        "a975da3a-a2fc-4bb8-bd42-23ed8c918e8b": "part2-50"
      },
      "term": "M",
      "_label": "Principles of Communications",
      "oldnames": {
        "1b335b24-5fa1-424b-918f-82abbc9f3dac": "Digital Communication II"
      }
    },
    "Probablty": {
      "lecturer": {
        "c4850d50-f36f-4ea4-81c2-fdc77d2fda04": "tms41",
        "1c327c4f-a152-40c4-ace0-c4db3e98f869": "nr454",
        "48bc8ffb-0679-45be-814a-2deb93e34048": "jas289",
        "96caadc5-b530-4b8b-884e-bccc41d58649": "lz381"
      },
      "term": "L",
      "_label": "Probability and Computation",
      "type": "part2-unit"
    },
    "Prolog": {
      "lecturer": "acr31",
      "classes": {
        "ef3599e5-5bea-4261-bd9b-e4c52ed31b45": "part1b-75",
        "992f76ca-fa93-4afa-9341-6e797806a470": "part2-50"
      },
      "term": "L",
      "_label": "Prolog",
      "oldnames": {
        "d33fa739-247c-4459-b9fe-a343ff9accb9": "Prolog for Artificial Intelligence"
      }
    },
    "QuantComp": {
      "lecturer": "ad260",
      "classes": {
        "6d5f7a2d-33ec-4450-aeee-bb66075b89ef": "part2-75",
        "049d6a45-04df-4d24-a657-e8825967f6dc": "part2-50"
      },
      "term": "M",
      "_label": "Quantum Computing"
    },
    "Registratn": {
      "lecturer": {
        "837910da-2e42-4305-8113-854951fd3620": "rmm1002",
        "3f2bef82-2dd6-4dc5-b95d-ad6aebd8fab5": "aac10"
      },
      "classes": {
        "358ab016-6ee9-4ed3-bea0-b500d8b0098f": "part1a-75",
        "2590e25f-b868-4f9a-b177-e166601cad93": "part1a-50",
        "22659c52-c1fa-46ef-adf1-59ad7e501aae": "part1a-other"
      },
      "term": "M",
      "_label": "Registration",
      "feedback": 0,
      "supervisions": 0,
      "triposexam": 0,
      "syllabus": 0
    },
    "SciComp": {
      "lecturer": "djw1005",
      "classes": {
        "7830fa8c-c1e0-42e4-be28-dee2e0321d32": "part1a-75",
        "50632c0b-510a-4a99-9588-d9e335b6a63d": "part1a-50"
      },
      "term": {
        "c71f7c8e-4358-4da1-b230-8b374c726664": "L",
        "_label": "M"
      },
      "_label": "Scientific Computing Practical Course",
      "triposexam": 0,
      "supervisions": 0
    },
    "SWSecEng": {
      "lecturer": "arb33",
      "classes": {
        "594199e7-06cb-4bba-993f-2fe1653733ed": "part1a-75",
        "d0fd92e6-46c6-45c5-a8c3-b687057f29c7": "part1a-50"
      },
      "term": "E",
      "_label": "Software and Security Engineering",
      "oldnames": {
        "e5b3945e-9577-49a1-9488-18b77e96f523": "Software Engineering"
      }
    },
    "Security": {
      "lecturer": "mgk25",
      "classes": {
        "96a91673-9881-487c-844e-093302890c8e": "part1b-75",
        "dc470c68-de6d-40ee-802e-1b96dde27dae": "part1b-50"
      },
      "term": "E",
      "_label": "Security",
      "oldnames": {
        "4e7ab061-7822-4d9a-9c31-e531c23195fe": "Introduction to Security",
        "083c9040-4cd9-42cf-a283-a684f8c16663": "SecurityÂ I",
        "af59f162-42f1-4870-b656-f4f35ababd48": "SecurityÂ II"
      }
    },
    "Crypto": {
      "lecturer": "mgk25",
      "classes": {
        "b2053429-f1fd-4635-ab24-0be00711aa08": "part2-75",
        "79e9113e-5cf0-4b36-a2d6-096f01cc8858": "part2-50"
      },
      "term": "L",
      "_label": "Cryptography",
      "oldnames": {
        "e626edd6-1022-4a17-84b9-d4fced2d7524": "SecurityÂ I",
        "7e98dc70-9874-45e6-864b-a26afba3a1a1": "SecurityÂ II"
      }
    },
    "Semantics": {
      "lecturer": "pes20",
      "classes": {
        "a9079ce6-c7cc-47d9-a1bb-ba334c224ea2": "part1b-75",
        "f86b017c-bcd8-449e-882a-570898d21842": "part1b-50"
      },
      "term": "M",
      "_label": "Semantics of Programming Languages",
      "oldnames": {
        "a19fb011-e222-4b36-8c93-76b40e869fe0": "Semantics"
      }
    },
    "SysOnChip": {
      "lecturer": "djg11",
      "classes": {
        "954aeec4-dd97-433d-8858-bfbc1b359656": "part2-75",
        "9e650817-6649-44f6-b82c-f4ca1b24c9ea": "part2-50"
      },
      "_label": "System-on-Chip Design",
      "oldnames": {
        "5a720220-749f-45e7-89bc-2e0336ef200a": "VLSI Design"
      }
    },
    "TempLogic": {
      "lecturer": "mjcg",
      "classes": {
        "1a26779b-4587-44c2-9228-f8ba9c932d0d": "part2-75",
        "4fcfc2fc-185a-4f1b-a265-5def55f6f206": "part2-50"
      },
      "_label": "Temporal Logic and Model Checking",
      "oldnames": {
        "9e0e4e80-0d65-48db-8835-320f806327bc": "Specification and Verification II"
      }
    },
    "TopConc": {
      "lecturer": "gw104",
      "term": "L",
      "_label": "Topics in Concurrency",
      "type": "part2-unit",
      "clone": {
        "type": "masters-shared",
        "hours": 16,
        "prerequisites": "Semantics of programming languages, specifically, an idea of operational semantics and how to reason from it.",
        "class-limit": {
          "76e874d4-fc11-4129-9562-40ae6afe9e19": "minimum 5 students"
        },
        "synopsis": "NEW: The aim of this course is to introduce fundamental concepts and techniques in the theory of concurrent processes. It will provide languages, models, logics and methods to formalise and reason about concurrent systems. The course is borrowed from Part II of the Computer Science Tripos but is assessed differently.",
        "_label": "L301"
      }
    },
    "TopIssues": {
      "lecturer": "rkh23",
      "classes": {
        "2ebf02ce-1775-4b3b-ab10-51944df002ac": "part2-75",
        "d4afffa9-1c71-4006-af1a-e87a22f0af8a": "part2-50"
      },
      "_label": "Topical Issues",
      "oldnames": {
        "17405dd2-5298-4d54-92ad-7de74455df1a": "Additional Topics"
      }
    },
    "Types": {
      "lecturer": "nk480",
      "classes": {
        "74445c74-fbaa-4ff1-953f-5187922e6066": "part2-75",
        "e7c63bd5-3c36-42b7-a7d8-9a5989da6614": "part2-50"
      },
      "term": "M",
      "_label": "Types"
    },
    "UnixTools": {
      "lecturer": "mgk25",
      "classes": {
        "9c1f3bb6-b633-4d70-97ca-3a122ac232ff": "part1b-75",
        "d7c635ce-7814-43c2-81ce-dc0004760f7d": "part1b-50"
      },
      "term": "M",
      "_label": "Unix Tools",
      "triposexam": 0,
      "supervisions": 0
    },
    "C00": {
      "lecturer": {
        "d03bf47a-0ce0-417a-a3c4-c7b5073424ee": "afb21",
        "9a3061fd-580f-4290-b6f6-cea3bfe04e0a": "nad10",
        "bd1f3b67-0ddf-44b2-b4dc-ab3aa51edf74": "pr10",
        "010b3229-6f9a-4edd-a85b-f57e37ab71ec": "ko201"
      },
      "classes": {
        "c52c62fa-cbaf-45d8-a464-465605229a3b": "acs",
        "b96e9f99-f18f-495b-bc33-ab48dd74c756": "part3"
      },
      "hours": {
        "e41f4fe7-82b9-4865-b297-135a697b0dfb": "Minimum of 12 hours to be logged across three terms",
        "_label": "12"
      },
      "_label": "Research Skills Programme",
      "prerequisites": "Fluency in English (reading and writing)",
      "synopsis": "Covers key research skills including: understanding the research process; \nhow to read research papers; technical writing and technical presentation; and experiment \ndesign and statistical analysis of results. This programme must be taken by all M.Phil students.",
      "note": "mandatory"
    },
    "RSP": {
      "classes": {
        "178b25a7-4aed-4eb5-bf1f-f7dea406bd44": "acs",
        "b8e3cad0-9a2f-440c-ba19-2afd9821ab1f": "part3"
      },
      "term": {
        "00e1a0bb-ce46-453e-aed4-21f83d3d908e": "L",
        "d780d742-14d8-472d-9067-92ecf8f538ee": "E",
        "_label": "M"
      },
      "hours": 24,
      "_label": "Research Skills Programme",
      "prerequisites": "Fluency in English (reading and writing)",
      "oldnames": {
        "db6c6c16-56c1-4fc0-88c4-bbd0ddc473b2": "C00 Research Skills"
      },
      "synopsis": "To provide advice on and training in a variety of practical skills required \n    for research. To provide training in a subset chosen from the diverse set of skills that \n    will be useful in the other research-led modules, \n    in the individual project, and in the student's future career. This programme must be \n    taken by all M.Phil students and CPGS students. Note that this is not one of the five modules taken for the examination of the M.Phil and should not be chosen as a preferred module. Students will take a minimum of 12 units of varying length logged across three terms.",
      "note": "mandatory"
    },
    "R01": {
      "lecturer": "rmm1002",
      "classes": {
        "8ad9791f-8709-4d56-ad78-83374e36d9ec": "acs",
        "669c70c8-8135-470d-a1e7-c147bea0798e": "part3"
      },
      "term": "L",
      "hours": {
        "96d7297c-4be2-4a18-9c41-d74ffd492987": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Advanced Topics in Computer Systems",
      "prerequisites": "Undergraduate operating systems course, and the RSP unit 'Reading and writing systems research'",
      "class-limit": {
        "096dd6dc-783d-425a-b80b-44f26d6ac305": "maximum 15 and minimum 6 students",
        "_label": "15"
      },
      "synopsis": "An overview of âsystems researchâ, a broad area covering operating systems, database systems, \n    file systems, distributed systems and networking. The focus will be on critical thinking: the ability to \n    argue for and/or against a particular approach or idea. Each week students will read and critique (and sometimes present) \n    research papers in the field."
    },
    "R02": {
      "lecturer": "jac22",
      "classes": {
        "58e179f8-037b-429a-9cde-0cc3c88d3ce9": "acs",
        "2479af3a-b411-421f-80f9-6a864dbbec35": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Network Architectures",
      "prerequisites": "Undergraduate courses that cover the material in Principles of Communications, Security, and Computer Systems Modelling",
      "class-limit": {
        "01b4cf5b-fba6-4dbb-8bbe-c6b9aa5a097c": "maximum 16 and minimum 5 students",
        "_label": "16"
      },
      "synopsis": "The world needs more network architects! This module will discuss and critique historical and \ncontemporary network architectures including ATM, TCP/IP and 3G, as well as cover emerging sensor networks and \ndelay tolerant approaches."
    },
    "R03": {
      "lecturer": "pr10",
      "classes": {
        "ef9850c1-2b3c-45d7-9526-dbbc08a90ade": "acs",
        "946ba51f-a458-490f-a7a7-4a8c3510bf5c": "part3"
      },
      "hours": {
        "34d62b1f-ecc1-4770-a573-6432edea15a3": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Innovative User Interfaces",
      "prerequisites": "An undergraduate course in human-computer interaction",
      "class-limit": 12,
      "synopsis": "Provides an overview of research in the area of innovative user interfaces including, \namongst other topics, windows and icons; augmented reality; ubiquitous computing; and ambient displays."
    },
    "R05": {
      "lecturer": "rdm34",
      "classes": {
        "46c06f6b-5647-4cd1-9bc8-e74d943c1b49": "acs",
        "1da6aabd-8145-45bc-85f6-465255db2542": "part3"
      },
      "term": "M",
      "hours": {
        "7b92400e-5442-4ac9-bf6c-03b7971b31fa": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Chip Multiprocessors",
      "prerequisites": "An undergraduate course in computer architecture",
      "synopsis": "This course provides an introduction to parallel computing with a particular focus on chip-multiprocessors. \nThe course begins by examining the potential advantages of multi- and many-core processors. \nIt explores the basics of parallel algorithm design, approaches to parallel programming \nand the architecture of modern chip-multiprocessors. The final seminar will be given by a guest speaker from industry.",
      "class-limit": {
        "08ee9f13-1a80-409c-9ff1-87b2a1ab38f7": "maximum 16 and minimum 5 students",
        "_label": "16"
      }
    },
    "R07": {
      "lecturer": "bh288",
      "classes": {
        "2f38ed50-1960-46bf-b338-f2e0850f10d1": "acs",
        "16ae8f24-f118-4f89-b823-009fb97d8d43": "part3"
      },
      "hours": 8,
      "_label": "Introductory Logic",
      "prerequisites": "Basic familiarity with discrete mathematics and set theory (for example, to the level of \nDiscrete Mathematics I and II from Part 1A of the Cambridge Computer Science Tripos).",
      "synopsis": "This module aims to provide the basic mathematical logic which will be assumed in later courses."
    },
    "R204": {
      "lecturer": {
        "443b8400-890a-402e-bd20-ab693129fc1b": "pes20",
        "aff359ca-7ca8-486c-8ab8-63dbdc0e6a97": "tlh20"
      },
      "classes": {
        "e434a70f-65f6-4646-ba9e-49aac80b7ef6": "acs",
        "2197efb3-d5d6-485b-8db0-94e413080030": "part3"
      },
      "hours": {
        "b1f20286-299b-4447-8448-c4b1141eb328": "8 Ã two-hour blocks, including 2 Ã one-hour practical sessions",
        "_label": "16"
      },
      "_label": "Multicore Semantics and Programming",
      "prerequisites": "Some familiarity with discrete mathematics (sets, partial orders, etc.) and with sequential Java \nprogramming will be assumed. Experience with operational semantics and with some concurrent programming \nwould be helpful.",
      "class-limit": {
        "060ca381-99da-4f4d-9f83-bc62116cb080": "maximum 16 and minimum 6 students",
        "_label": "16"
      },
      "synopsis": "In recent years multiprocessors have become ubiquitous, but building reliable concurrent systems with \ngood performance remains very challenging. This module introduces some of the theory and the practice of \nconcurrent programming, from hardware memory models and the design of high-level programming languages to the correctness \nand performance properties of concurrent algorithms."
    },
    "R206": {
      "lecturer": {
        "53801285-319c-4629-86fc-043213c8096e": "rja14",
        "c8c4d640-f159-4d32-b731-22a5c326e0c7": "fms27",
        "0f6a30fb-79a4-457f-b12b-a57e32eaa458": "sjm217",
        "c411720d-d25d-4e7e-9c88-b100e0ced8c9": "rnw24"
      },
      "classes": {
        "dc05e38f-2b91-4c7c-bacc-6efe4710e269": "acs",
        "c64a7d0c-40f9-492a-8495-8caa05d31cef": "part3"
      },
      "hours": {
        "dbec9bd5-61aa-4336-b283-7629ac04657a": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Operating and Distributed System Security",
      "prerequisites": "Undergraduate operating systems course; an undergraduate networking course would be useful",
      "synopsis": "This course aims to introduce students to research questions in the protection mechanisms used \nin operating systems and distributed systems. Topics include the engineering tradeoffs involved in access \ncontrol mechanisms, such as expressiveness versus performance and usability; the implications for CPU and \noperating system design; the use of formal methods to validate and harden enforcement mechanisms; the analysis \nof protocols and APIs; and application case studies."
    },
    "R207": {
      "lecturer": "aac10",
      "classes": {
        "fdefdd2e-bc9b-47eb-8e91-5e144f5408f2": "acs",
        "079c6175-d949-4339-9d1f-d55ed28948c1": "part3"
      },
      "hours": {
        "7d526d19-437b-4296-963b-bde9501e3b5c": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Language and Concepts",
      "prerequisites": "L100 Introduction to Natural Language Processing",
      "class-limit": 8,
      "synopsis": "NB: Not to be offered in 2015-2016. The notion of a concept is crucial \nto the way that we think about representation of language and human cognition. Concepts are relevant to AI and \nNLP/computational linguistics as well as other areas of Computer Science which are concerned with modelling the \nreal world in a way which is comprehensible to humans, including semantic web technology.  The aim of this course \nis to start from a computational perspective but to provide an overview of the interdisciplinary issues involved \nin the study of concepts, including ideas from linguistics, cognitive science, philosophy and neuroscience.  \nThe course will be organised as a reading group and assessed by an essay."
    },
    "R209": {
      "lecturer": {
        "20c0a494-9143-42bb-b744-50e1b6100375": "rja14",
        "66e155a5-cc7c-49c1-b7a4-4e9fc85229ed": "arb33",
        "1fef9f2c-a52f-4b48-b98b-66bd0bf295b9": "drt24"
      },
      "classes": {
        "b6f9a73b-baec-49a4-9717-24cb56c1827c": "acs",
        "01952fab-012e-48b1-bca1-c059ed6dbd48": "part3"
      },
      "term": "M",
      "hours": {
        "9be75673-8e4a-480a-bf86-bac8e81e8dca": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Computer Security: Principles and Foundations",
      "prerequisites": "Undergraduate operating systems course; an undergraduate networking course would be useful. \nIt is recommended that students undertaking the Cybercrime R254 course also take this Michaelmas term course.",
      "class-limit": {
        "94cb328d-919a-4ce4-85fc-0daa5d5e8c67": "minimum 6 students",
        "_label": "16"
      },
      "synopsis": "This course aims to provide students with an introduction to the history and central themes of \ncomputer security, from its 1970s foundations to some current research topics, with a theme of  how to defend \ncloud-based systems against capable motivated opponents. The course considers first local computer systems and \nthen distributed systems; however, we will rapidly discover that this is an artificial distinction that only \nbecomes more awkward as we enter the current period. Throughout the course, we will consider proposed systems \nalong with the adversarial research intended to identify gaps and vulnerabilities."
    },
    "R210": {
      "lecturer": {
        "5b97116b-9291-464f-a7e5-e3ccc1179d5a": "rnw24",
        "1f92bb59-c5d5-4f10-b9b1-ebdcfeab08d9": "arb33",
        "cafef809-dd21-4672-82b1-c3a3558420a6": "drt24",
        "_label": "rja14"
      },
      "classes": {
        "51b2c624-abf8-4317-b666-2898e29d5264": "acs",
        "483b49c7-8c4e-4c25-b7bf-16a482ed5577": "part3"
      },
      "hours": {
        "ead5e877-237e-4044-8a2b-f812f67dc693": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Computer Security: Current Applications and Research",
      "prerequisites": "R209 Computer Security: Principles and Foundations.",
      "class-limit": {
        "af9fe984-d47e-412f-9f6b-d4ecc5453d98": "minimum 6 students",
        "_label": "16"
      },
      "synopsis": "In the second security course in the ACS, we turn our attention to active research topics in computer security at the Computer Laboratory. One unifying theme is how to build secure systems at scale that contain more secure and less secure components. Building on the lessons from multilevel secure systems and security protocols discussed in the first course, we will explore infrastructure versus applications; services versus clients; the use of smartcards and other cryptographic processors; API security; and failure modes from covert channels to concurrency vulnerabilities."
    },
    "R212": {
      "lecturer": "ey204",
      "classes": {
        "7731c332-6f90-4bbc-8434-98045fa2fcb1": "acs",
        "e62d976b-adee-4309-9211-c7bb159388d2": "part3"
      },
      "hours": {
        "fde67f43-e219-41ce-8e35-e57bb00ffac6": "Eight 2-hour seminar sessions (combination of lectures and reading club)",
        "_label": "16"
      },
      "_label": "Data Centric Systems and Networking",
      "prerequisites": "Undergraduate network architectures and operating systems courses",
      "class-limit": 17,
      "synopsis": "This module provides an introduction to data centric systems and networking, where data is a token in programming flow and networking and its impact on the computer system's architecture. Large-scale distributed applications with big data processing will grow ever more in importance and become a pervasive aspect of the lives of millions of users. Supporting the design and implementation of robust, secure, and heterogeneous large-scale distributed systems is essential."
    },
    "R214": {
      "lecturer": {
        "5721a1de-5f95-4057-b6e1-289ac78a9e32": "alk23",
        "a1e52907-e530-4bfe-9b9b-5f644374431e": "pl219",
        "04d6e57f-6134-4b20-8f75-ac809fb04742": "nhc30"
      },
      "classes": {
        "6b511839-b81d-45ee-ac24-e51e1241ab2e": "acs",
        "52e0f0a3-2ec2-4ed6-a18b-04fca380a846": "part3"
      },
      "hours": 16,
      "_label": "Biomedical Information Processing",
      "prerequisites": "Good programming skills (at least two programming languages e.g. python, R, java)",
      "class-limit": 16,
      "synopsis": "Research done within biomedical sciences is generating vast amounts of information which can, when analysed appropriately, improve our understanding of the complex processes that govern life, death and disease. This course surveys computational techniques that can be used to process biomedical data with the overall goal of supporting the processes of scientific inquiry, problem solving, and decision making in biomedical sciences. A variety of data types will be introduced, along with data and text mining techniques that can be used to analyse, extract, discover and integrate biomedical information at levels ranging from molecular through human populations. The course surveys specific problems in biology, clinical medicine and public health and shows how information processing can support practical applications in these areas."
    },
    "R215": {
      "lecturer": {
        "99a46b85-80f1-40aa-8a19-8241510fc7aa": "afb21"
      },
      "classes": {
        "f0da625a-6501-4749-8ea5-8317174b8652": "acs",
        "e3f1dcc9-8a84-4853-85df-d421955ee76f": "part3"
      },
      "hours": 16,
      "_label": "Theories of Interaction and Socio-digital Design",
      "prerequisites": "This course is appropriate to any ACS student, and will assist in the development of critical thinking, argument and long-form writing skills. Prior experience of essay-based humanities subjects at university or secondary school will be beneficial, but not required.",
      "synopsis": "This course is based on a reading group originally developed in collaboration with the Socio-DigitalSystems group at Microsoft Research Cambridge. The objective is for computer science researchers to develop facility in discussing and critiquing the aims of their research, especially for an audience drawn from other academic disciplines.  Participants may include research students and academic guests from other University departments."
    },
    "R216": {
      "lecturer": "sht25",
      "classes": {
        "7ab3d0c7-0d4d-40a3-a26c-ee3609bb6a17": "acs",
        "3f10c9e3-ac1f-4fdc-a977-1714416c277d": "part3"
      },
      "hours": 16,
      "_label": "Discourse Processing",
      "prerequisites": "This is not a course for beginners in computational linguistics. Students enrolling in this course must have some computational background BEFORE the ACS if they want to take this course. It is not sufficient to take L90 in parallel. They should have taken at least a syntax and semantics course at their previous institution before enlisting. If in doubt, students should contact the lecturer by email to enquire. ",
      "class-limit": {
        "5bfc1d9f-9610-4120-9bf6-2a176ffc1955": "Maximum 8 and minimum 4 students",
        "_label": "8"
      },
      "synopsis": "This module provides an introduction to NLP research centered around discourse processing (i.e., the means by which larger pieces of text are structured), and to text summarisation methods, particularly those based on discourse processing."
    },
    "R222": {
      "lecturer": {
        "0706a90b-49ce-4d08-88fa-26a649677be5": "ejb1",
        "2d4641fc-099b-47d9-a5b8-0266a7583a87": "aac10"
      },
      "classes": {
        "96974389-d215-495c-b5b1-e5da524a242e": "acs",
        "622dbacc-8ced-495c-b8ef-57f62a9138d8": "part3"
      },
      "hours": {
        "65d20f68-6a0d-4996-861c-5f3f0e758916": "4 lectures and 12 one-hour seminars",
        "_label": "16"
      },
      "_label": "Advanced Topics in Natural Language Processing",
      "prerequisites": "L90 or similar, L95, L101",
      "class-limit": {
        "8ecfd4ef-2220-41d3-92d7-de44538fb424": "minimum 6 students",
        "_label": "12"
      },
      "synopsis": "This module aims to cover at least four selected topics in enough detail and depth so that \n    participants are potentially in a position to contribute to research on the topic. Each topic will be introduced \n    with a lecture which, building on the material covered in the prerequisite courses, will make the current research \n    literature accessible. The three seminar sessions will typically be run as a reading group with student presentations \n    and discussion and will typically cover about six recent papers from the literature."
    },
    "R228": {
      "lecturer": {
        "01c4f64d-4d0a-4aae-99e3-2a35ad3e69aa": "sc609"
      },
      "classes": {
        "c78eb8d4-fe25-461c-a32a-08d62e9c7c75": "acs",
        "7e47efd2-fbb6-487a-b915-bdebc97d6b40": "part3"
      },
      "hours": {
        "b1cd74de-72e2-4ef2-90cb-6911e83a2b0c": "16 1 hour lectures, 2 2-hour practicals",
        "_label": "16"
      },
      "_label": "Deep learning for natural language processing",
      "prerequisites": "L101 Machine Learning for Language Processing, LE49 Probabilistic Machine Learning, Part II Machine Learning and Bayesian Inference, or an equivalent machine learning subject at undergraduate level. Note that L101 has a class limit of 16.",
      "synopsis": "NB: Offered in 2017-18 only. Deep learning has become the dominant approach for a number of disciplines in Artificial Intelligence, including Natural Language Processing (NLP). The recent practical successes of Deep Learning, leading to improvements in fundamental NLP technologies such as machine translation, have created enormous interest in academia and industry. By the end of the course, students will have an understanding of the fundamental techniques in deep learning and neural networks which enable the development of effective NLP applications. They will also have experience of using Google's Tensorflow software - one of the most popular development environments for building deep learning models - to solve NLP tasks."
    },
    "P230": {
      "lecturer": {
        "eabbcbb7-7424-46f6-a7e0-081e40518c85": "afb21"
      },
      "classes": {
        "ad4f692a-0c5f-4644-8d52-a90442e4cf71": "acs",
        "9707898b-ceff-4a98-a822-c396a6c9e2b2": "part3"
      },
      "term": "L",
      "hours": {
        "43797e59-5e87-495d-afd2-f1bfc23b9bb9": "8 2-hour sessions",
        "_label": "16"
      },
      "_label": "Interaction with machine learning",
      "prerequisites": "Students will benefit from pre-requisite content in machine learning that is delivered in Michaelmas.",
      "contributor": {
        "ad9ca0f1-7976-4f1d-a499-e5a79ef8e3f8": "as2006"
      },
      "class-limit": {
        "5fd5c638-f666-4209-b745-d0cac0d106dd": "minimum 6 students",
        "_label": "16"
      },
      "synopsis": "This is an advanced course in human-computer interaction, with a specialist focus on intelligent user interfaces and interaction with machine-learning and artificial intelligence technologies. The format will be largely practical, with students carrying out an original empirical research investigation over the course of one term. All empirical studies will address human interaction with some kind of model-based system for planning, decision, automation etc. Possible study formats might include: System evaluation, Field observation, Hypothesis testing experiment, Design intervention, Corpus analysis, or others as shown to be appropriate from evidence of prior research publications that have adopted specific empirical formats."
    },
    "R244": {
      "lecturer": {
        "809daf9a-bfae-4142-be51-8a8d7272fa9c": "ey204"
      },
      "classes": {
        "d9c6fd63-922c-4902-9b00-373b0985db9b": "acs",
        "5592cbc8-be1c-409a-b7be-c46827ed9917": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Large-scale data processing and optimisation",
      "class-limit": {
        "918b54d0-58cf-4a51-a6d2-99b340f4e6e9": "minimum 5 students",
        "_label": "10"
      },
      "synopsis": "This module provides an introduction to large-scale data processing, optimisation, and the impact on computer system's architecture. Large-scale distributed applications with high volume data processing such as training of machine learning will grow ever more in importance. Supporting the design and implementation of robust, secure, and heterogeneous large-scale distributed systems is essential. To deal with distributed systems with a large and complex parameter space, tuning and optimising computer systems is becoming an important and complex task, which also deals with the characteristics of input data and algorithms used in the applications. Algorithm designers are often unaware of the constraints imposed by systems and the best way to consider these when designing algorithms with massive volume of data. On the other hand, computer systems often miss advances in algorithm design that can be used to cut down processing time and scale up systems in terms of the size of the problem they can address. Integrating machine learning approaches for system optimisation will also be explored in this course."
    },
    "R249": {
      "lecturer": {
        "5b9e7c4f-20fc-4983-8524-c74aa2f2b264": "cm542"
      },
      "classes": {
        "65debd3b-00b6-4ced-b394-27f157fe75af": "acs",
        "138f3d00-6dfe-4dd5-97cd-5cb6da25dcbb": "part3"
      },
      "term": {
        "36d222fc-5b4b-4850-806c-8dfb7bd48b84": "L",
        "_label": "M"
      },
      "hours": {
        "99ccea4a-3a99-40a3-985c-30ab6e9072e4": "8 2-hours sessions",
        "_label": "16"
      },
      "_label": "Advanced topics in mobile and sensor systems and data modelling",
      "contributor": {
        "8d2001c4-03f4-4c95-bb06-45b2df8e8868": "ss2138"
      },
      "class-limit": {
        "cd19b60a-c012-484a-bcfe-5be7b235b574": "minimum 5 students",
        "_label": "18"
      },
      "synopsis": "This module aims to introduce the latest research advancements in mobile and sensor systems and data analytics, spanning a range of domains including systems, data gathering, analytics and applications such as health, transportation, behaviour monitoring, cyber-physical systems, autonomous vehicles, drones. The course will cover current and seminal research papers in the area of research. In 2018-19, this is a single module that starts in Michaelmas Term and carries over into Lent Term. It is not a double module."
    },
    "R250": {
      "lecturer": {
        "911ab71c-02c9-4964-bc50-aa0efdb6eff3": "ejb1",
        "6630a763-128c-4746-8aae-7007be4756cc": "djw1005"
      },
      "classes": {
        "10196a47-7d9f-440f-9719-cb2a504a568b": "acs",
        "54cf8fd4-c03f-4374-98ce-f642baf8bf7a": "part3"
      },
      "term": "L",
      "hours": {
        "7b0ad6b4-d2ba-4728-b942-9721fcf827a5": "8 2-hours sessions",
        "_label": "16"
      },
      "_label": "Advanced topics in machine learning and natural language processing",
      "prerequisites": "L90 or L42 or similar, L95 and L101 for some topics",
      "class-limit": {
        "2ef498a6-64b8-42f9-af78-139de85938e6": "minimum topic size 6 students",
        "_label": "32"
      },
      "synopsis": "NEW: This course explores current research topics in machine learning and/or their application to natural language processing in sufficient depth that, at the end of the course, participants will be in a position to contribute to research on their chosen topics. Each topic will be introduced with a lecture which, building on the material covered in the prerequisite courses, will make the current research literature accessible. Each lecture will be followed by up to three seminar sessions which will typically be run as a reading group with student presentations on recent papers from the literature followed by a discussion."
    },
    "R252": {
      "lecturer": "acr31",
      "classes": {
        "8e3f393d-b9c1-416a-8309-3f482901acff": "acs",
        "b4def376-e183-44cd-bded-8f3145c8693a": "part3"
      },
      "term": "L",
      "hours": {
        "4b4d9294-9bec-4b87-9865-babcdfa0ab3b": "8 2-hours sessions",
        "_label": "16"
      },
      "_label": "Machine learning for programming",
      "prerequisites": "Undergraduate-level knowledge of compilers, program analysis, machine learning. Good programming skills are essential.",
      "contributor": {
        "d1d5bd48-02d6-40bc-afe4-e3e8424556b1": "MAllamanis",
        "2b55862a-4261-403c-b902-fa8bfeb1f2b4": "MBrockschmidt"
      },
      "class-limit": {
        "abbd7cb5-332e-4281-a46a-a5134147ea3f": "minimum 6 students",
        "_label": "16"
      },
      "synopsis": "NEW: This module investigates how machine learning techniques can be applied to the analysis and synthesis of computer programs. A variety of machine learning techniques will be covered considering different applications such as program repair, code suggestion, summarisation and comment-generation. The module will be structured around students reading papers and reproducing some recent results from the literature."
    },
    "R254": {
      "lecturer": {
        "4813bba5-0f93-421c-b6be-2b87f388fed7": "ah793",
        "84ebbac4-b2eb-4cbc-9c14-04ed8ae04e6b": "drt24",
        "5ce3b644-3b9b-4eae-8158-d93fbfde8258": "rnc1"
      },
      "classes": {
        "3e073a71-5403-472d-958e-474ea4271839": "acs",
        "9a184a86-d98c-414d-8b60-8b6daefd6be2": "part3"
      },
      "term": "L",
      "hours": {
        "935f5e8d-07e5-4075-8d4a-f82faa2b4763": "8 2-hours sessions",
        "_label": "16"
      },
      "_label": "Cybercrime",
      "prerequisites": "R209 Computer security: principles and foundations",
      "class-limit": {
        "3f2933e3-799f-4493-8168-7fc5d088ed1f": "minimum 6 students",
        "_label": "16"
      },
      "synopsis": "NEW: This module examines major topics relating to cybercrime from an interdisciplinary perspective. These include offense types and techniques, targets, victimisation, social and financial cost, criminal marketplaces, offenders, detection and prevention, and regulation and policing. The module outlines: Key debates in cybercrime research; how crime is committed using computer systems; and provides an understanding of how cybercrime is regulated, policed, detected and prevented."
    },
    "R260": {
      "lecturer": "js573",
      "classes": {
        "f9d4f108-7082-4180-b7d5-d7bca64d2076": "acs",
        "1fd12278-20e1-4774-a74e-15d554c6a89e": "part3"
      },
      "term": "L",
      "hours": {
        "7f011ef9-133e-4ca9-9a5f-02905823e690": "8 2-hour sessions",
        "_label": "16"
      },
      "_label": "Technology and law",
      "prerequisites": "R209 Computer security: principles and foundations",
      "contributor": {
        "ff7a9feb-6b50-4cac-9d15-e5190a542240": "jc2106",
        "8e78b2ce-0332-4fd6-b1d9-37c983e5cf80": "hlj36",
        "4b988a75-71b1-4477-803a-47bfb54fde3b": "ijw24"
      },
      "class-limit": {
        "697add91-81d6-4513-8122-aaf029ea735c": "minimum 6 students",
        "_label": "12"
      },
      "synopsis": "NEW: Digital technology is increasingly the subject of social commentary, political scrutiny and regulatory attention. This module will explore the interface between law, policy, and emerging technology. The topics covered will be in line with current tech-legal discussions, including issues of: personal data and data protection (including the General Data Protection Regulation); algorithmic accountability and so-called âFATMLâ (Fairness, Accountability & Transparency in Machine Learning); cloud computing, e.g. the implications service models and service composition; the physicality and complexity of the Internet of Things; and general issues of security, privacy and trust. Along the way, this module will identify mismatches between technology and the law and highlight opportunities for future research."
    },
    "L11": {
      "lecturer": "tgg22",
      "classes": {
        "b2c326db-731b-4861-b22c-e16708563c84": "acs",
        "bfef3dd2-966d-4eea-84dc-695d363b0986": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Algebraic Path Problems",
      "prerequisites": "An undergraduate course in discrete mathematics.",
      "class-limit": {
        "07b58e56-980c-4518-9886-1e5e5ca5118c": "minimum 5 students",
        "_label": "20"
      },
      "synopsis": "A great deal of interesting work was done in the 1970s in generalizing shortest path algorithms to a wide class of semirings â called âpath algebrasâ or âdioidsâ. Although the evolution of Internet Routing protocols does not seem to have taken much inspiration from this work, recent âreverse engineeringâ efforts have demonstrated that an algebraic approach is very useful for both understanding existing protocols and for exploring the design space of future Internet routing protocols. This course is intended to present the basic mathematics needed to understand this approach. No previous background will be assumed. The course will start from scratch and end with open research problems. Many examples inspired by Internet Routing will be presented along the way."
    },
    "L15": {
      "lecturer": "ad260",
      "classes": {
        "e401bc4d-0257-4a51-8417-fc0963a0a7cb": "acs",
        "accc8cc9-dac3-417a-ab4b-99868225509f": "part3"
      },
      "hours": 16,
      "_label": "Topics in Logic and Complexity",
      "prerequisites": "Undergraduate courses in complexity theory, computation theory and first-order logic",
      "synopsis": "The course covers the use of methods from logic in the study of  \n        computational complexity as well as aspects of logic that can be  understood from the perspective of complexity.  \n        In particular, it  focuses on the study of the expressive power of logical formalisms and  methods for proving limitations on this."
    },
    "L18": {
      "lecturer": "mj201",
      "classes": {
        "dc263585-0fdd-4a5d-9bb8-287c132ae38e": "acs",
        "1c20c8c3-b0a1-4d48-9fef-53d50360613b": "part3"
      },
      "hours": 16,
      "_label": "Automated Reasoning",
      "prerequisites": "Familiarity with basic logic and artificial intelligence beneficial",
      "class-limit": 16,
      "synopsis": "NB: Not offered in 2017-2018. Provides an introduction to how reasoning can be automated from an AI perspective. \n        The course will introduce students to fundamental techniques for designing and implementing automated reasoners, \n        and present advanced uses of theorem proving for solving mathematical problems via automated reasoning."
    },
    "L21": {
      "lecturer": "lp15",
      "classes": {
        "4013be20-8bb0-4cf3-abc1-749172c6b667": "acs",
        "0f3e4673-3f84-49e9-91e9-5a19c2ebb3e9": "part3"
      },
      "term": "M",
      "hours": {
        "4d7f087a-3f0a-4c1b-903c-29f80f74dad5": "12 lectures and 4 practical classes",
        "_label": "16"
      },
      "_label": "Interactive Formal Verification",
      "prerequisites": "Familiarity with basic logic and operational semantics",
      "synopsis": "Introduces students to interactive theorem proving using Isabelle. It includes techniques for specifying formal models of software and hardware systems and for deriving properties of these models."
    },
    "L22": {
      "lecturer": "gw104",
      "classes": {
        "db571713-7763-4c80-8648-ddaaeee92ba8": "acs",
        "d37d3632-37ad-4789-96bb-066e0fffbf06": "part3"
      },
      "hours": 8,
      "_label": "Advanced Topics in Concurrency",
      "prerequisites": "Category theory course such as Category Theory and Logic L108 module",
      "synopsis": "How can the ideas and methodology of denotational semantics and domain theory be extended and generalized to the richer world of interacting concurrent processes? Using ideas and techniques from semantics and category theory this half-module will guide the student to recent research in domain theory for concurrency."
    },
    "L23": {
      "lecturer": "amp12",
      "classes": {
        "7a9557a0-47a0-4ed4-9d83-7b47300ac4cd": "acs",
        "2c9211cb-a0bb-4cb8-97d8-9dc866b0ad73": "part3"
      },
      "hours": 8,
      "_label": "Nominal Sets and Their Applications",
      "prerequisites": "Logic and set theory (e.g. Discrete Mathematics I and II from CST Part IA) and operational semantics of typed programming languages (e.g. Semantics of Programming Languages from CST Part IB). Familiarity with some elementary category theory (such as the Category Theory and Logic L108 module).",
      "synopsis": "Names and constructs that bind names are ubiquitous in programming languages. Nominal sets provide a mathematical theory of structures involving names, based on some simple, but subtle ideas to do with symmetry and computing with data structures that are infinite, but finite modulo symmetry. The theory has applications to programming language semantics, machine-assisted theorem proving and the design of functional and logical metaprogramming languages. The course introduces the theory of nominal sets, survey some of its applications and highlight potential areas for further research."
    },
    "L24": {
      "lecturer": "mpf23",
      "classes": {
        "ab151d5f-1689-4bac-9010-d7ee09591a62": "acs",
        "b8e860c5-9da7-4e67-b374-53740c848c0b": "part3"
      },
      "hours": 8,
      "_label": "Categorical Models of Computational Languages",
      "prerequisites": "L108 Category Theory and Logic; knowledge of the material in the Part II `Denotational Semantics' and `Types' courses would be a bonus.",
      "synopsis": "The course explores the mathematical structures used to model a wide range of computational languages. These will be considered from the following viewpoints: (i) type discipline; (ii) data structuring; (iii) calling mechanisms; (iv) programming primitives; (v) resource management; and (vi) operational semantics. Overall we will look at: (i) untyped and typed languages, and, amongst the latter, simple, polymorphic, and dependently typed; (ii) inductive and recursively defined datatypes; (iii) call-by-name, call-by-value, and mixed paradigms; (iv) computational effects and control operators; (v) linearity; and (vi) reduction vs interaction. "
    },
    "L25": {
      "lecturer": "dc552",
      "classes": {
        "7f8b91dd-4ab9-493f-ab8e-a326b3db799f": "acs",
        "3fba3c2d-875d-4336-ab08-14086ec08c84": "part3"
      },
      "hours": {
        "d4568f04-2b1b-4d9f-bedd-e59c14400dfb": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Modern Compiler Design",
      "prerequisites": "Undergraduate compilers course. Some assembly language programming for a RISC-like architecture would be helpful. Students will be expected to have a working knowledge of C++ and students who have no experience with the language should expect to spend some time with a C++ tutorial before or during the course.",
      "contributor": {
        "3b7068c2-8e40-4d44-820d-964420e97216": "tgg22"
      },
      "synopsis": "The LLVM project provides a modular set of libraries for building compilers, used in both academic research and industry.  It therefore provides a rare opportunity for students to gain experience with a system that is both state-of-the-art in terms of research and also of direct industrial relevance.  The course will focus largely one middle of the compiler â the analysis, transform, and optimisation pipeline â and will require the students to design and implement language-specific optimisations."
    },
    "L26": {
      "lecturer": {
        "4e1051cf-0982-4b7e-9b91-7450c6dcd4cb": "mjcg",
        "b1eae869-d9db-4216-a8f0-cc5136837a5d": "mom22"
      },
      "classes": {
        "3e67aa50-79e5-4df8-aefd-55b3a3494031": "acs",
        "1d662f1e-3227-4b84-a1dd-9a19adac9ec8": "part3"
      },
      "hours": 16,
      "_label": "Functional Programming: Implementation, Specification and Verification",
      "synopsis": "This course has two aims that will be addressed in parallel. The first aim is to teach basics of functional programming languages and how they are implemented. The second aim is to teach how such concepts can be modelled precisely, using formal specifications, and how proof can be used to establish, to a high degree of assurance, that their low-level implementations faithfully implement the high-level specifications."
    },
    "L28": {
      "lecturer": {
        "fd8bdd94-daee-481e-b129-d8ac553b8860": "jdy22",
        "7375ddbe-8a7e-4d3b-a591-8371144fb9e2": "na482"
      },
      "classes": {
        "754b15fc-cec1-4e4a-a8a3-7cd212e61925": "acs",
        "3a6f70b9-87ac-4406-9c13-209ff05ecfbd": "part3"
      },
      "hours": 16,
      "_label": "Advanced Functional Programming",
      "prerequisites": "Students wishing to take the module should have some experience of a typed functional programming language and an understanding of type inference.",
      "class-limit": {
        "d4d6ebe7-689e-4583-adfb-b3ec7ed4d66a": "no class limit, minimum 4 students"
      },
      "synopsis": "This module shows how to use the features of modern typed functional programming languages such as OCaml and Haskell to design and implement libraries and DSLs.  It introduces a variety of programming techniques for improving both correctness and efficiency."
    },
    "L29": {
      "lecturer": {
        "4a9837e2-6211-4250-95df-7a167d53d94b": "mpf23",
        "7ffa5d5f-a968-4126-886b-ed6143f4e158": "ok259"
      },
      "classes": {
        "1b2c5058-2dab-4041-b6e5-e6f850e40a5f": "acs",
        "2e361166-65c9-4176-a1fa-52126eecdc22": "part3"
      },
      "hours": 16,
      "_label": "Advanced Topics in Denotational Semantics",
      "prerequisites": "L108 Category Theory and Logic; knowledge of the material in the CST Part II Denotational Semantics and Types courses recommended.",
      "synopsis": "This module aims to bring students up to date with current research in the denotational approach to the semantics of programming languages, with the\n    objective of training students to start research in theoretical computer science on the mathematical foundations of programming languages and its\n    applications."
    },
    "L30": {
      "lecturer": "gw104",
      "classes": {
        "ac74d090-3f7d-4621-b1f9-c3c0c21e0371": "acs",
        "5321e6f6-8f1b-42d6-8679-24bbb5255f2b": "part3"
      },
      "hours": {
        "6110a2f9-381c-4b2f-bd01-4cd6bd27ed11": "Eight 2-hour seminar sessions",
        "_label": "16"
      },
      "_label": "A Mathematical Theory of Distributed Games and Strategies",
      "prerequisites": "Some category theory; a knowledge of denotational semantics would also be helpful.",
      "synopsis": "This module will give an introduction to ongoing research in developing a mathematical theory of distributed games in which a Player (or a team of players) can interact and compete against an Opponent (or a team of opponents) in for instance, enforcing that their moves occur in a sequential fashion, or need to alternate. Although phrased in terms of `Player' and `Opponent' the dichotomy Player vs. Opponent can stand for Process vs. Environment, Prover vs. Disprover, or Ally vs. Enemy. These alternatives indicate the wide range ofpotential applications in computer science, logic, and beyond."
    },
    "L40": {
      "lecturer": {
        "d8d50208-b6aa-4fca-be2f-b615f542027a": "rkh23",
        "cb429d52-2bb4-4ca0-8d39-7ac6a2a50f43": "rmf25"
      },
      "classes": {
        "8b3181cf-b090-4393-bfc5-f13810f32cea": "acs",
        "523d2f7c-32cd-48db-8ef5-ace0bb416b59": "part3"
      },
      "hours": 16,
      "_label": "Sensor Fusion and Location Aware Computing",
      "synopsis": "NB: Not to be offered. This module provides a thorough understanding of modern sensor fusion and positioning techniques;  a thorough understanding of the application of machine learning to positioning problems, from sensor bias determination to SLAM; exposure to current location aware computing systems, approaches, ongoing challenges; and practical experimentation and system development of a fully-working and relatively-advanced smartphone-based indoor positioning system."
    },
    "L41": {
      "lecturer": "gcj21",
      "classes": {
        "d6e28c7a-b220-4f24-8692-50bee8760d4a": "acs",
        "18296616-58ac-4853-ad3b-07e25059d11c": "part3"
      },
      "term": "L",
      "hours": {
        "06158df1-d808-499d-935b-ba44a34f23ba": "6 one-hour lectures, 5 two-hour practical labs",
        "_label": "16"
      },
      "_label": "Advanced Operating Systems",
      "prerequisites": "Undergraduate Operating Systems course. See the full prerequisites on the syllabus page.",
      "class-limit": {
        "6acf2223-3858-4491-9594-5fb247975019": "minimum 5 students",
        "_label": "16"
      },
      "synopsis": "Operating systems are complex, concurrent, and rapidly evolving software systems: the process model, hardware abstraction, storage and networking services, security primitives, and tracing/analysis/debugging tools are a critical foundation for our contemporary computing environments. This course teaches a blend of operating-system design and implementation as well as systems research methodology through a series of lectures and practical material split into three two-week sub-modules.  The first module considers OS design, instrumentation, and measurement, motivated by a lab on I/O performance and the process model. The remaining two sub-modules focus on OS and micro-architectural analysis of Inter-Process Communication (IPC) and the Transport Control Protocol (TCP). Measurement and evaluation are a core aspect of the module: through labs and practical exercises, students will gain a deeper understanding of core principles in system behaviour, as well as analysis skills and intuitions that will serve them in future systems development and research. Lectures will consider methodology, systems principles, systems implementation, and current research in operating systems."
    },
    "L42": {
      "lecturer": {
        "4619eea3-adb2-49d9-80a8-0e27c6e556ea": "mj201",
        "452c2fdc-fa46-4018-a7ee-609e2a433058": "pl219",
        "bc3831df-ab64-4dae-ac24-344f07d70547": "tms41"
      },
      "classes": {
        "07eddc51-970a-452c-aab6-1768898f5e0e": "acs",
        "8951cbe3-e07d-41b2-94b6-8287d93a347b": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Machine Learning",
      "prerequisites": "None, but recommend courses on the principles of data science, and familiarity with basic mathematics, artificial intelligence, algorithms, statistics beneficial.",
      "class-limit": {
        "55a9cd55-65dd-4263-b3f2-035a937af4c9": "no limit, minimum 5 students"
      },
      "synopsis": "This module aims to introduce students to basic principles and methods of machine learning algorithms that are typically used for mining large data sets. In particular, we will look into algorithms typically used for analysing networks, fundamental principles of techniques such as decision trees and support vector machines, and finally, neural network architectures. The students will gain practical understanding through a coding exercise where they will implement and apply one machine learning algorithm on a particular large data set. "
    },
    "L44": {
      "lecturer": "hg410",
      "classes": {
        "2ee969b9-9ecd-4537-b3ff-81d2c061e3a7": "acs",
        "18f6a356-2970-44cc-bc0d-83959b87219d": "part3"
      },
      "hours": 16,
      "_label": "Affective Computing",
      "prerequisites": "Matlab programming skills, basic background in signal/image processing and/or machine learning desirable",
      "class-limit": {
        "2f8e9a5c-8a42-47d2-b9a9-56f9b4c5edfa": "minimum 5 students",
        "_label": "20"
      },
      "synopsis": "Affective Computing is a multidisciplinary field of research and practice concerned with understanding, recognizing and utilizing human emotions, expressions and communicative behaviour in the design of computational systems ranging from user-adaptive entertainment technology (gaming/arts) to assistive technology in clinical and biomedical context (e.g., autism/depression) and designing social robots.\nAffective computing has established itself in the last 15 years as a cohesive sub-discipline in computer science with its own international conference (the International Conference on Affective Computing and Intelligent Interaction), journal (the IEEE Transaction on Affective Computing), and professional society (the Association for the Advancement of Affective Computing (AAAC), former HUMAINE Association). Progress in the field has triggered increasing industry interest â in January 2016 Apple Inc. purchased Emotient Inc., a startup that uses artificial-intelligence technology to read peopleâs emotions by analyzing facial expressions."
    },
    "LE49": {
      "lecturer": "cer54",
      "classes": {
        "79d71a51-25c6-4bbd-b53c-27705adbe3b0": "acs",
        "803ea353-33e6-41be-acac-520cd63bcf16": "part3"
      },
      "term": {
        "3cebdf8e-a2f0-4a8c-be02-ea4f7555921f": "L",
        "_label": "M"
      },
      "hours": {
        "a7a19a7d-cfd9-4d80-9cbe-42dc54dd8e1b": "14 lectures at the Department of Engineering, 2 examples classes; Lectures for this module are offered by the Department of Engineering, Trumpington Street site, during Michaelmas Term, Mondays 9 a.m. and Thursdays at 12. Practical work in Lent term is administered and assessed by the Department of Computer Science and Technology.",
        "_label": "18"
      },
      "_label": "Probabilistic Machine Learning",
      "prerequisites": "Strong background in statistics, calculus and linear algebra will be required. Note that the lectures in this course are primarily oriented toward Cambridge Engineering students. More detail of prerequisites should be reviewed on the Engineering Department website: http://mlg.eng.cam.ac.uk/teaching/4f13/1617/\n\tStudents are asked to talk with their Course Adviser before selecting this module.",
      "contributor": {
        "4c5fc2c2-d2e0-43d0-a994-691c86a2cfc5": "djw1005"
      },
      "class-limit": 12,
      "synopsis": "Probabilistic machine learning is an interdisciplinary field focusing on both the mathematical foundations and practical applications of systems that learn, reason and act. The goal of machine learning is to automatically extract knowledge from observed data for the purposes of making predictions, decisions and understanding the world. \n\tThe aim of this module is to introduce students to basic concepts in machine learning, focusing on statistical methods for supervised and unsupervised learning. The module will be structured around three recent illustrative successful applications: Gaussian processes for regression and classification, Latent Dirichlet Allocation models for unsupervised text modelling and the TrueSkill probabilistic ranking model. In 2018-19, this is a single module that starts in Michaelmas Term and carries over into Lent Term. It is not a double module."
    },
    "L50": {
      "lecturer": "nz247",
      "classes": {
        "3d3a903b-f248-41ba-ac6b-7792bca58c6d": "acs",
        "4faf93f8-c60b-4591-956b-f1f2fb0712c8": "part3"
      },
      "term": "M",
      "hours": {
        "cd31b04b-f51e-4dc3-af28-3e79297b81ac": "6 lectures and 10 hours of supervised laboratory sessions (guided tutorials/practicals)",
        "_label": "16"
      },
      "_label": "Introduction to networking and systems measurements",
      "prerequisites": "Undergraduate courses in digital communication",
      "synopsis": "Systems research refers to the study of a broad range of behaviours arising from a complex system design, including: resource sharing and scheduling; interactions between hardware and software; network topology, protocol and device design and implementation; low-level operating systems; Interconnect, storage and more. This module will: teach performance measurement methodology and practice through profiling experiments; expose students to real-world systems artefacts evident through different measurement tools; develop scientific writing skills thorough a series of laboratory reports; and provide research skills for characterization and modelling of systems and networks using measurements."
    },
    "L90": {
      "lecturer": {
        "8726e7d7-5b69-4865-ad30-aa2c178a837a": "sht25",
        "c6a81415-9e44-497d-bfd0-83fcc1d67bd8": "pjb48"
      },
      "classes": {
        "2fe05f60-2662-4f04-81ab-4c26b6497121": "acs"
      },
      "term": "M",
      "hours": {
        "963f6745-7efe-4d51-b26a-ac70ac418353": "12 lectures and 3 x 2 hour practical sessions",
        "_label": "18"
      },
      "_label": "Overview of Natural Language Processing",
      "prerequisites": "No prerequisites beyond those topics covered in an undergraduate CS degree",
      "class-limit": 10,
      "synopsis": "This module introduces the fundamental techniques of natural language processing. \n\tIt aims to explain the potential and the main limitations of these techniques. Some current research issues are introduced and some current and potential applications discussed and evaluated."
    },
    "L95": {
      "lecturer": {
        "40322946-f6c6-4eae-af12-a87f8a30a9c4": "ejb1",
        "7dd996e5-2082-4bc3-878d-f350f115ae78": "pjb48"
      },
      "classes": {
        "4d2ec068-17e4-4988-9dc3-efb00132d94b": "acs",
        "dac2ea66-b423-4ed5-a405-b6e6278aab6f": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Introduction to Natural Language Syntax and Parsing",
      "prerequisites": "L90 or other Natural Language Processing course",
      "class-limit": 16,
      "synopsis": "This module aims to provide a brief introduction to linguistics for computer scientists and then goes on to cover some of the core tasks in natural language processing (NLP), focussing on statistical tagging and parsing. We will look at how to evaluate taggers and parsers and see how well state-of-the-art tools perform given current techniques."
    },
    "L100": {
      "lecturer": {
        "58169fcc-e048-4b80-a7ae-58d350f02ad6": "ejb1",
        "aaf2835b-6887-4c64-abcf-b65857c76447": "sc609"
      },
      "classes": {
        "6b38c079-fc2a-4a29-93d3-58ce1b80e6af": "acs",
        "dfd007a7-6fc7-40db-99f8-53743468dfbb": "part3"
      },
      "hours": 16,
      "_label": "Introduction to Natural Language Processing",
      "prerequisites": "None",
      "synopsis": "This module aims to provide a brief introduction to linguistics for computer scientists and then goes on to cover some of the core tasks in natural language processing (NLP), with the emphasis on statistical techniques suitable for the extraction of meaning from large bodies of text. Finally we will consider some applications and evaluate how well they work given current techniques."
    },
    "L101": {
      "lecturer": {
        "71266704-c783-4dac-a970-ffabde48781d": "ejb1"
      },
      "classes": {
        "14699993-cca3-4554-805e-ca9ce7b08ec9": "acs",
        "a205768d-aa14-4bf9-8208-16c49be0782c": "part3"
      },
      "term": "M",
      "hours": {
        "623467ba-0a18-429f-8c5d-d48651464a62": "8 lectures + 8 seminar sessions",
        "_label": "16"
      },
      "_label": "Machine Learning for Language Processing",
      "prerequisites": "L90 Overview of Natural Language Processing or similar, L95 Introduction to Natural Language Syntax and Parsing",
      "class-limit": 16,
      "synopsis": "This module aims to provide an introduction to machine learning with specific application to tasks such as document classification, spam email filtering, language modelling, part-of-speech tagging, and named entity and event recognition for textual information extraction. We will cover supervised, weakly-supervised and unsupervised approaches using generative and discriminative classifiers based on graphical models, including (hidden) Markov models and CRFs, and clustering / dimensionality-reduction methods, such as latent Dirichlet allocation and neural word embeddings."
    },
    "L102": {
      "lecturer": {
        "74d188a0-b008-48e9-885c-2aeb4f568d98": "sc609",
        "b844afb1-a41e-43f2-a770-eaa85017f8ff": "wjb31"
      },
      "classes": {
        "1701bb51-9228-43b9-bf10-599482020108": "acs",
        "b1862384-1ae6-45dc-a8ca-e9bb0bf9094d": "part3"
      },
      "hours": {
        "c972a9b4-7697-4d9e-8cbf-cdd7c5e22f02": "10 lectures + extended practical session covering 6 sessions",
        "_label": "16"
      },
      "_label": "Statistical Machine Translation",
      "prerequisites": "L100 Introduction to Natural Language Processing",
      "synopsis": "This module provides an in-depth introduction to Statistical Machine Translation, the dominant approach to providing large-scale, robust translation applicable to many language pairs (and the approach currently used by Google)."
    },
    "L106": {
      "lecturer": {
        "dee4c0d9-5602-46e2-a87b-c90e69a8cfb1": "pw117",
        "16761d8f-2ccb-49a2-9fa9-5268775ef5a2": "mjfg100",
        "be9a1f84-2513-4267-a379-59eb24ab5389": "wjb31"
      },
      "classes": {
        "6f382fe1-ca48-4213-b9d7-2a48846daa3b": "acs",
        "8ca00cb1-c039-4442-9457-dfd7bda59987": "part3"
      },
      "hours": {
        "9ac3345a-619a-4933-9d41-8a42b84a0cfe": "14 lectures + 2 practical sessions",
        "_label": "16"
      },
      "_label": "Spoken Language Processing",
      "synopsis": "The aim of this module is to introduce the underlying statistical approaches and some of the major techniques used for spoken language processing. Core statistical models that are used in a wide-range of speech and language applications will be discussed along with their underlying theory. Examples of how these models may be applied to speech processing applications, such as speech recognition and speaker verification, will be described."
    },
    "L107": {
      "lecturer": {
        "16691bde-5024-4a90-a951-a5a1c2b04bdf": "ejb1",
        "ac5404d0-00c1-4211-9f70-ae875891aeba": "sc609"
      },
      "classes": {
        "9caded57-d062-40bc-a81c-131bccd7d48f": "acs",
        "f4045dc9-4ecf-48d0-96e8-fe197852f592": "part3"
      },
      "hours": 16,
      "_label": "Advanced Syntax and Semantics of Natural Language",
      "prerequisites": "NB: Not to be offered in 2015-2016. L95 Introduction to Natural Language Syntax and Parsing and a course in logic.",
      "synopsis": "We will take an in-depth look at how to describe formally a wide-coverage grammar of English using Categorial Syntax and Montague Semantics. We will then go on to study how practical parsers can be developed within this framework capable of returning the most likely compositional interpretation of sentences with high accuracy."
    },
    "L108": {
      "lecturer": "amp12",
      "classes": {
        "db0e7924-0211-46d9-b4bf-63167525cfef": "acs",
        "3c12358c-604d-449c-bd49-2d4a22921283": "part3"
      },
      "term": "M",
      "hours": 16,
      "_label": "Category Theory",
      "prerequisites": "Basic familiarity with basic logic and set theory (e.g. Discrete Mathematics I and II from Part 1A Computer Science course), with the lambda calculus (e.g. Part 1A Foundations of Computer Science) and with inductively-defined type systems (e.g. Part 1B course on Semantics of Programming Languages)",
      "class-limit": {
        "6be3e377-ae94-4ce1-9971-0096eabf9551": "minimum 5 students",
        "_label": "16"
      },
      "synopsis": "Category theory provides a unified treatment of mathematical properties and constructions that can be expressed in terms of\n\t<q>morphisms</q> between structures. It gives a precise framework for comparing one branch of mathematics (organized as a category) with another and for the transfer of problems in one area to another. Since its origins in the 1940s motivated by connections between algebra and\tgeometry, category theory has been applied to diverse fields, including computer science, logic and linguistics. This course\n\tintroduces the basic notions of category theory: adjunction, natural transformation, functor and category. We will use category theory to\n\torganize and develop the kinds of structure that arise in models and semantics for logics and programming languages."
    },
    "L109": {
      "lecturer": "cm542",
      "classes": {
        "12597d06-5bc8-43e3-8f14-5aa5092a17d4": "acs",
        "6b3bd444-2c1b-4ba6-9ff8-1a224b1d49b8": "part3"
      },
      "hours": 16,
      "_label": "Social and Technological Network Data Analytics",
      "prerequisites": "An undergraduate course on probability",
      "class-limit": 18,
      "synopsis": "This module aims to introduce concepts of complex and social network analysis and its application to real social and technological networks datasets. The course is complemented by practical analysis of large datasets\n    of networks of various types using the concepts taught."
    },
    "L110": {
      "lecturer": {
        "f00e0ab2-645b-4270-96c7-ebbb154bac15": "aib29",
        "_label": "tbc"
      },
      "classes": {
        "5ea1d4c6-9643-4a30-bc41-7cf88f4280db": "acs",
        "085b24ac-9c5c-4c10-9db8-f72608244dd8": "part3"
      },
      "hours": {
        "19893787-fbe0-438e-b2dc-7478f9529b2e": "14 lectures + 2 example classes",
        "_label": "16"
      },
      "_label": "Flows in Networks",
      "prerequisites": "Familiarity with the basics of mathematical optimization problems, graph theory, game theory and packet-based communication networks",
      "synopsis": "NB: Not to be offered in 2015-2016. This module aims to provide a understanding of models for flows in networks and to illustrate these ideas by considering road and communication networks."
    },
    "L114": {
      "lecturer": "sht25",
      "classes": {
        "1a2985e9-f1e2-4cad-b43a-e41c9738e00e": "acs",
        "f81e1bb4-78e0-44fd-a62c-5d2c03764ae5": "part3"
      },
      "hours": {
        "cd1069d4-687a-4bcd-9ee2-e8a3b1f12c04": "8 Ã two-hour lecture sessions",
        "_label": "16"
      },
      "_label": "Lexical Semantics",
      "prerequisites": "L90 Overview of Natural Language Processing",
      "synopsis": "This module provides an introduction to NLP research centered around lexical semantics (i.e., aspects of the meaning of words and relations between word meanings). Relevant phenomena are described theoretically, followed by a description of algorithms for determination of meaning and detection of text structure are presented. Special attention is given to adequate evaluation methods in each area. Applications are also discussed, where appropriate."
    },
    "L115": {
      "lecturer": "sht25",
      "classes": {
        "035864e6-994e-410c-b445-8f82db62758b": "acs",
        "0f880f80-cbef-415a-b59b-fb2315cb4e7c": "part3"
      },
      "hours": {
        "3503f892-2d95-48df-a5bb-dc43dcaea54e": "8 Ã two-hour lecture sessions",
        "_label": "16"
      },
      "_label": "Discourse and Text Summarisation ",
      "prerequisites": "L100 Introduction to Natural Language Processing",
      "synopsis": "This module provides an introduction to NLP research centered around discourse processing (i.e., the means by which larger pieces of text are structured), and to text summarisation methods, particularly those based on discourse processing."
    },
    "L120": {
      "lecturer": "tbc",
      "classes": {
        "1abd4557-fb53-424b-8134-966bc06bd883": "acs",
        "5f11e251-fb48-48c6-a794-013959b49fb0": "part3"
      },
      "hours": 16,
      "_label": "Principles of Data Science",
      "prerequisites": "Undergraduate level mathematical knowledge of linear algebra, calculus, optimization, probability and statistics together with some experience with at least one language or package to handle data analysis.",
      "class-limit": 15,
      "synopsis": "This module will introduce students to the principles of Data Science that underpin key tools and techniques used both to describe and to gain insights into the properties of often large and complex datasets. The theory with case studies taken from real-world application domains such as communications networks and road transport networks. The case studies will also highlight the use of modern software packages including R for both statistical computation as well as the graphical visualisation of statistical properties and results."
    },
    "L320": {
      "lecturer": "tbc",
      "classes": {
        "d3454209-fbd4-4aed-9928-567c4d29a6dc": "acs"
      },
      "hours": 16,
      "_label": "Data Science: principles and practices",
      "prerequisites": "University-level mathematics similar to Part IA Mathematics in the Natural Science; courses in machine learning and real-world data; foundation course in data science",
      "synopsis": "The course will develop core areas of Data Science (eg models for regression and classification) from several perspectives: conceptual formulation and properties, solution algorithms and their implementation, data visualization for exploratory data analysis and the effective presentation of modelling outputs.  The lectures will be complemented by practical classes using Jupyter notebooks and relevant software such as Python, R and Spark. The course may be suitable for MPhil students who have not studied statistical learning (machine learning) at an undergraduate level. The course is borrowed from Part II of the Computer Science Tripos but is assessed differently."
    },
    "P31": {
      "lecturer": {
        "6e802bf5-1d4c-405f-b2d4-456f8ed2256b": "bdj23",
        "_label": "ijw24"
      },
      "classes": {
        "09ddf872-0214-444c-93f6-d5a85d3e4f7b": "acs",
        "8c43ac37-4cc1-4b53-892b-b385c49cb865": "part3"
      },
      "hours": {
        "5778d560-4dd7-493a-a794-2a9e22eca695": "8 Ã two-hour seminar sessions",
        "_label": "16"
      },
      "_label": "Low Power Embedded Systems Programming",
      "prerequisites": "Good working knowledge of C. Familiarity with analog and digital hardware would be advantageous.",
      "class-limit": 6,
      "synopsis": "NB: Not to be offered in 2015-2016. Teaches students how to write programs for low power embedded devices that communicate with other computers or devices to solve practical problems. The course will cover the relevant theoretical knowledge required for writing such applications, and the practical experience writing C programs for Atmel microprocessors. The module will also give students an appreciation for some of the research issues in low power embedded systems."
    },
    "P33": {
      "lecturer": "awm22",
      "classes": {
        "c9c598cc-419a-446e-9b11-4f0922157cde": "acs",
        "509a17d2-27ee-4bce-b2d0-d97bbca1f503": "part3"
      },
      "hours": {
        "7d1d22bd-1eb9-460b-aa52-19967d21e5cc": "1 introductory lecture + 8 Ã two-hour supervised laboratory slots",
        "_label": "16"
      },
      "_label": "Building an Internet Router",
      "prerequisites": "Undergraduate courses in digital communication, good working knowledge of C/C++, ECAD, Unix",
      "synopsis": "This module requires the full design, implementation, testing and inter-operability of a complex hardware and software system."
    },
    "P34": {
      "lecturer": "swm11",
      "classes": {
        "515cebb1-f083-49dc-982f-66ec261f4a8c": "acs",
        "cd14942f-7ec0-4abb-a316-c1c61ab23437": "part3"
      },
      "hours": {
        "892969e6-9f3f-4142-9023-e60778c1e6f9": "8 lectures + 8 practicals",
        "_label": "16"
      },
      "_label": "Advanced Computer Design",
      "prerequisites": "Some training in VHDL or Verilog HDL and computer architecture",
      "synopsis": "The aim of this module is to provide an introduction to undertaking multithreaded multiprocessor computer architecture research using FPGAs as an emulation platform."
    },
    "P35": {
      "lecturer": "djg11",
      "classes": {
        "6a004e1e-acd0-4cde-815c-c899ae9420c9": "acs",
        "949bca07-dc30-46c5-ac41-6e28ada2d914": "part3"
      },
      "hours": {
        "587d85c2-9128-497e-8b67-a998c588b0b9": "8 lectures + 8 practicals/coursework and research project option",
        "_label": "16"
      },
      "_label": "System on Chip Design and Modelling",
      "prerequisites": "Some experience with VHDL/Verilog RTL, Assembler, C++",
      "class-limit": {
        "413c0828-54ea-4f1a-b1c6-e844e2c34a79": "minimum 4 students"
      },
      "synopsis": "A current-day system on a chip (SoC) consists of several different microprocessor subsystems together with memories and I/O interfaces. This practical module covers SoC design and modelling techniques with emphasis on architectural exploration, assertion-driven design and the concurrent development of hardware and embedded software."
    },
    "P36": {
      "lecturer": "acr31",
      "classes": {
        "7f178a5b-4c99-4ed5-8b43-298803ec8802": "acs",
        "1468cab0-5a58-4086-b1fc-dc6ba0bdbf9c": "part3"
      },
      "hours": {
        "d710f0fa-fca4-4642-99ac-2b9f7858ea14": "8 Ã one-hour lectures + 8 Ã one-hour practical classes",
        "_label": "16"
      },
      "_label": "Programming for Mobiles",
      "prerequisites": "Programming in Java; and undergraduate course in digital communication",
      "synopsis": "Developing applications for modern smart phones requires different considerations to writing for a conventional PC environment. This course will cover the relevant background knowledge required to effectively develop for modern smart phones, discuss the differences between current popular platforms and highlight some of the ongoing research questions. Practical experience will be provided implementing concepts from lectures in practical classes using the Android operating system."
    },
    "P51": {
      "lecturer": {
        "a63f2a45-8fa1-436d-ba2e-9cf868dc108f": "nz247"
      },
      "classes": {
        "693e8bf5-eb6b-4fe9-9aea-1b5f10d02ec7": "acs",
        "5b23ef00-b6b5-4eb0-97a2-412093adf21e": "part3"
      },
      "term": "L",
      "hours": {
        "9bd524fa-bc36-4541-a7b4-b1ced186d097": "6 lectures and 10 supervised laboratory sessions",
        "_label": "16"
      },
      "_label": "High performance networking",
      "prerequisites": "Undergraduate courses in digital communication, good working knowledge of C/C++, ECAD, Unix. ",
      "class-limit": {
        "2fb0394d-ed45-48f1-921b-ca0b0883bfc4": "minimum 2 students",
        "_label": "16"
      },
      "synopsis": "NEW: This module provides an introduction to High Performance Networking. It explores both software and hardware aspects and provides the students with an opportunity to experience high performance networking design and usage first hand."
    },
    "P201": {
      "lecturer": "afb21",
      "classes": {
        "d4625d30-3000-404b-bad3-506db854a1e2": "acs",
        "7af7b034-11b6-4515-9471-bd481bb1ac8a": "part3"
      },
      "hours": {
        "917119e6-19d8-41b9-9894-7deedce7acd9": "4 x introductory lectures, 4 Ã two-hour seminar sessions, 2 x demonstrated experimental sessions",
        "_label": "16"
      },
      "_label": "Usability of Programming Languages",
      "prerequisites": "Introductory HCI course presumed, but not essential",
      "class-limit": 15,
      "synopsis": "Compiler construction is one of the basic skills of all computer scientists, and thousands of new programming, scripting and customisation languages are created every year. Yet very few of these succeed in the market, or are well regarded by their users. This course addresses the research questions underlying the success of new programmable tools. A programming language is essentially a means of communicating between humans and computers. Traditional computer science research has studied the machine end of the communications link at great length, but there is a shortage of knowledge and research methods for understanding the human end of the link. This course provides practical research skills necessary to make advances in this essential field. The skills acquired will also be valuable for students intending to pursue research in advanced HCI, or designing evaluation studies as a part of their MPhil research project."
    },
    "RSL": {
      "lecturer": "tbc",
      "classes": {
        "cf40bac9-c57a-4dcc-86bb-74e3e112c8ed": "acs",
        "5f6360dd-a419-43f1-a8bf-05636975a052": "part3"
      },
      "hours": 6,
      "_label": "Research Students Lectures",
      "prerequisites": "Sandwiches",
      "synopsis": "A series of lunchtime lectures prepared and given by Computer Laboratory research students.",
      "assessmentpage": 0
    },
    "E4F8": {
      "lecturer": "jl221",
      "classes": {
        "1f48ad49-2af5-4935-801f-5c2d85de4542": "acs",
        "8983e163-36e6-4902-b4b9-6af620e6c5e8": "part3"
      },
      "hours": {
        "28d04d32-54b6-4699-bb85-9862de406da1": "lectures including example classes",
        "_label": "16"
      },
      "_label": "Image Processing and Image Coding",
      "prerequisites": "Knowledge of 1D Fourier theory and a bit of statistical signal processing experience. Students must talk with their Course Adviser before selecting this module.",
      "url": "http://to.eng.cam.ac.uk/teaching/courses/y4/4f8.html",
      "synopsis": "Note: this module may not be offered in 2018-19.  This module offered by the Department of Engineering. Sophisticated processing of images by digital hardware is now fairly common, and ranges from special effects in video games to satellite image enhancement. Three of the main application areas are video data compression, image enhancement, and scene understanding. This module introduces the key tools for performing these tasks, and shows how these tools can be applied. This module is offered by the Department of Engineering. Assessment is by a written examination at the beginning of Easter Term."
    },
    "E4F12": {
      "lecturer": {
        "035031ee-6861-48a0-b0ad-dc2f9548ef1b": "rc10001",
        "339df440-428d-4bf5-9551-7acc405da336": "ret26",
        "bc88a97d-c49f-42b5-8b27-a0911bbcfa2a": "afb21",
        "ab0fde88-a380-4082-a41d-870f830d0843": "cpt23"
      },
      "classes": {
        "2d9af790-bae8-46e4-90fb-9f946770d235": "acs",
        "1e6aca4f-4464-4e3e-86e9-c2a77bc5717f": "part3"
      },
      "hours": {
        "1a021ac9-99d0-4345-8984-be8a26bca8d6": "lectures, including 3 example classes, plus additional briefing sessions",
        "_label": "16"
      },
      "_label": "Computer Vision",
      "prerequisites": "Students are asked to talk with their Course Adviser before selecting this module.",
      "contributor": "mmam3",
      "synopsis": "Lectures for this module are offered by the Department of Engineering. Assessment is carried out in the Computer Laboratory. The module aims to introduce the principles, models and applications of computer vision. The course will cover image structure, projection, stereo vision, and the interpretation of visual motion. It will be illustrated with case studies of industrial (robotic) applications of computer vision, including visual navigation for autonomous robots, robot hand-eye coordination and novel man-machine interfaces. Assessment will include practical exercises and a mini-project which in undertaken in Lent Term. There is no written examination for Part III or MPhil students."
    },
    "E4F13": {
      "lecturer": "cer54",
      "classes": {
        "f9b85712-4e3d-477a-940e-2b35eb5d6175": "acs",
        "e3df41b2-8b36-41a2-b060-4fd36320b7b1": "part3"
      },
      "hours": 16,
      "_label": "Probabilistic Machine Learning",
      "prerequisites": "Signal and pattern processing undergraduate course desirable. Students are asked to talk with their Course Adviser before selecting this module.",
      "url": "http://to.eng.cam.ac.uk/teaching/courses/y4/4f13.html",
      "class-limit": 6,
      "synopsis": "NB Module offered by the Department of Engineering. Probablistic machine learning is an interdisciplinary field focusing on both the mathematical foundations and practical applications of systems that learn, reason and act. The goal of machine learning is to automatically extract knowledge from observed data for the purposes of making predictions, decisions and understanding the world. The aim of this module is to introduce students to basic concepts in machine learning, focusing on statistical methods for supervised and unsupervised learning. The module will be structured around three recent illustrative successful applications: Gaussian processes for regression and classification, Latent Dirichlet Allocation models for unsupervised text modelling and the TrueSkill probabilistic ranking model."
    },
    "M004": {
      "lecturer": "carh4",
      "classes": {
        "e6b644f5-1274-4a46-b3a0-b97359e9c242": "acs",
        "3771cf39-06ae-40f8-86ae-a226d4d500eb": "part3"
      },
      "hours": 8,
      "_label": "Algebra and programming semantics",
      "prerequisites": "Some acquaintance and interest in the ideas of Milner or Hoare or Plotkin, ...",
      "synopsis": "NEW: to have fun with the algebra of sequential and concurrent programming, in application to programming languages, programs and proofs.",
      "assessmentpage": 0
    },
    "M005": {
      "lecturer": {
        "8440d198-4091-416e-a320-fd6d79608776": "raa43",
        "_label": "afb21"
      },
      "classes": {
        "e79b4e0e-379b-4443-b0d5-cf94994e0c59": "acs",
        "a09b0983-238d-4303-8f79-77ad635fd248": "part3"
      },
      "term": "E",
      "_label": "Critical Coding for Digital Humanities",
      "synopsis": "NB: Not for credit option. An immersive co-teaching course, in which students from different disciplinary backgrounds work in pairs to jointly create a novel software application. The course is primarily practical, with practical work carried out on the students' own laptops. ",
      "assessmentpage": 0
    },
    "M10": {
      "lecturer": {
        "efc4ca0d-71cc-45f4-9175-ed6563175296": "mpf23"
      },
      "classes": {
        "171c00fa-9e80-4a36-ae2f-e4dd73fe6517": "acs",
        "4104c772-85ce-416a-9992-9fabbbde3c31": "part3"
      },
      "hours": 8,
      "_label": "Advanced Topics in Semantics",
      "prerequisites": "L108 Category Theory and Logic; knowledge of the material in the CST Part II Denotational Semantics and Types courses recommended.",
      "synopsis": "This module aims to bring students up to date with current research in the denotational approach to the semantics of programming languages and mathematical models of type theories, with the objective of training students to start research in theoretical computer science on these areas and their applications. <b>Note</b>: this module is not for credit.",
      "assessmentpage": 0
    },
    "M22": {
      "lecturer": "gw104",
      "classes": {
        "47c4557e-eaaa-4f93-b707-b3850795a150": "acs",
        "d12a779e-5694-455a-8a01-eb71a63f2577": "part3"
      },
      "hours": {
        "1298f69b-2a80-40c6-b654-d1acb3e36492": "Three two-hour sessions",
        "_label": "6"
      },
      "_label": "A Mathematical Theory of Distributed Games and Strategies",
      "synopsis": "This module will give a rapid introduction to ongoing research in developing a mathematical theory of distributed games in which a Player (or a team of players) can interact and compete against an Opponent (or a team of opponents) in a highly distributed fashion, without, for instance, enforcing that their moves occur in a sequential fashion, or need to alternate. Although phrased in terms of `Player' and `Opponent' the dichotomy Player vs. Opponent can stand for Process vs. Environment, Prover vs. Disprover, or Ally vs. Enemy. These alternatives indicate the wide range of potential applications in computer science, logic, and beyond.",
      "assessmentpage": 0
    },
    "S500": {
      "classes": {
        "287c3fe3-653b-43a2-94c1-6f462dac496b": "acs"
      },
      "term": "M",
      "hours": 16,
      "_label": "Special topic MT",
      "prerequisites": "Students may only take a Special Topic if they have sufficient background.  The supervisor has the responsibility for determining this, with the ACS examiners being responsible for formal approval of the arrangement.",
      "synopsis": "Up to one taught module may be replaced by a 'Special Topic'.",
      "materials": 0,
      "assessmentpage": 0
    },
    "S501": {
      "classes": {
        "f8e5d934-16c7-4306-8d02-26fde713ef81": "acs"
      },
      "term": "L",
      "hours": 16,
      "_label": "Special topic LT",
      "prerequisites": "Students may only take a Special Topic if they have sufficient background.  The supervisor has the responsibility for determining this, with the ACS examiners being responsible for formal approval of the arrangement.",
      "synopsis": "Up to one taught module may be replaced by a 'Special Topic'.",
      "materials": 0,
      "assessmentpage": 0
    }
  },
  "lecturers": {
    "aac10": "Prof Ann Copestake",
    "abr28": "Dr Bogdan Roman",
    "acn1": "Dr Arthur Norman",
    "acr31": "Dr Andrew Rice",
    "ad260": "Prof Anuj Dawar",
    "ad465": "Dr Adria de Gispert",
    "afb21": "Prof Alan Blackwell",
    "ah12": "Prof Andy Hopper",
    "ah793": "Dr Alice Hutchings",
    "aib29": "Dr Andrei Bejan",
    "alk23": "Dr Anna Korhonen",
    "am21": "Prof Alan Mycroft",
    "amp12": "Prof Andrew Pitts",
    "arb33": "Dr Alastair Beresford",
    "as2006": "Dr Advait Sarkar",
    "asp45": "Dr Amanda Prorok",
    "atm26": "Dr Theo Markettos",
    "awm22": "Dr Andrew Moore",
    "avsm2": "Dr Anil Madhavapeddy",
    "bh288": "Dr Bjarki Holm",
    "bk291": "Dr Bartosz Klin",
    "bdj23": "Brian Jones",
    "bns21": "Dr Brian Shand",
    "brmt2": "Dr Blaise Thomson",
    "carh4": {
      "url": "http://research.microsoft.com/en-us/people/thoare/",
      "_label": "Prof Sir Tony Hoare"
    },
    "caw77": "Conrad Watt",
    "cer54": "Prof Carl Rasmussen",
    "76f6a8fd-3a5c-4237-ba57-8709cd17f305": {
      "url": "http://www.csap.cam.ac.uk/network/carl-rasmussen/"
    },
    "ckh11": "Chris Hadley",
    "cm542": "Prof Cecilia Mascolo",
    "cpt23": "Dr Christopher Town",
    "cu200": "Dr Christian Urban",
    "dao29": "Dr Dominic Orchard",
    "dc552": "Dr David Chisnall",
    "de239": "Dr David Evans",
    "djg11": "Dr David Greaves",
    "djw1005": "Dr Damon Wischik",
    "dme26": "Dr David Eyers",
    "do242": "Dr Diarmuid OâSeaghdha",
    "dpm36": "Dr Dominic Mulligan",
    "drm10": "Dr Derek McAuley",
    "drt24": "Dr Daniel Thomas",
    "ejb1": "Prof Ted Briscoe",
    "ek264": "Dr Eva Kalyvianaki",
    "ek358": "Dr Ekaterina Kochmar",
    "es407": "Dr Ekaterina Shutova",
    "ey204": "Dr Eiko Yoneki",
    "fhk1": "Dr Frank King",
    "fms27": "Prof Frank Stajano",
    "gcj21": "Dr Graeme Jenkinson",
    "gst22": "Dr George Taylor",
    "gw104": "Prof Glynn Winskel",
    "hg410": "Dr Hatice Gunes",
    "hlj36": "Dr Heleen Janssen",
    "hy260": "Dr Helen Yannakoudakis",
    "ijpdmt2": "Ivo Timoteo",
    "ijw24": "Dr Ian Wassell",
    "iml1": "Prof Ian Leslie",
    "jac22": "Prof Jon Crowcroft",
    "jal1": {
      "url": "http://www.emma.cam.ac.uk/teaching/fellows/display/?fellow=239",
      "_label": "Jack Lang"
    },
    "jas289": "Dr John Sylvester",
    "jc2106": "Dr Jennifer Cobbe",
    "jdy22": "Dr Jeremy Yallop",
    "jgd1000": "Prof John Daugman",
    "jkf21": "Dr John Fawcett",
    "jl221": {
      "url": "http://www-sigproc.eng.cam.ac.uk/~jl/",
      "_label": "Dr Joan Lasenby"
    },
    "jlf46": "Dr Jonas Frey",
    "jmb25": "Prof Jean Bacon",
    "jmh93": "Dr Jonathan Hayman",
    "jp622": "Dr Jean Pichon",
    "js573": "Dr Jatinder Singh",
    "js861": "Dr Jaroslav Sevcik",
    "km10": "Dr Ken Moody",
    "ko201": {
      "url": "http://www.langcen.cam.ac.uk/lc/staff/karen.html",
      "_label": "Dr Karen Ottewell"
    },
    "ks775": "Dr Kasper Svendsen",
    "lec40": "Dr L Church",
    "lmi22": "Dr L M Ioannou",
    "lp15": "Prof Larry Paulson",
    "lpw25": "Dr Leo White",
    "lr346": "Dr Laura Rimell",
    "lz381": "Dr Luca Zanetti",
    "MAllamanis": {
      "url": "mailto:Miltiadis.Allamanis@microsoft.com",
      "_label": "Miltos Allamanis"
    },
    "MBrockschmidt": {
      "url": "mailto:mabrocks@microsoft.com",
      "_label": "Marc Brockschmidt"
    },
    "mgk25": "Dr Markus Kuhn",
    "mj201": "Dr Mateja Jamnik",
    "mjcg": "Prof Mike Gordon",
    "mjfg100": {
      "url": "http://mi.eng.cam.ac.uk/~mjfg/",
      "_label": "Prof Mark Gales"
    },
    "mjp41": "Dr Matthew Parkinson",
    "mmam3": "Dr Marwa Mahmoud",
    "mns25": "Matt Stuttle",
    "mo390": "Dr Maris Ozols",
    "mom22": "Dr Magnus Myreen",
    "mp867": "Dr Maria Perez-Ortiz",
    "mpf23": "Prof Marcelo Fiore",
    "mr472": "Dr Marek Rei",
    "mtw29": "Dr Mark Granroth-Wilding",
    "na482": "Dr Nada Amin",
    "nad10": "Prof Neil Dodgson",
    "nhc30": {
      "url": "http://www.languagesciences.cam.ac.uk/directory/dr-nigel-collier",
      "_label": "Dr Nigel Collier"
    },
    "nk480": "Dr Neel Krishnaswami",
    "nr454": "Dr Nicolas Rivera",
    "nrs32": "Dr Nishanth Sastry",
    "ns441": "Dr Nik Sultana",
    "nz247": "Dr Noa Zilberman",
    "ok259": "Dr Ohad Kammar",
    "pat40": "Dr Paul Taylor",
    "pb355": {
      "url": "http://bentonian.com/",
      "_label": "Dr Alex Benton"
    },
    "pes20": "Prof Peter Sewell",
    "pjb48": "Dr Paula Buttery",
    "pl219": "Prof Pietro Lio",
    "pnb14": "Dr Nick Benton",
    "pr10": "Prof Peter Robinson",
    "pw117": {
      "url": "http://mi.eng.cam.ac.uk/~pcw/",
      "_label": "Prof Phil Woodland"
    },
    "raa43": {
      "url": "http://www.digitalhumanities.cam.ac.uk/directory/raa43@cam.ac.uk",
      "_label": "Dr Anne Alexander"
    },
    "rc10001": {
      "url": "http://mi.eng.cam.ac.uk/~cipolla/",
      "_label": "Prof Roberto Cipolla"
    },
    "rc635": "Dr Ronan Cummins",
    "rdm34": "Dr Robert Mullins",
    "ret26": {
      "url": "http://www.eng.cam.ac.uk/research/people/view/197",
      "_label": "Dr Richard Turner"
    },
    "rja14": "Prof Ross Anderson",
    "rkh23": "Dr Robert Harle",
    "rkm38": "Dr Rafal Mantiuk",
    "rmf25": "Dr Ramsey Faragher",
    "rmm1002": "Dr Richard Mortier",
    "rnc1": "Dr Richard Clayton",
    "rnw24": "Dr Robert Watson",
    "sbh11": "Dr Sean Holden",
    "sac92": "Dr Stephen Cummins",
    "sam56": "Stewart McTavish",
    "sc609": "Dr Stephen Clark",
    "sht25": "Prof Simone Teufel",
    "sjm217": "Dr Steven Murdoch",
    "sjy11": "Prof Steve Young",
    "sk826": "Dr KC Sivaramakrishnan",
    "smh22": "Dr Steven Hand",
    "ss2138": "Sandra Servia Rodriguez",
    "ss368": "Dr Samuel Staton",
    "swm11": "Prof Simon Moore",
    "tef10": "Dr Thomas Forster",
    "tgg22": "Dr Timothy Griffin",
    "tlh20": "Dr Timothy Harris",
    "tmj32": "Dr Timothy Jones",
    "tms41": "Dr Thomas Sauerwald",
    "tp366": "Dr Tamara Polajnar",
    "wjb31": {
      "url": "http://mi.eng.cam.ac.uk/~wjb31/",
      "_label": "Prof Bill Byrne"
    },
    "zg201": {
      "url": "http://mlg.eng.cam.ac.uk/zoubin/",
      "_label": "Prof Zoubin Ghahramani"
    },
    "tbc": {
      "_label": "(to be confirmed)"
    },
    "others": {
      "_label": " (and others)"
    }
  },
  "types": {
    "part2-unit": {
      "heading": "Units of assessment",
      "classes": {
        "cdbeebb9-01e1-4c4b-9577-7f93fe94c3f7": "part2-75"
      },
      "assessmentpage": 1,
      "triposexam": 0,
      "supervisions": 0
    },
    "masters-shared": {
      "classes": {
        "82592cfc-13bc-4621-99de-40eaa1da7fa4": "acs",
        "a23bca7b-da07-407c-8615-b8107026cbcb": "part3"
      },
      "assessmentpage": 1,
      "triposexam": 0,
      "supervisions": 0,
      "syllabus": {
        "18df79d5-d901-4b0d-ab9c-8abc74fd087a": "syllabus-html",
        "_label": "htmlinclude"
      },
      "materials": "clone",
      "syllabus-footnote": {
        "feb10048-99c4-42c4-af79-7345d4050b3b": "This course is borrowed from ",
        "9f2b7cc0-0262-4f8e-8931-cafa69f21fcf": {
          "href": "../part2-75.html",
          "040811bb-fe81-4986-85aa-178ed8137ba0": "Part II of the Computer Science Tripos",
          "_label": "*a"
        },
        "1c05501e-f7fe-49bb-bfd8-0ea9a93c6ab7": ". As such, assessment will be adjusted to an appropriate level for those enrolled for Part III of the Tripos or the M.Phil in Advanced Computer Science. ",
        "40061514-67b1-4b3c-9a09-68e9dfc3b987": {
          "href": "assessment.html",
          "1fb3d90f-801c-4964-b410-b5f59fc72a1e": "Further information about assessment and practicals",
          "_label": "*a"
        },
        "022c09e2-2cf6-4843-9766-dd593c5c2dc3": " will follow at the first lecture.",
        "_label": "*p"
      }
    }
  }
}
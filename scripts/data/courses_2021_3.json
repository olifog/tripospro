{"L352": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>Advanced Graphics covers topics related to processing,\n  perception and display of images. The focus of the course is on\n  the algorithms behind new emerging display technologies, such as\n  virtual reality, augmented reality, and high dynamic range\n  displays. It complements two computer graphics courses,\n  Introduction to Graphics and Further Graphics, by introducing\n  problems that became the part of graphics pipeline: tone-mapping,\n  post-processing, displays and models of visual perception.</p>\n<h2>Lectures</h2>\n<ul>\n<li><strong>GP-GPU</strong>: scheduling and thread mapping,\n    reductions.</li>\n<li><strong>Advanced image processing</strong>: edge-stopping\n    filters, pyramids, optimization-based image processing.</li>\n<li><strong>Beyond 2D</strong>: stereo rendering and light\n    fields.</li>\n<li><strong>Models of visual perception</strong>: visual\n    system, brightness perception, detection and discrimination,\n    contrast sensitivity function, contrast constancy, perceptually\n    uniform spaces, depth perception.</li>\n<li><strong>High Dynamic Range and tone mapping</strong>:\n    dynamic range, display model, methods of tone-mapping.</li>\n<li><strong>Display technologies</strong>: 2D displays, 3D\n    displays, temporal display characteristic, HDR displays.</li>\n<li><strong>Virtual and Augmented Reality</strong>: display\n    technologies, VR rendering, orientation tracking, pose\n    tracking, perceptual considerations, panoramic imaging.</li>\n</ul>\n<h2>Objectives</h2>\n<p>By the end of the course students should be able to:</p>\n<ul>\n<li>implement real-time image processing methods on a GPU\n    (OpenCL);</li>\n<li>design and implement a tone-mapping algorithm;</li>\n<li>describe the limitations of display technologies (dynamic\n    range, brightness, visual comfort, VR simulation sickness) and\n    how they can be addressed using computational methods\n    (tone-mapping, HDR displays);</li>\n<li>describe the limitations of the visual system and how those\n    limitation can be exploited in computer graphics and image\n    processing.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Hainich, R. and Bimber, O. (2016) <em>Displays: Fundamentals\n  and Applications</em>. CRC Press (2nd ed.).<br/>\n  Boreskov, A. and Shikin, E. (2013) <em>Computer Graphics: From\n  Pixels to Programmable Graphics Hardware</em>. CRC Press.<br/>\n  Reinhard, E., et. al. (2010) <em>High Dynamic Range Imaging:\n  Acquisition, Display, and Image-Based Lighting</em>. Morgan\n  Kaufmann (2nd ed.).</p>\n", "course_name": "Advanced Graphics and Image Processing", "course_code": "L352", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L352", "lecturers": ["rkm38"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "R265": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course aims to provide students with an introduction to a\n  range of advanced topics in computer architecture. It will\n  explore the current and future challenges facing the architects\n  of modern computers. These will also be used to illustrate the\n  many different influences and trade-offs involved in computer\n  architecture.</p>\n<h2>Objectives</h2>\n<p>On completion of this module students should:</p>\n<ul>\n<li>understand the challenges of designing and verifying modern\n    microprocessors</li>\n<li>be familiar with recent research themes and emerging\n    challenges</li>\n<li>appreciate the complex trade-offs at the heart of computer\n    architecture</li>\n</ul>\n<h2>Syllabus</h2>\n<p>Each seminar will focus on a different topic:</p>\n<ul>\n<li>Trends in computer architecture</li>\n<li>State-of-the-art microprocessor design</li>\n<li>Memory system design</li>\n<li>Hardware reliability</li>\n<li>Specification, verification and test</li>\n<li>Hardware security (2)</li>\n<li>HW accelerators and accelerators for machine learning</li>\n</ul>\n<p>Each two hour seminar will include three student presentations\n  (15mins) questions (5mins) and a broader discussion of the topics\n  (around 30mins). The last part of the seminar will include a\n  short scene setting lecture (around 20mins) to introduce the\n  following week's topic.</p>\n<h2>Assessment</h2>\n<p>Each week students will compare and contrast two of the main\n  papers and submit a written summary and review in advance of each\n  seminar (except when presenting).</p>\n<p>Students will be expected to give a number of 15 minute\n  presentations.</p>\n<p>Essays and presentations will be marked out of 10. After\n  dropping the lowest mark, the remaining marks will be scaled to\n  give a final score out of 100.</p>\n<p>Students will give at least one presentation during the\n  course. They will not be required to submit an essay during the\n  weeks they are presenting.</p>\n<p>Each presentation will focus on a single paper from the\n  reading list. Marks will be awarded for clarity and the\n  communication of the paper's key ideas, an analysis of the work's\n  strengths and weaknesses and the work\u2019s relationship to related\n  work and broader trends and constraints.</p>\n<h2>Recommended prerequisite reading</h2>\n<p>Patterson, D. A., Hennessy, J. L. (2017). <em>Computer\n  organization and design: The Hardware/software interface RISC-V\n  edition</em> Morgan Kaufmann. ISBN 978-0-12-812275-4.</p>\n<p>Hennessy, J. and Patterson, D. (2012). <em>Computer\n  architecture: a quantitative approach</em>. Elsevier (5th ed.)\n  ISBN 9780123838728. (the 3rd and 4th editions are also\n  relevant)</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Advanced Topics in Computer Architecture", "course_code": "R265", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R265", "lecturers": ["rdm34", "swm11", "tmj32"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "R249": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module aims to introduce the latest research advancements\n  in mobile systems and mobile data machine learning, spanning a\n  range of domains including systems, data gathering, analytics and\n  machine learning, on device machine learning and applications\n  such as health, transportation, behavior monitoring,\n  cyber-physical systems, autonomous vehicles, drones. The course\n  will cover current and seminal research papers in the area of\n  research.</p>\n<h2>Syllabus</h2>\n<p>The course will consist of one introductory lecture, seven\n  two-hour, and one three-hour, sessions covering a variety of\n  topics roughly including the following material (some variation\n  in the topics might happen from year to year):</p>\n<ol>\n<li>Mobile Operating Systems Issues</li>\n<li>Mobile Resource and Energy Management</li>\n<li>Mobile Sensing Data, Activity Recognition and Data\n    Interpretation</li>\n<li>Machine Learning for Mobile and Sensor Data</li>\n<li>On Device Machine Learning</li>\n<li>Mobile Health</li>\n<li>Urban Mobility Modelling</li>\n<li>Further Applications of Mobile Data Machine Learning</li>\n</ol>\n<p>Each week, three class participants will be assigned to\n  introduce assigned three papers via 20-minute presentations,\n  conference-style and highlighting critically its features. Each\n  presentation will be followed by 10 minutes of questions. This\n  will be followed by 10 minutes of general discussion. Slides will\n  be used for presentation.</p>\n<p>Students will give one or more presentations each term. Each\n  student will submit a paper review each week for one of the three\n  papers presented except for the week they will be presenting\n  slides. Each review will follow a template and be up to 1,000\n  words. Each review will receive a maximum of 10 points. As a\n  result, each student will produce 6-7 reviews and at least one\n  presentation, probably two. All participants are expected to\n  attend and participate in every class; the instructor must be\n  notified of any absences in advance.</p>\n<h2>Objectives</h2>\n<p>On completion of this module students should have an\n  understanding of the recent key research in mobile and sensor\n  systems and mobile analytics as well as an improved critical\n  thinking over research papers.</p>\n<h2>Assessment</h2>\n<ul>\n<li>Aggregate mark for 7 assignments from 6-7 reports and 1-2\n    presentations. Each report or presentation will contribute one\n    seventh of the course mark.</li>\n<li>A tick for presence and participation to each class will\n    also be awarded.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Readings from the most recent conferences such as AAAI, ACM\n  KDD, ACM MobiCom, ACM MobiSys, ACM SenSys, ACM UbiComp, ICLR,\n  ICML Neurips, and WWW pertinent to mobile systems and data.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Advanced Topics in Mobile Systems and Mobile Data Machine Learning", "course_code": "R249", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R249", "lecturers": ["cm542", "jc2161"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": true, "easter": false}, "L11": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>A great deal of interesting work was done in the 1970s in\n  generalizing shortest path algorithms to a wide class of\n  semirings - called 'path algebras' or 'dioids'. Although the\n  evolution of Internet Routing protocols does not seem to have\n  taken much inspiration from this work, recent 'reverse\n  engineering' efforts have demonstrated that an algebraic approach\n  is very useful for both understanding existing protocols and for\n  exploring the design space of future Internet routing protocols.\n  This course is intended to present the basic mathematics needed\n  to understand this approach. No previous background will be\n  assumed. The course will start from scratch and end with open\n  research problems. Many examples inspired by Internet Routing\n  will be presented along the way.</p>\n<h2>Syllabus</h2>\n<ul>\n<li>History, overview, motivation (1L)</li>\n<li>Semigroups and order theory (2L)</li>\n<li>Semirings and related structures (3L)</li>\n<li>Algorithms for solving algebraic path problems in graphs\n    (3L)</li>\n<li>Metarouting (2L)</li>\n<li>Algebraic models of Internet Routing (4L)</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>understand the basics of semirings,</li>\n<li>be able to reason about and prove various properties of\n    algebraic structures,</li>\n<li>understand applications of semirings and related structures\n    in diverse fields of computer science and operations\n    research,</li>\n<li>have a deep understanding of the applications of semirings\n    and related structures to Internet routing.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Exercise sheets will be provided.</p>\n<h2>Practical work</h2>\n<p>Several MRE (metarouting toolkit, pronounced <em>Mr. E or\n  mystery</em>) exercises will be assigned.</p>\n<h2>Assessment</h2>\n<ul>\n<li>2 ticked exercises 10%</li>\n<li>Test 30%</li>\n<li>Project and report 60%</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Primary text: Gondran, M. and Minoux, M. (2008). <em>Graphs,\n  Dioids and Semirings \u2013 New Models and Algorithms</em>.\n  Springer.</p>\n<p>Backhouse, R.C. and Carr, B.A. 'Regular Algebra Applied to\n  Path-Finding Problems' <em>J.Inst.Maths.Applics</em> . (1975).\n  15, pp. 161-186<br/>\n  Griffin, T. G. and Gurney, A. Increasing Bisemigroups and\n  Algebraic Routing, RelMiCS10, April 2008.<br/>\n  Griffin, T. G. and Sobrinho, J. L., Metarouting. SIGCOMM 2005<br/>\n  Gurney, A. and Griffin, T. G., Lexicographic Products in\n  Metarouting. ICNP, October 2007, Beijing.<br/>\n  Sobrinho, J. L. \u201cAlgebra and Algorithms for QoS Path Computation\n  and Hop-by-Hop Routing in the Internet,\u201d IEEE/ACM Transactions on\n  Networking , pp. 541-550, August 2002.<br/>\n  Sobrinho, J. L. \u201cNetwork Routing With Path Vector Protocols:\n  Theory and Applications\u201d in Proc. ACM SIGCOMM 2003, pp. 49-60,\n  Karlsruhe, Germany, August 2003.<br/>\n  Sobrinho, J. L. \u201cAn Algebraic Theory of Dynamic Network Routing,\u201d\n  IEEE/ACM Transactions on Networking, pp. 1160-1173, October\n  2005.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Algebraic Path Problems", "course_code": "L11", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L11", "lecturers": ["tgg22"], "lectures": null, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L18": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module aims to provide an introduction to how reasoning\n  can be automated. In particular, the course will introduce\n  students to fundamental techniques for designing automated\n  reasoners, provide some experience of how they work and how to\n  use them, and present advanced applications of theorem proving\n  for solving problems via automated reasoning.</p>\n<h2>Syllabus</h2>\n<p>Topics may include - to be confirmed in September 2019:</p>\n<ul>\n<li>Introduction to automated reasoning and history of\n    automated theorem provers.</li>\n<li>Brief review of mathematical logic: representations,\n    propositional, predicate logic, semantics.</li>\n<li>Representing mathematical knowledge using logic.</li>\n<li>Proof and correctness: formalization of proof, inference\n    rules and resolution, unification, equational reasoning,\n    combinatorial explosion, search algorithms.</li>\n<li>Guidance techniques: rewrite rules, human proofs, decision\n    procedures, meta-level inference.</li>\n<li>Inductive theorem proving, heuristic guidance, rippling,\n    proof planning.</li>\n<li>Applied uses of automated reasoning: diagrammatic\n    reasoning, ontology/semantic web.</li>\n<li>Student presentations of reviews/rational reconstructions\n    of topics in automated reasoning.</li>\n</ul>\n<p>Note that some content may vary, and the number of lectures\n  per topic is provisional; the final plan will depend on the\n  students' background and the number of students taking the\n  course.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>be able to represent mathematical and other knowledge using\n    logical formalism;</li>\n<li>understand the history of formalizing mathematical\n    knowledge;</li>\n<li>know and understand the advantages and limitations of the\n    main approaches and techniques in automated reasoning of\n    mathematical knowledge;</li>\n<li>be able to apply different automated reasoning techniques\n    to new problems;</li>\n<li>be able to locate, read, understand, and present a research\n    paper from the field;</li>\n<li>be familiar with current research in a number of aspects of\n    the field;</li>\n<li>be able to critically analyze and evaluate a piece of\n    research.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Coursework may consist of two practical exercises.</p>\n<p>First, students will be able to select one of a list of topics\n  in automated reasoning and carry out a literature survey of\n  state-of-the-art research on this topic.</p>\n<p>Second, students will be able to select a research paper from\n  a list of papers describing one of state-of-the-art reasoning\n  systems, do a review (an in-depth analysis) of the work described\n  in the paper, and give a short presentation about it to the rest\n  of the class.</p>\n<h2>Practical work</h2>\n<p>Exercises will be given to students during lectures that will\n  enable students to practice and apply principles discussed in the\n  lectures. Solutions to exercises should be submitted, but will\n  not be assessed. Feedback will be provided as appropriate.</p>\n<h2>Assessment</h2>\n<p>The assessment will be done by the lecturer. Full details will\n  follow in September preceding the start of Michaelmas term:</p>\n<ul>\n<li>A literature survey 35%;</li>\n<li>A presentation of an in-depth analysis of a selected\n    research paper and reading group participation 15%; and</li>\n<li>A written test of up to 90 minutes in duration 50%<br/>\n<em>(Note: If students are unable to be in Cambridge due to\n    COVID-19 restrictions, the test may be replaced with another\n    form of assessment)</em></li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Bundy, A. (1983). <em>The computer modelling of mathematical\n  reasoning</em>. London: Academic Press (2nd ed.). Out of print,\n  but available on-line from: <a href=\"http://www.inf.ed.ac.uk/teaching/courses/ar/book/book-postcript/\">\n  http://www.inf.ed.ac.uk/teaching/courses/ar/book/book-postcript/</a></p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Automated Reasoning", "course_code": "L18", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L18", "lecturers": ["mj201"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L108": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>Category theory provides a unified treatment of mathematical\n  properties and constructions that can be expressed in terms of\n  'morphisms' between structures. It gives a precise framework for\n  comparing one branch of mathematics (organized as a category)\n  with another and for the transfer of problems in one area to\n  another. Since its origins in the 1940s motivated by connections\n  between algebra and geometry, category theory has been applied to\n  diverse fields, including computer science, logic and\n  linguistics. This course introduces the basic notions of category\n  theory: adjunction, natural transformation, functor and category.\n  We will use category theory to organize and develop the kinds of\n  structure that arise in models and semantics for logics and\n  programming languages.</p>\n<h2>Syllabus</h2>\n<ul>\n<li>Introduction; some history. Definition of category. The\n    category of sets and functions.</li>\n<li>Commutative diagrams. Examples of categories: preorders and\n    monotone functions; monoids and monoid homomorphisms; a\n    preorder as a category; a monoid as a category. Definition of\n    isomorphism. Informal notion of a 'category-theoretic'\n    property.</li>\n<li>Terminal objects. The opposite of a category and the\n    duality principle. Initial objects. Free monoids as initial\n    objects.</li>\n<li>Binary products and coproducts. Cartesian categories.</li>\n<li>Exponential objects: in the category of sets and in\n    general. Cartesian closed categories: definition and\n    examples.</li>\n<li>Intuitionistic Propositional Logic (IPL) in Natural\n    Deduction style. Semantics of IPL in a cartesian closed\n    preorder.</li>\n<li>Simply Typed Lambda Calculus (STLC). The typing relation.\n    Semantics of STLC types and terms in a cartesian closed\n    category (ccc). The internal language of a ccc. The\n    Curry-Howard-Lawvere correspondence.</li>\n<li>Functors. Contravariance. Identity and composition for\n    functors.</li>\n<li>Size: small categories and locally small categories. The\n    category of small categories. Finite products of\n    categories.</li>\n<li>Natural transformations. Functor categories. The category\n    of small categories is cartesian closed.</li>\n<li>Hom functors. Natural isomorphisms. Adjunctions. Examples\n    of adjoint functors. Theorem characterising the existence of\n    right (respectively left) adjoints in terms of a universal\n    property.</li>\n<li>Dependent types. Dependent product sets and dependent\n    function sets as adjoint functors. Equivalence of categories.\n    Example: the category of I-indexed sets and functions is\n    equivalent to the slice category Set/I.</li>\n<li>Presheaves. The Yoneda Lemma. Categories of presheaves are\n    cartesian closed.</li>\n<li>Monads. Modelling notions of computation as monads. Moggi's\n    computational lambda calculus.</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>be familiar with some of the basic notions of category\n    theory and its connections with logic and programming language\n    semantics</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Awodey, S. (2010). <em>Category theory</em>. Oxford University\n  Press (2nd ed.).</p>\n<p>Crole, R. L. (1994). <em>Categories for types</em>. Cambridge\n  University Press.</p>\n<p>Lambek, J. and Scott, P. J. (1986). <em>Introduction to higher\n  order categorical logic</em>. Cambridge University Press.</p>\n<p>Pitts, A. M. (2000). <em>Categorical Logic</em>. Chapter 2 of\n  S. Abramsky, D. M. Gabbay and T. S. E. Maibaum (Eds) Handbook of\n  Logic in Computer Science, Volume 5. Oxford University Press.\n  (Draft copy available <a href=\"http://www.cl.cam.ac.uk/~amp12/papers/catl/catl.pdf\">here</a>.)</p>\n<h2>Class Size</h2>\n<p>This module can accommodate upto 15 Part II students plus 15\n  MPhil / Part III students.</p>\n", "course_name": "Category Theory", "course_code": "L108", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L108", "lecturers": ["amp12"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "R209": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course aims to provide students with an introduction to\n  the history and central themes of computer security, from its\n  1970s foundations to some current research topics, with a theme\n  of how to defend cloud-based systems against capable motivated\n  opponents. The course considers first local computer systems and\n  then distributed systems; however, we will rapidly discover that\n  this is an artificial distinction that only becomes more awkward\n  as we enter the current period. Throughout the course, we will\n  consider proposed systems along with the adversarial research\n  intended to identify gaps and vulnerabilities.</p>\n<h2>Syllabus</h2>\n<p>There will be eight two-hour seminars on topics along the\n  lines of the following. Students are expected to read the\n  required set papers before each class. All students are expected\n  to submit a brief written summary of the readings in advance of\n  each class, and students will be nominated to give brief\n  presentations of each paper, or of cross-cutting aspects of all\n  the papers, to lead discussion.</p>\n<ul>\n<li>Origins and foundations of computer security</li>\n<li>Adversarial Reasoning</li>\n<li>Access control</li>\n<li>Security economics</li>\n<li>Passwords</li>\n<li>Capability systems</li>\n<li>Cryptographic protocols</li>\n<li>Correctness vs. mitigation</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>understand the principles of computer security</li>\n<li>be familiar with long-term and recent research themes</li>\n<li>appreciate the challenges of defending high-value\n    systems</li>\n</ul>\n<h2>Coursework</h2>\n<p>Participants will be expected to undertake six hours of\n  preparatory work before each meeting. This will involve:</p>\n<ul>\n<li>Reading a set number of papers</li>\n<li>Following up references and other related work</li>\n<li>Writing a weekly essay summarising assigned papers\n    <strong>or</strong>, as assigned by the course instructor,\n    preparing and delivering a 20-minute presentation on a specific\n    paper</li>\n<li>Essay text or presentation slides must be submitted via\n    Moodle, by the specified deadline</li>\n<li>Participating in class discussion on both the assigned\n    papers and broader issues raised by the week's readings</li>\n</ul>\n<p>Each week, the lecturers will lead an interactive session to\n  discuss the assigned reading material, drawing on the\n  presentations and essays submitted by the students before the\n  start of the class.</p>\n<p>Weekly essays will be up to 1,250 words summarising the\n  complete set of assigned papers, identifying common themes,\n  discussing the broader context, and enumerating possible class\n  discussion topics. While essays need not be 1,250 words in\n  length, participants are advised that essays under 1000 words are\n  unlikely to contain sufficient detail or discussion to achieve\n  full marks.</p>\n<p>All participants are expected to attend and participate in\n  every class; the instructor must be notified of any absences in\n  advance.</p>\n<h2>Practical work</h2>\n<p>None</p>\n<h2>Assessment</h2>\n<p>From the second week onwards, course participants are awarded\n  a maximum of 10 marks each week reflecting the quality of the\n  submitted essay or presentation. The lowest essay or presentation\n  mark of the term will be dropped. Remaining marks will be scaled\n  to a maximum final score out of 100.</p>\n<p>For essays, a total of ten marks can be awarded. Up to two\n  marks are assigned for adequate coverage of each of five\n  sections/areas: summary of papers; discussion of key themes\n  spanning the papers; consideration of current context; literature\n  review; and class discussion questions.</p>\n<p>For presentations, a total of ten marks can be awarded.\n  Criteria include: effective teaching of the key ideas; a critical\n  evaluation of the work; tracing related research; considering\n  current implications vs historical context of the work; and\n  successful answering of Q&amp;A as well as triggering a useful\n  and interesting class discussion.</p>\n<p>Neither essays nor presentations are due in the first week.\n  All submitted essays should provide a word count.</p>\n<h2>Recommended reading</h2>\n<p>Anderson, R. J. (2020). <em>Security Engineering</em>, Wiley\n  (third edition)<br/>\n  Gollmann, D. (2010). <em>Computer Security</em>, Wiley<br/>\n  Marshall Kirk McKusick, George V. Neville-Neil, and Robert N. M.\n  Watson. 'Chapter 5 - Security', The Design and Implementation of\n  the FreeBSD Operating System, 2nd Edition, Pearson Education,\n  Boston, MA, USA, September 2014</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Computer Security: Principles and Foundations", "course_code": "R209", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R209", "lecturers": ["rja14", "arb33", "rnw24", "ah793"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L330": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>The course will develop core areas of Data Science (eg. models\n  for regression and classification) from several perspectives:\n  conceptual formulation and properties, solution algorithms and\n  their implementation, data visualization for exploratory data\n  analysis and the effective presentation of modelling outputs. The\n  lectures will be complemented by practical classes using Python,\n  scikit-learn and TensorFlow.</p>\n<h2>Lectures</h2>\n<ul>\n<li><strong>Introduction.</strong> Motivation, applications,\n    examples, common data formats (csv, json), loading data with\n    Python, calculating statistics over a dataset with numpy,\n    logistics and overview of the course.</li>\n<li><strong>Linear Regression.</strong> Defining a model,\n    fitting a model, least squares regression, linear regression,\n    gradient descent, scikit-learn.</li>\n<li><strong>Practical: Linear Regression</strong></li>\n<li><strong>Classification, part I.</strong> Classification,\n    logistic regression, perceptron, multi-class classification,\n    classification performance measures.</li>\n<li><strong>Practical: Classification I</strong></li>\n<li><strong>Classification, part II.</strong> An overview of\n    other classification techniques (e.g., decision trees, SVMs)\n    and more advanced techniques including ensemble-based models\n    (boosting, bagging, exemplified with AdaBoost and Random\n    Forests).</li>\n<li><strong>Practical: Classification II</strong></li>\n<li><strong>Deep learning basics.</strong> Neural networks,\n    applications in the world, optimization, stochastic gradient\n    descent, backpropagation, learning rates</li>\n<li><strong>Deep learning with TensorFlow.</strong>\n    Introduction to TensorFlow, minimal TensorFlow example,\n    symbolic graphs, training a network, practical tips for deep\n    learning.</li>\n<li><strong>Practical: Deep learning with\n    TensorFlow</strong></li>\n<li><strong>Deep learning architectures.</strong> Convolutional\n    networks, RNNs, LSTMs, autoencoders, regularization.</li>\n<li><strong>Practical: Deep learning\n    architectures</strong></li>\n<li><strong>Visualization, part I.</strong> Scales and\n    coordinates, depicting comparisons.</li>\n<li><strong>Visualization, part II.</strong> Common plotting\n    patterns, including dimension reduction.</li>\n<li><strong>Practical: Visualization</strong></li>\n<li><strong>Challenges in Data Science.</strong> Summary of the\n    course, ethics and privacy in data science, P-hacking,\n    look-everywhere effect, bias in the training data,\n    interpretability, information about the hand out test.</li>\n</ul>\n<h2>Objectives</h2>\n<p>By the end of the course students should be able to:</p>\n<ul>\n<li>demonstrate understanding and practical skills in Data\n    Science;</li>\n<li>be able to specify and work with an analytical model;</li>\n<li>be able to effectively implement Data Science\n    algorithms;</li>\n<li>understand how data visualization underpins exploring\n    datasets as well as communicating the findings of data science\n    models.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Bishop, C.M. (2008). <em>Pattern Recognition and Machine\n  Learning</em>. Springer.<br/>\n  MacKay, D.J. (2003). <em>Information Theory, Inference and\n  Learning Algorithms</em>. Cambridge University Press.<br/>\n  Goodfellow, I., Bengio, Y., and Courville, A. (2016). <em>Deep\n  Learning</em>, MIT Press.<br/>\n  Python Basic Tutorial. Available online: <a href=\"https://www.tutorialspoint.com/python/index.htm\" id=\"tex2html17\" name=\"tex2html17\">https://www.tutorialspoint.com/python/index.htm</a><br/>\n  Numpy: Quickstart Tutorial. Available online: <a href=\"https://docs.scipy.org/doc/numpy/user/quickstart.html\" id=\"tex2html18\" name=\"tex2html18\">https://docs.scipy.org/doc/numpy/user/quickstart.html</a><br/>\n  Get Started with TensorFlow. Available online: <a href=\"https://www.tensorflow.org/tutorials/\" id=\"tex2html19\" name=\"tex2html19\">https://www.tensorflow.org/tutorials/</a></p>\n", "course_name": "Data Science: principles and practice", "course_code": "L330", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L330", "lecturers": ["ek358", "ejb1"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L314": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course teaches the basic signal-processing principles\n  necessary to understand many modern high-tech systems, with\n  application examples focussing on audio processing, image coding,\n  communication systems and software-defined radio. Students will\n  gain practical experience from numerical experiments in\n  programming assignments (in MATLAB, NumPy or Julia).</p>\n<h2>Lectures</h2>\n<ul>\n<li><strong>Signals and systems.</strong>\u00a0Discrete\n    sequences and systems: types and properties. Amplitude, phase,\n    frequency, modulation, decibels, root-mean square. Linear\n    time-invariant systems, convolution. Some examples from\n    electronics, optics and acoustics.</li>\n<li><strong>Phasors.</strong>\u00a0Eigen functions of linear\n    time-invariant systems. Review of complex arithmetic. Phasors\n    as orthogonal base functions.</li>\n<li><strong>Fourier transform.</strong>\u00a0Forms and\n    properties of the Fourier transform. Convolution theorem. Rect\n    and sinc.</li>\n<li><strong>Dirac\u2019s delta function.</strong>\u00a0Fourier\n    representation of sine waves, impulse combs in the time and\n    frequency domain. Amplitude-modulation in the frequency\n    domain.</li>\n<li><strong>Discrete sequences and\n    spectra.</strong>\u00a0Sampling of continuous signals, periodic\n    signals, aliasing, interpolation, sampling and reconstruction,\n    sample-rate conversion, oversampling, spectral inversion.</li>\n<li><strong>Discrete Fourier\n    transform.</strong>\u00a0Continuous\u00a0<em>versus</em>\u00a0discrete\n    Fourier transform, symmetry, linearity, FFT, real-valued FFT,\n    FFT-based convolution, zero padding, FFT-based resampling,\n    deconvolution exercise.</li>\n<li><strong>Spectral estimation.</strong>\u00a0Short-time\n    Fourier transform, leakage and scalloping phenomena, windowing,\n    zero padding. Audio and voice examples. DTFM exercise.</li>\n<li><strong>Finite impulse-response\n    filters.</strong>\u00a0Properties of filters, implementation\n    forms, window-based FIR design, use of frequency-inversion to\n    obtain high-pass filters, use of modulation to obtain band-pass\n    filters.</li>\n<li><strong>Infinite impulse-response\n    filters.</strong>\u00a0Sequences as\n    polynomials,\u00a0<em>z</em>-transform, zeros and poles, some\n    analog IIR design techniques (Butterworth, Chebyshev I/II,\n    elliptic filters, second-order cascade form).</li>\n<li><strong>Band-pass signals.</strong>\u00a0Band-pass sampling\n    and reconstruction, IQ up and down conversion, superheterodyne\n    receivers, software-defined radio front-ends, IQ representation\n    of AM and FM signals and their demodulation.</li>\n<li><strong>Digital\n    communication.</strong>\u00a0Pulse-amplitude modulation.\n    Matched-filter detector. Pulse shapes, inter-symbol\n    interference, equalization. IQ representation of ASK, BSK, PSK,\n    QAM and FSK signals.\u00a0[2 hours]</li>\n<li><strong>Random sequences and noise.</strong>\u00a0Random\n    variables, stationary and ergodic processes, autocorrelation,\n    cross-correlation, deterministic cross-correlation sequences,\n    filtered random sequences, white noise, periodic\n    averaging.</li>\n<li><strong>Correlation coding.</strong>\u00a0Entropy, delta\n    coding, linear prediction,\n    dependence\u00a0<em>versus</em>\u00a0correlation, random\n    vectors, covariance, decorrelation, matrix diagonalization,\n    eigen decomposition, Karhunen-Lo\u00e8ve transform, principal\n    component analysis. Relation to orthogonal transform coding\n    using fixed basis vectors, such as DCT.</li>\n<li><strong>Lossy versus lossless\n    compression.</strong>\u00a0What information is discarded by\n    human senses and can be eliminated by encoders? Perceptual\n    scales, audio masking, spatial resolution, colour coordinates,\n    some demonstration experiments.</li>\n<li><strong>Quantization, image coding\n    standards.</strong>\u00a0Uniform and logarithmic quantization,\n    A/\u00b5-law coding, dithering, JPEG.</li>\n</ul>\n<h2>Objectives</h2>\n<ul>\n<li>apply basic properties of time-invariant linear\n    systems;</li>\n<li>understand sampling, aliasing, convolution, filtering, the\n    pitfalls of spectral estimation;</li>\n<li>explain the above in time and frequency domain\n    representations;</li>\n<li>use filter-design software;</li>\n<li>visualize and discuss digital filters in\n    the\u00a0<em>z</em>-domain;</li>\n<li>use the FFT for convolution, deconvolution, filtering;</li>\n<li>implement, apply and evaluate simple DSP applications;</li>\n<li>familiarity with a number of signal-processing concepts\n    used in digital communication systems</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Lyons, R.G. (2010).\u00a0<em>Understanding digital signal\n  processing.</em>\u00a0Prentice Hall (3rd ed.).<br/>\n  Oppenheim, A.V. and Schafer, R.W. (2007).\u00a0<em>Discrete-time\n  digital signal processing.</em>\u00a0Prentice Hall (3rd ed.).<br/>\n  Stein, J. (2000).\u00a0<em>Digital signal processing \u2013 a computer\n  science perspective.</em>\u00a0Wiley.</p>\n", "course_name": "Digital Signal Processing", "course_code": "L314", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L314", "lecturers": ["mgk25"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L21": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module introduces students to interactive theorem proving\n  using Isabelle. It includes techniques for specifying formal\n  models of software and hardware systems and for deriving\n  properties of these models.</p>\n<h2>Syllabus</h2>\n<ul>\n<li>Introduction to higher-order logic and Isabelle/HOL. [2\n    lectures]</li>\n<li>Recursive datatypes and functions: modelling them in logic,\n    reasoning about them. [2 lectures]</li>\n<li>Reasoning in predicate logic and typed set theory. [2\n    lectures]</li>\n<li>Inductive Definitions. [1 lecture]</li>\n<li>Introduction to hardware verification: combinational and\n    sequential circuits, registers, etc. [1 lecture]</li>\n<li>Modelling operational semantics definitions and proving\n    properties. [2 lectures]</li>\n<li>Structured proofs. [2 lectures]</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>possess good skills in the use of Isabelle;</li>\n<li>be able to specify inductive definitions and perform proofs\n    by induction;</li>\n<li>be able to define and use abstract models in\n    verification;</li>\n<li>be able to express a variety of specifications in\n    higher-order logic.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Each candidate will undertake two small formalisations, which\n  will serve as the basis for assessment.</p>\n<h2>Practical work</h2>\n<p>Four supervised practical sessions will allow students to\n  develop skills.</p>\n<p><em><strong>NOTE: If these module is run\n  remotely,\u00a0students\u00a0will require\u00a0a fairly high\n  specification laptop or PC\u00a0(minimum 8 GB)</strong></em></p>\n<h2>Assessment</h2>\n<p>Each student must undertake two small verification projects,\n  each consisting of a practical write-up accompanied by an\n  Isabelle theory file. These will be started during the practical\n  sessions but will probably be completed on the student\u2019s own\n  time. The projects will assess the extent to which each candidate\n  has absorbed the syllabus and developed practical skills. The\n  lecturer will set and mark the assessments. The mark will be\n  reported as a percentage.</p>\n<h2>Recommended reading</h2>\n<p>Nipkow, T., Paulson, L.C. and Wenzel, M. (2002). <em>A proof\n  assistant for higher-order logic</em>. Springer LNCS 2283.<br/>\n  Krauss, A. <em>Defining recursive functions in\n  Isabelle/HOL</em>.<br/>\n  Nipkow, T. (). <em>Programming and Proving in\n  Isabelle/HOL</em>.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Interactive Formal Verification", "course_code": "L21", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L21", "lecturers": ["lp15"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L95": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module aims to provide a brief introduction to\n  linguistics for computer scientists and then goes on to cover\n  some of the core tasks in natural language processing (NLP),\n  focussing on statistical parsing of sentences to yield syntactic\n  and semantic representations. We will look at how to evaluate\n  parsers and see how well state-of-the-art tools perform given\n  current techniques.</p>\n<h2>Syllabus</h2>\n<ul>\n<li>Linguistics for NLP - morphology, syntax, semantics,\n    pragmatics (of English) [6 sessions]</li>\n<li>Parsing - grammars, treebanks, representations and\n    evaluation, statistical parse ranking [8 sessions]</li>\n<li>Interpretation - compositional semantics and entailment,\n    pragmatic inference [2 sessions]</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>understand the basic properties of human languages and be\n    familiar with descriptive and theoretical frameworks for\n    handling these properties;</li>\n<li>understand the design of tools for NLP tasks such as\n    parsing and be able to apply them to text and evaluate their\n    performance;</li>\n<li>understand some of the basic principles of the\n    representation of linguistic meaning and interpretative\n    inference.</li>\n</ul>\n<h2>Practical work</h2>\n<ul>\n<li>Week 6: Download and apply a PSG-based parser to a\n    designated text. Evaluate the performance of the tools\n    quantitatively and qualitatively.</li>\n<li>Week 8: Download and apply two parsers to a designated\n    text. Evaluate the performance of the tools quantitatively and\n    qualitatively.</li>\n</ul>\n<h2>Assessment</h2>\n<ul>\n<li>There will be four ticked, take-home assignments in the\n    first half of the term. Each assignment is worth 5% of the\n    final mark.</li>\n<li>An assessed practical report based on the practicals\n    described above. The practical report will consist of a\n    description of the work done of not more than 5000 words. It\n    will contribute 80% of the final mark.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Jurafsky, D. and Martin, J. (2008). <em>Speech and Language\n  Processing</em>. Prentice-Hall (2nd ed.). (See also 3rd ed.\n  available online.)</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Introduction to Natural Language Syntax and Parsing", "course_code": "L95", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L95", "lecturers": ["ejb1", "pjb48"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "R244": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module provides an introduction to large-scale data\n  processing, optimisation, and the impact on computer system's\n  architecture. Large-scale distributed applications with high\n  volume data processing such as training of machine learning will\n  grow ever more in importance. Supporting the design and\n  implementation of robust, secure, and heterogeneous large-scale\n  distributed systems is essential. To deal with distributed\n  systems with a large and complex parameter space, tuning and\n  optimising computer systems is becoming an important and complex\n  task, which also deals with the characteristics of input data and\n  algorithms used in the applications. Algorithm designers are\n  often unaware of the constraints imposed by systems and the best\n  way to consider these when designing algorithms with massive\n  volume of data. On the other hand, computer systems often miss\n  advances in algorithm design that can be used to cut down\n  processing time and scale up systems in terms of the size of the\n  problem they can address. Integrating machine learning approaches\n  (e.g. Bayesian Optimisation, Reinforcement Learning) for system\n  optimisation will also be explored in this course.</p>\n<h2>Syllabus</h2>\n<p>This course provides perspectives on large-scale data\n  processing, including data-flow programming, stream processing,\n  graph data processing and computer system optimisation,\n  especially using machine learning approaches, thus providing a\n  solid basis to work on the next generation of distributed\n  systems.</p>\n<p>The module consists of 8 sessions, with 5 sessions on specific\n  aspects of large-scale data processing research. Each session\n  discusses 3-4 papers, led by the assigned students. One session\n  is a hands-on tutorial on MapReduce using data flow programming\n  and/or Deep Neural Networks using Google TensorFlow. The first\n  session advises on how to read/review a paper together with a\n  brief introduction on different perspectives in large-scale data\n  processing and optimisation. The last session is dedicated to the\n  student presentation of open-source project studies.</p>\n<ol>\n<li>Introduction to large-scale data processing and\n    optimisation</li>\n<li>Data flow programming: Map/Reduce to TensorFlow</li>\n<li>Large-scale graph data processing: storage, processing\n    model and parallel processing</li>\n<li>Map/Reduce and Deep Neural Network using TensorFlow\n    hands-on tutorial</li>\n<li>Stream data processing and data/query model</li>\n<li>Machine Learning for optimisation of computer systems</li>\n<li>Task scheduling optimisation and Auto-tuning</li>\n<li>Presentation of Open Source Project Study</li>\n</ol>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>Understand key concepts of scalable data processing\n    approaches in future computer systems.</li>\n<li>Obtain a clear understanding of building distributed\n    systems using data centric programming and large-scale data\n    processing.</li>\n<li>Understand a large and complex parameter space in computer\n    system's optimisation and applicability of Machine Learning\n    approach.</li>\n</ul>\n<h2>Coursework</h2>\n<h3>Reading Club:</h3>\n<ul>\n<li>The preparation for the reading club will involve 1-3\n    papers every week. At each session, around 3-4 papers are\n    selected under the given topic, and the students present their\n    review work.</li>\n<li>Hands-on tutorial session of data flow programming\n    including writing an application of processing streaming in\n    Twitter data and/or Deep Neural Networks using Google\n    TensorFlow using cluster computing.</li>\n</ul>\n<h3>Reports</h3>\n<p>The following three reports are required, which could be\n  extended from the assignment of the reading club, within the\n  scope of data centric systems.</p>\n<ol>\n<li>Review report on a full length paper (max 1800 words)\n      <ul>\n<li>Describe the contribution of the paper in depth with\n        criticisms</li>\n<li>Crystallise the significant novelty in contrast to\n        other related work</li>\n<li>Suggestions for future work</li>\n</ul>\n</li>\n<li>Survey report on sub-topic in large-scale data processing\n    and optimisation (max 2000 words)\n      <ul>\n<li>Pick up to 5 papers as core papers in the survey\n        scope</li>\n<li>Read the above and expand reading through related\n        work</li>\n<li>Comprehend the view and finish an own survey paper</li>\n</ul>\n</li>\n<li>Project study and exploration of a prototype (max 2500\n    words)\n      <ul>\n<li>What is the significance of the project in the research\n        domain?</li>\n<li>Compare with similar and succeeding projects</li>\n<li>Demonstrate the project by exploring its prototype</li>\n</ul>\n</li>\n</ol>\n<p>Reports 1 and 2 should be handed in by the end of 5th week and\n  7th week of the course. Report 3 should be handed in by the end\n  of the Michaelmas Term.</p>\n<h2>Assessment</h2>\n<p>The final grade for the course will be provided as a\n  percentage, and the assessment will consist of two parts:</p>\n<ol>\n<li>25%: for reading club (participation, presentation)</li>\n<li>75%: for the three reports:\n      <ul>\n<li>15%: Intensive review report</li>\n<li>25%: Survey report</li>\n<li>35%: Project study</li>\n</ul>\n</li>\n</ol>\n<h2>Recommended reading</h2>\n<ol>\n<li>M. Abadi et al. TensorFlow: A System for Large-Scale\n    Machine Learning, OSDI, 2016.</li>\n<li>D. Aken et al.: Automatic Database Management System Tuning\n    Through Large-scale Machine Learning, SIGMOD, 2017.</li>\n<li>J. Ansel et al. Opentuner: an extensible framework for\n    program autotuning. PACT, 2014.</li>\n<li>V. Dalibard, M. Schaarschmidt, E. Yoneki. BOAT: Building\n    Auto-Tuners with Structured Bayesian Optimization, WWW,\n    2017.</li>\n<li>J. Dean et al. Large scale distributed deep networks. NIPS,\n    2012.</li>\n<li>G. Malewicz, M. Austern, A. Bik, J. Dehnert, I. Horn, N.\n    Leiser, G. Czajkowski. Pregel: A System for Large-Scale Graph\n    Processing, SIGMOD, 2010.</li>\n<li>A. Mirhoseini et al. Device Placement Optimization with\n    Reinforcement Learning, ICML, 2017.</li>\n<li>D. Murray, F. McSherry, R. Isaacs, M. Isard, P. Barham, M.\n    Abadi. Naiad: A Timely Dataflow System, SOSP, 2013.</li>\n<li>M. Schaarschmidt, S. Mika, K. Fricke and E. Yoneki:\n    RLgraph: Modular Computation Graphs for Deep Reinforcement\n    Learning, SysML, 2019.</li>\n</ol>\n<p>A complete list can be found on the course material web page.\n  See also 2019-2020 course material on the previous course\n  <a href=\"https://www.cl.cam.ac.uk/teaching/1920/R244/materials.html\" target=\"_blank\">Large-Scale Data Processing and\n  Optimisation</a>.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Large-scale data processing and optimisation", "course_code": "R244", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R244", "lecturers": ["ey204"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L48": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>The module \u201cMachine Learning and the Physical World\u201d is\n  focused on machine learning systems that interact directly with\n  the real world. Building artificial systems that interact with\n  the physical world have significantly different challenges\n  compared to the purely digital domain. In the real world data is\n  scares, often uncertain and decisions can have costly and\n  irreversible consequences. However, we also have the benefit of\n  centuries of scientific knowledge that we can draw from. This\n  module will provide the methodological background to machine\n  learning applied in this scenario. We will study how we can build\n  models with a principled treatment of uncertainty, allowing us to\n  leverage prior knowledge and provide decisions that can be\n  interrogated.</p>\n<p>There are three principle points about machine learning in the\n  real world that will concern us.</p>\n<ol>\n<li>We often have a mechanistic understanding of the real world\n    which we should be able to bootstrap to make decisions. For\n    example, equations from physics or an understanding of\n    economics.</li>\n<li>Real world decisions have consequences which may have\n    costs, and often these cost functions need to be assimilated\n    into our machine learning system.</li>\n<li>The real world is surprising, it does things that you do\n    not expect and accounting for these challenges requires us to\n    build more robust and or interpretable systems.</li>\n</ol>\n<p>Decision making in the real world hasn\u2019t begun only with the\n  advent of machine learning technologies. There are other domains\n  which take these areas seriously, physics, environmental\n  scientists, econometricians, statisticians, operational\n  researchers. This course identifies how machine learning can\n  contribute and become a tool within these fields. It will equip\n  you with an understanding of methodologies based on uncertainty\n  and decision making functions for delivering on these\n  challenges.</p>\n<h2>Objectives</h2>\n<p>You will gain detailed knowledge of</p>\n<ul>\n<li>surrogate models and uncertainty</li>\n<li>surrogate-based optimization</li>\n<li>sensitivity analysis</li>\n<li>experimental design</li>\n</ul>\n<p>You will gain knowledge of</p>\n<ul>\n<li>counterfactual analysis</li>\n<li>surrogate-based quadrature</li>\n</ul>\n<h2>Schedule</h2>\n<p>Week 1: Introduction to the unit and foundation of\n  probabilistic modelling</p>\n<p>Week 2: Gaussian processes, inference and introduction to\n  decision making</p>\n<p>Week 3: Sequential decision making under uncertainty and\n  Sensitivity Analysis</p>\n<p>Week 4: Counter Factual Analysis and Experimental Design</p>\n<p>Week 5: Machine Learning for Inverse problems</p>\n<p>Week 6-8: Case studies of applications and Projects</p>\n<h2>Practical work</h2>\n<p>During the first five weeks of the unit we will provide a\n  weekly worksheet that will focus on implementation and practical\n  exploration of the material covered in the lectures. The\n  worksheets will allow you to build up a these methods without\n  relying on extensive external libraries. You are free to use any\n  programming language of choice however we highly recommended the\n  use of =Python=.</p>\n<h2>Assessment</h2>\n<p>This unit will be assessed using a group project. Each group\n  will work on an application of uncertainty that covers the\n  material of the first 5 weeks of lectures in the unit. Each group\n  will submit a report which will form the basis of the assessment.\n  In addition to the report each group will also attend a short\n  oral examination based on the material covered both in the report\n  and the taught material.</p>\n<h2>Recommended Reading</h2>\n<p>Rasmussen, C. E. and Williams, C. K. I. (2006). <em>Gaussian\n  Processes for Machine Learning</em>. MIT Press</p>\n<p>Bishop, C. (2006). <em>Pattern recognition and machine\n  learning</em>. Springer.<br/>\n<a href=\"https://www.microsoft.com/en-us/research/uploads/prod/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf\" target=\"_blank\">https://www.microsoft.com/en-us/research/uploads/prod/2006/01/Bishop-Pattern-Recognition-and-Machine-Learning-2006.pdf</a></p>\n<p>Laplace, P. S. (1902). <em>A Philosophical Essay on\n  Probabilities</em>. John Wiley &amp; Sons.<br/>\n<a href=\"https://archive.org/details/philosophicaless00lapliala\" target=\"_blank\">https://archive.org/details/philosophicaless00lapliala</a></p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Machine Learning and the Physical World", "course_code": "L48", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L48", "lecturers": ["ndl21"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L101": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module aims to provide an introduction to machine\n  learning with specific application to tasks such as document\n  classification, spam email filtering, language modelling,\n  part-of-speech tagging, and named entity and event recognition\n  for textual information extraction. We will cover supervised,\n  weakly-supervised and unsupervised approaches using generative\n  and discriminative linear and non-linear classifiers, such as\n  Naive Bayes, Perceptron, Multi-Layer Perceptron, Logistic\n  Regression, clustering / dimensionality-reduction methods, such\n  as latent Dirichlet allocation and neural word embeddings.</p>\n<h2>Syllabus</h2>\n<p>Classification by machine learning: classification, types of\n  classifier, generative vs. discriminative models,\n  (un-/semi-)supervised training.</p>\n<p>Document Classification: by topic, sentiment, spam content,\n  etc, bag-of-words, word embeddings, feature selection /\n  induction.</p>\n<p>Structured prediction: sequence tagging, graph parsing,\n  incremental language generation with recurrent neural\n  networks.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>understand the issues involved in applying machine learning\n    approaches to a range of language processing applications;</li>\n<li>understand the theory underlying a number of machine\n    learning approaches that have been applied to language\n    processing, including: Naive Bayes, Perceptron, Logistic\n    Regression, and Multi-Layer Perceptron;</li>\n<li>understand some applications and specific tasks including:\n    document topic classification and clustering, SPAM filtering,\n    PoS tagging, named entity recognition, event extraction,\n    language modelling and word embeddings.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Students will be expected to undertake reading for assigned\n  lectures and seminars. Each student will give a 20 minute\n  presentation of one paper.</p>\n<h2>Assessment</h2>\n<ul>\n<li>Students will receive one tick worth 5% for attendance at\n    seminar sessions, reading of assigned material, and\n    satisfactory contribution during seminars.</li>\n<li>Students will receive a second tick worth 5% for a\n    satisfactory presentation of an assigned paper.</li>\n<li>students will undertake a small project to be agreed with\n    the lecturers and write a project report of not more than 5000\n    words. The report will be due around the beginning of the Lent\n    Term (see academic calendar for precise date), will be assessed\n    by the lecturers, and will account for 90% of the module\n    marks.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Bishop, C. (2006). <em>Pattern recognition and machine\n  learning</em>. Springer. (Chaps: 1, 2, 4-9, 13).</p>\n<p>Jurafsky, D. &amp; Martin, J. (2008). <em>Speech and language\n  processing</em>. Prentice Hall (2nd ed.). (Chaps: 4-6, 22)(see\n  also 3rd ed. draft, online).</p>\n<p>Manning, C., Raghavan, P. &amp; Schutze, H. (2008).\n  <em>Introduction to information retrieval</em>. Cambridge\n  University Press. (Chaps: 12-18).</p>\n<p>Goodfellow et al, DL (Chaps 6-12).</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Machine Learning for Language Processing", "course_code": "L101", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L101", "lecturers": ["av308", "ejb1"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L304": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>In recent years multiprocessors have become ubiquitous, but\n  building reliable concurrent systems with good performance\n  remains very challenging. The aim of this module is to introduce\n  some of the theory and the practice of concurrent programming,\n  from hardware memory models and the design of high-level\n  programming languages to the correctness and performance\n  properties of concurrent algorithms.</p>\n<h2>Lectures</h2>\n<p>Part 1: Introduction and relaxed-memory concurrency [Professor\n  P. Sewell]</p>\n<ul>\n<li><strong>Introduction</strong>. Sequential consistency,\n    atomicity, basic concurrent problems. [1 block]</li>\n<li><strong>Concurrency on real multiprocessors</strong>: the\n    relaxed memory model(s) for x86, ARM, and IBM Power, and\n    theoretical tools for reasoning about x86-TSO programs. [2\n    blocks]</li>\n<li><strong>High-level languages</strong>. An introduction to\n    C/C++11 and Java shared-memory concurrency. [1 block]</li>\n</ul>\n<p>Part 2: Concurrent algorithms [Dr T. Harris]</p>\n<ul>\n<li><strong>Concurrent programming</strong>. Simple algorithms\n    (readers/writers, stacks, queues) and correctness criteria\n    (linearisability and progress properties). Advanced\n    synchronisation patterns (e.g. some of the following:\n    optimistic and lazy list algorithms, hash tables,\n    double-checked locking, RCU, hazard pointers), with discussion\n    of performance and on the interaction between algorithm design\n    and the underlying relaxed memory models. [3 blocks]</li>\n<li><strong>Research topics</strong>, likely to include one\n    hour on transactional memory and one guest lecture. [1\n    block]</li>\n</ul>\n<h2>Objectives</h2>\n<p>By the end of the course students should:</p>\n<ul>\n<li>have a good understanding of the semantics of concurrent\n    programs, both at the multprocessor level and the C/Java\n    programming language level;</li>\n<li>have a good understanding of some key concurrent\n    algorithms, with practical experience.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Herlihy, M. and Shavit, N. (2008). <em>The art of\n  multiprocessor programming</em>. Morgan Kaufmann.</p>\n", "course_name": "Multicore Semantics and Programming", "course_code": "L304", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L304", "lecturers": ["pes20", "tlh20"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "R02": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module aims to provide the world with more network\n  architects. The 2011-2012 version was oriented around the\n  evolution of IP to support new services like multicast, mobility,\n  multihoming, pub/sub and, in general, data oriented networking.\n  The course is a <em>paper reading</em> which puts the onus on the\n  student to do the work.</p>\n<h2>Syllabus</h2>\n<ul>\n<li>IPng [2 lectures, Jon Crowcroft]</li>\n<li>New Architectures [2 lectures, Jon Crowcroft]</li>\n<li>Multicast [2 lectures, Jon Crowcroft]</li>\n<li>Content Distribution and Content Centric Networks [2\n    lectures, Jon Crowcroft]</li>\n<li>Resource Pooling [2 lectures, Jon Crowcroft]</li>\n<li>Green Networking [2 lectures, Jon Crowcroft]</li>\n<li>Alternative Router Implementions [2 lectures, Jon\n    Crowcroft]</li>\n<li>Data Center Networks [2 Lectures, Jon Crowcroft]</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students should be able to:</p>\n<ul>\n<li>contribute to new network system designs;</li>\n<li>engineer evolutionary changes in network systems;</li>\n<li>identify and repair architectural design flaws in networked\n    systems;</li>\n<li>see that there are no perfect solutions (aside from\n    academic ones) for routing, addressing, naming;</li>\n<li>understand tradeoffs in modularisation and other pressures\n    on clean software systems implementation, and see how the world\n    is changing the proper choices in protocol layering, or non\n    layered or cross-layered.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Assessment is through three graded essays (each chosen\n  individually from a number of suggested or student-chosen\n  topics), as follows:</p>\n<ol>\n<li>Analysis of two different architectures for a particular\n    scenario in terms of cost/performance tradeoffs for some\n    functionality and design dimension, for example:\n      <ul>\n<li>ATM \u2013 e.g. for hardware <em>versus</em> software\n        tradeoff</li>\n<li>IP \u2013 e.g. for mobility, multi-homing, multicast,\n        multipath</li>\n<li>3GPP \u2013 e.g. for plain complexity <em>versus</em>\n        complicatedness</li>\n</ul>\n</li>\n<li>A discursive essay on a specific communications systems\n    component, in a particular context, such as <em>ad hoc</em>\n    routing, or wireless sensor networks.</li>\n<li>A bespoke network design for a narrow, well specified\n    specialised target scenario, for example:\n      <ul>\n<li>A customer baggage tracking network for an\n        airport.</li>\n<li>in-flight entertainment system.</li>\n<li>in-car network for monitoring and control.</li>\n<li>inter-car sensor/control network for automatic\n        highways.</li>\n</ul>\n</li>\n</ol>\n<h2>Practical work</h2>\n<p>This course does not feature any implementation work due to\n  time constraints.</p>\n<h2>Assessment</h2>\n<ul>\n<li>Three 1,200-word essays (worth 25% each), and</li>\n<li>an annotated bibliography (25%).</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Pre-course reading:</p>\n<p>Keshav, S. (1997). <em>An engineering approach to computer\n  networking</em>. Addison-Wesley (1st ed.). ISBN 0201634422<br/>\n  Peterson, L.L. and Davie, B.S. (2007). <em>Computer networks: a\n  systems approach</em>. Morgan Kaufmann (4th ed.).</p>\n<p>Design patterns:</p>\n<p>Day, John (2007). <em>Patterns in network architecture: a\n  return to fundamentals</em>. Prentice Hall.</p>\n<p>Example systems:</p>\n<p>Krishnamurthy, B. and Rexford, J. (2001). <em>Web protocols\n  and practice: HTTP/1.1, Networking protocols, caching, and\n  traffic measurement</em>. Addison-Wesley.</p>\n<p>Economics and networks:</p>\n<p>Frank, Robert H. (2008). <em>The economic naturalist: why\n  economics explains almost everything</em>.</p>\n<p>Papers:</p>\n<p>Certainly, a collection of papers (see <a href=\"http://ccr.sigcomm.org/\">ACM CCR</a> which publishes notable\n  network researchers' favourite ten papers every 6 months or\n  so).</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Network Architectures", "course_code": "R02", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R02", "lecturers": ["jac22"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L90": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": null, "course_name": "Overview of Natural Language Processing", "course_code": "L90", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L90", "lecturers": ["ws390", "apc38", "pjb48"], "lectures": 18, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L46": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course will examine the emerging principles and\n  methodologies that underpin scalable and efficient machine\n  learning systems. Primarily, the course will focus on an exciting\n  cross-section of algorithms and system techniques that are used\n  to support the training and inference of machine learning models\n  under a spectrum of computing systems that range from constrained\n  embedded systems up to large-scale distributed systems. It will\n  also touch upon the new engineering practices that are developing\n  in support of such systems at scale. When needed to appreciate\n  issues of scalability and efficiency, the course will drill down\n  to certain aspects of computer architecture, systems software and\n  distributed systems and explore how these interact with the usage\n  and deployment of state-of-the-art machine learning.</p>\n<h2>Syllabus</h2>\n<p>Topics covered may include the following, with confirmation a\n  month before the course begins:</p>\n<ul>\n<li>System Performance Trade-offs</li>\n<li>Distributed Learning Algorithms\u00a0</li>\n<li>Model Compression\u00a0</li>\n<li>Deep Learning Compilers\u00a0</li>\n<li>Frameworks and Run-times\u00a0</li>\n<li>Scalable Inference Serving\u00a0</li>\n<li>Development Practices\u00a0</li>\n<li>Automated Machine Learning\u00a0</li>\n<li>Federated Learning\u00a0</li>\n</ul>\n<p>Primarily, topics are covered with conventional lectures.\n  However, where appropriate, material will be delivered through\n  hands-on lab tutorials. Lab tutorials will make use of hardware\n  including ARM microcontrollers and multi-GPU machines to explore\n  forms of efficient machine learning (any necessary equipment will\n  be provided to students)</p>\n<h2>Assessment</h2>\n<p>Each student will be assessed based on a written project\n  report that will detail an investigation into a particular aspect\n  of machine learning systems, this report will be made available\n  publicly. Project reports may be done in teams or individually.\n  We will require each team (or individual student if working by\n  themselves) to perform this work using a shared repository to\n  which we are given access. This repository will contain\n  experiment code and results, along with the written report. The\n  documentation of planning and decision making through the\n  investigation is also required and must be stored within the\n  repository as well. Where needed, marks will be differentiated\n  within groups using this repository as an input.</p>\n<h2>Further Information</h2>\n<p>Please note that the finer details regarding the syllabus and\n  assessment for this module is still under discussion.</p>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Principles of Machine Learning Systems", "course_code": "L46", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L46", "lecturers": [], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "LE49": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Further information</h2>\n<p>This module is borrowed from the Department of Engineering and\n  some of\u00a0the lectures are given at the Trumpington Street\n  site during Michaelmas Term. Students wishing to take this module\n  should note that the Department of Engineering is about 2 miles\n  from the Computer Laboratory.</p>\n<h2>Syllabus</h2>\n<h2>Lectures</h2>\n<ul>\n<li>Students will take the first ten hours of lectures over at\n    the Department of Engineering - Please refer to the <a href=\"http://teaching.eng.cam.ac.uk/content/engineering-tripos-part-iib-4f13-probabilistic-machine-learning-2020-21\">\n    Engineering Course 4f13 webpage</a> for details of the\n    content.</li>\n<li>Two 1.5 hour lectures (one near the beginning of the term,\n    one closer to the middle) will be given to preview\u00a0what\n    the forthcoming lectures will be covering, and prime students\n    on the notation.</li>\n<li>Four 1 hour\u00a0lectures on \"Neural networks as\n    probabilistic models\"</li>\n</ul>\n<h2>Assessment</h2>\n<p>There are four pieces of coursework. The first three are\n  structured exercises designed to reinforce the lectures. The\n  fourth is an open-ended investigation of a topic that you chose\n  from a small list, drawing on the main themes of the lecture\n  course.</p>\n<ol>\n<li>Gaussian processes exercise (10%, due in Michaelmas\n    term)</li>\n<li>Probabilistic ranking exercise (10%, due in Michaelmas\n    term)</li>\n<li>Topic modelling exercise (10%, due in Michaelmas term)</li>\n<li>Investigative project (70%, due beginning of Lent\n    term)</li>\n</ol>\n<p>The investigative project should be written up in the style of\n  a NIPS or ICML conference paper, 8 pages plus one for\n  references.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Probabilistic Machine Learning", "course_code": "LE49", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/LE49", "lecturers": ["djw1005"], "lectures": 17, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "RSP": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>To provide advice on and training in a variety of practical\n  skills required for research. To provide training in a subset\n  chosen from the diverse set of skills that will be useful in the\n  other research-led modules, in the individual project, and in the\n  student's future career.</p>\n<h2>Syllabus</h2>\n<h3>Core Units</h3>\n<p>All students must take the following core units:</p>\n<ul>\n<li>Online introduction to writing: What is academic English;\n    Achieving Clarity in English; Studying in English</li>\n<li>Introduction to Academic Writing in the UK</li>\n<li>How to write a good abstract</li>\n<li>One-Minute Madness: project 'elevator pitch'</li>\n<li>How to prepare a research presentation</li>\n</ul>\n<h3>Optional Units</h3>\n<p>Students may choose from a list of units that are most\n  relevant to their research plans, and supplementary to their\n  previous experience. <strong>A full list of units can be accessed\n  from <a href=\"https://www.vle.cam.ac.uk/course/view.php?id=199381\" target=\"_blank\"><strong>Moodle</strong></a>\u00a0</strong>(only\n  available to current students). Each student must participate in\n  at least\u00a04 optional units. Those CPGS students who completed\n  the M.Phil in Advanced Computer Science previously will choose a\n  minimum of\u00a08 optional units. Students may attend further\n  sessions, subject to availability of spaces. No credit is given\n  for attendance greater than the minimum requirement.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should have improved\n  their ability in the practical aspects of research, including\n  specific skills relevant to their individual research plans and\n  career aspirations, as chosen from the selection of optional\n  units.</p>\n<h2>Coursework</h2>\n<p>Course work for the core unit on academic writing will include\n  a submitted written exercise.</p>\n<p>Students will need to submit a copy of their powerpoint slide\n  for the one-minute madness presentation.</p>\n<p>Optional units will not require coursework to be completed or\n  submitted beyond participation in the session itself.</p>\n<h2>Practical work</h2>\n<p>Some options will involve practical work, which will be\n  carried out during the session. This will provide an opportunity\n  for students to practice specific skills, but will not be\n  formally assessed.</p>\n<h2>Assessment</h2>\n<p>An informal assessment exercise will be included as part of\n  the Introduction to Academic Writing unit. However, this will not\n  be a formal assessed exercise, and will not contribute to the\n  final examination of the MPhil.</p>\n<p>Students are required to participate in a minimum of\u00a04\n  <strong>optional</strong> units (8 for those who completed the\n  MPhil previously) as a course requirement. Because units are\n  chosen according to individual need or interest, students should\n  assess for themselves whether their choices have been appropriate\n  and sufficient to meet their individual needs. Based on this\n  self-assessment, students are encouraged to discuss with their\n  course adviser any further practical research skills that might\n  be needed for completion of their individual project. Module\n  convenors and project supervisors will be able to offer further\n  advice.</p>\n<p>Students will be\u00a0required to record the units they have\n  attended.</p>\n<h2>Recommended reading</h2>\n<p>Reading suggestions will be made, if appropriate, by\n  presenters of individual options. Note that all students are\n  expected to complete the online introduction to academic\n  writing.</p>\n", "course_name": "Research Skills Programme", "course_code": "RSP", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/RSP", "lecturers": [], "lectures": 24, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": true, "easter": false}, "R260": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>Data-driven technologies are increasingly the subject of\n  social commentary, political scrutiny and regulatory attention.\n  This module aims to develop a solid understanding of the\n  practical implications these concerns have on systems design and\n  engineering.</p>\n<p>Areas explored include the legal foundations in data\n  protection (GDPR), privacy, liability, human rights; issues of\n  tech-surveillance; algorithmic fairness, accountability and\n  transparency (the so-called 'FAT'); and the related implications\n  for technologies including cloud, machine learning and the\n  IoT.</p>\n<p>This course provides students with a practical background\n  regarding how law, policy and societal concerns interact with\n  technology. This is to develop an awareness and consideration of\n  how systems can be designed and engineered to be more\n  accountable, legally compliant, and generally better for\n  society.</p>\n<h2>Syllabus and coursework</h2>\n<p>The course will consist of\u00a0eight seminars covering the\n  following topics:</p>\n<ol>\n<li>Introduction and foundations of tech-law</li>\n<li>Privacy, data protection (GDPR), tech-surveillance</li>\n<li>Clouds, platforms and app ecosystems</li>\n<li>Internet of Things</li>\n<li>Algorithmic accountability (ML / automated decision\n    making)</li>\n</ol>\n<p>Seminars will be interactive and discussion-oriented, with\n  foundational materials presented in a lecture-like format.\n  Students will be allocated one or more reading materials to\n  present to the group. Coursework will also include short comment\n  pieces, and a research essay on relevant topics.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>Appreciate the practical considerations and challenges of\n    engineering more compliant and accountable systems;</li>\n<li>Understand the key legal, regulatory and social influences\n    on technical design;</li>\n<li>Be familiar with the interdisciplinary tech-legal research\n    landscapes;</li>\n<li>Appreciate the ongoing legal, policy and societal debates\n    concerning emerging technology.</li>\n</ul>\n<h2>Assessment</h2>\n<ul>\n<li>Presentation(s) of reading material (30%);</li>\n<li>Short comment pieces on topical issues (max 500 words)\n    (20%);</li>\n<li>A research essay (max 2500 words). Short presentations in\n    the final week (40%);</li>\n<li>General participation (10%).</li>\n</ul>\n<h2>Recommended Reading</h2>\n<p>Specific reading materials will be set according to each\n  week\u2019s topic.</p>\n<p>For some general background and context, suggested reading\n  includes:</p>\n<p>Arbesman, Samuel. (2017) <em>Overcomplicated</em>,\n  Portfolio.</p>\n<p>Eubaks, Virginia. (2019) <em>Automating Inequality: How\n  High-Tech Tools Profile, Police, and Punish the Poor</em>,\n  Picador USA.</p>\n<p>Lessig, Lawrence (2006) <a href=\"http://codev2.cc/download+remix/Lessig-Codev2.pdf\" target=\"_blank\"><em>Code, and other laws of cyberspace</em></a>, Basic\n  Books</p>\n<p>Hildebrandt, Mireille. (2020) <a href=\"https://www.cohubicol.com/assets/uploads/law_for_computer_scientists.pdf\" target=\"_blank\"><em>Law for Computer Scientists</em></a>,\n  Oxford</p>\n<p>Schneier, Bruce (2012) <a href=\"https://www.schneier.com/books/liars_and_outliers/\" target=\"_blank\"><em>Liars and Outliers</em></a>, John Wiley &amp;\n  Sons</p>\n<p>O'Neil, Cathy. (2017) <em>Weapons of Math Destruction: How Big\n  Data Increases Inequality and Threatens Democracy</em>,\n  Penguin.</p>\n<p>Pasquale, Frank. (2016) <em>The Black Box Society: The Secret\n  Algorithms That Control Money and Information</em>. Harvard.</p>\n<p><em><a href=\"https://www.fatml.org/resources/principles-for-accountable-algorithms\" target=\"_blank\">Principles for Accountable\n  Algorithms</a></em></p>\n<p><em><a href=\"http://fra.europa.eu/en/publication/2018/handbook-european-data-protection-law\" target=\"_blank\">Handbook on European Data Protection Law\n  2018</a></em></p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Technology, law and society", "course_code": "R260", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R260", "lecturers": ["js573"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": true, "lent": false, "easter": false}, "L41": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p><em>Systems research</em> refers to the study of a broad range\n  of behaviours arising from complex system design, including:\n  low-level operating systems; resource sharing and scheduling;\n  interactions between hardware and software; network-protocol\n  design and implementation; separation of mutually distrusting\n  parties on a common platform; and control of distributed-system\n  behaviours such as concurrency and data replication. This module\n  will:</p>\n<ol>\n<li>Teach systems-analysis methodology and practice through\n    tracing and performance profiling experiments;</li>\n<li>Expose students to real-world systems artefacts such as OS\n    schedulers and network stacks, and consider their\n    hardware-software interactions with CPUs;</li>\n<li>Develop scientific writing skills through a series of\n    laboratory assignments; and</li>\n<li>Assign a selection of original research papers to give\n    insight into potential research topics and approaches.</li>\n</ol>\n<p>The teaching style will blend lectures and hands-on labs that\n  teach methodology, design principles, and practical skills.\n  Students will be taught about (and assessed via) a series of lab\n  assignments based on in- and out-of-classroom practical work. The\n  systems studied are real, and all wires will be live.</p>\n<h2>Prerequisites</h2>\n<p>It is strongly recommended that students:</p>\n<ol>\n<li>Have previously (and successfully) completed an\n    undergraduate operating-system course\n     -- or have equivalent experience\n    through project or open-source work.</li>\n<li>Have reasonable comfort with the C and Python programming\n    languages. C is the primary implementation language for systems\n    that we will analyse, requiring reading fluency; userspace C\n    programs will also be written and extended as part of lab\n    exercises. Python will be used as our data-processing language,\n    and provides useful tools for data analysis and\n    presentation.</li>\n<li>Review an undergraduate operating-system textbook (such as\n    the 'Dinosaur Book') to ensure that basic OS concepts such as\n    the <em>process model</em>, <em>inter-process\n    communication</em>, <em>filesystems</em>, <em>network\n    stacks</em>, and <em>virtual memory</em> are familiar.</li>\n</ol>\n<h2>Syllabus</h2>\n<p>The sessions are split up into three submodules:</p>\n<ol>\n<li>\n<strong>Introduction to kernels and kernel\n      tracing/analysis</strong>\n<p>The purpose of this submodule is to introduce students to\n      the structure of a contemporary operating system kernel\n      through tracing and profiling.</p>\n<ul>\n<li><strong>Lecture 1 part 1:</strong> Introduction: OSes,\n        Systems Research (1h)</li>\n<li><strong>Lecture 1 part 2:</strong> TBC (1h)</li>\n<li><strong>Lecture 1 part 3:</strong> TBC (1h)</li>\n<li><strong>Lecture 2:</strong> Kernels and Tracing\n        (1h)</li>\n<li><strong>Lab 1:</strong>\u00a0I/O</li>\n<li><strong>Deliverable: Lab Assignment 1 -\u00a0\n        I/O\u00a0</strong></li>\n</ul>\n</li>\n<li>\n<strong>Processors, processes, and threads</strong>\n<p>This submodule introduces students to concrete\n      implications of the UNIX process model: processes and threads\n      in both userspace and kernelspace, the hardware foundations\n      for kernel and process isolation, system calls, and\n      traps.</p>\n<ul>\n<li><strong>Lecture 3:</strong> The Process Model - 1\n        (1h)</li>\n<li><strong>Lecture 4:</strong> The Process Model - 2\n        (1h)</li>\n<li><strong>Lab 2:</strong>\u00a0IPC\u00a0</li>\n<li><strong>Deliverable: Lab Assignment 2 - IPC\n        \u00a0</strong></li>\n</ul>\n</li>\n<li>\n<strong>TCP/IP</strong>\n<p>This submodule introduces students to a contemporary,\n      multithreaded, multiprocessing network stack, with a\n      particular interest in the TCP protocol. Labs will consider\n      both the behaviour of a single TCP connection, exploring the\n      TCP state machine, socket-buffer interactions with flow\n      control, and TCP congestion control. Students will use\n      DUMMYNET to simulate network latency and explore how TCP slow\n      start and congestion avoidance respond to network conditions.\n      The second marked lab assignment will be written.</p>\n<ul>\n<li><strong>Lecture 5:</strong> The Network Stack (1)\n        (1h)</li>\n<li><strong>Lecture 6:</strong> The Network Stack (2)\n        (1h)</li>\n<li><strong>Lab 3:</strong> TCP/IP\u00a0</li>\n<li><strong>Deliverable: Lab Assignment 3 -\u00a0 TCP\n        /IP</strong></li>\n</ul>\n</li>\n</ol>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>Have a good understanding of high-level OS kernel\n    structure</li>\n<li>Gained insight into hardware-software interactions for\n    compute and I/O</li>\n<li>Have practical skills in system tracing and performance\n    analysis</li>\n<li>Have been exposed to research ideas in system structure and\n    behaviour</li>\n<li>Have learned how to write systems-style performance\n    evaluations</li>\n</ul>\n<h2>Recommended reading</h2>\n<h3>Primary module texts</h3>\n<p>Course texts provide instruction on statistics,\n  operating-system design and implementation, and system tracing.\n  You will be asked to read selected chapters from these, but will\n  likely find other content in them useful as you proceed with the\n  labs.</p>\n<p>Marshall Kirk McKusick, George V. Neville-Neil, and Robert N.\n  M. Watson. <em>The Design and Implementation of the FreeBSD\n  Operating System, 2nd Edition</em>, Pearson Education, Boston,\n  MA, USA, September 2014.</p>\n<p>Brendan Gregg and Jim Mauro. <em>DTrace: Dynamic Tracing in\n  Oracle Solaris, Mac OS X and FreeBSD</em>, Prentice Hall Press,\n  Upper Saddle River, NJ, USA, April 2011.</p>\n<p>Raj Jain, <em>The Art of Computer Systems Performance\n  Analysis: Techniques for Experimental Design, Measurement,\n  Simulation, and Modeling</em>, Wiley - Interscience, New York,\n  NY, USA, April 1991.</p>\n<h3>Additional texts</h3>\n<p>Abraham Silberschatz, Peter Baer Galvin, and Greg Gagne,\n  <em>Operating System Concepts, Eighth Edition</em>, John Wiley\n  and Sons, Inc., New York, NY, USA, July 2008.</p>\n<p>Brendan Gregg. <em>Systems Performance: Enterprise and the\n  Cloud</em>, Prentice Hall Press, Upper Saddle River, NJ, USA,\n  October 2013.</p>\n<h3>Research-paper readings</h3>\n<p>Research-paper readings will be announced as the terms\n  proceed, but will likely include original papers on BPF, DTrace,\n  OS scheduling, OS scalability, network stacks, and systems\n  modelling.</p>\n", "course_name": "Advanced Operating Systems", "course_code": "L41", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L41", "lecturers": ["rnw24"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "R01": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This module will attempt to provide an overview of \u201csystems\u201d\n  research. This is a very broad field which has existed for over\n  50 years and which has historically included areas such as\n  operating systems, database systems, file systems, distributed\n  systems and networking, to name but a few. The course will thus\n  necessarily cover only a tiny subset of the field.</p>\n<p>Many good ideas in systems research are the result of\n  discussing and debating previous work. A primary aim of this\n  course therefore will be to educate students in the art of\n  <em>critical thinking</em>: the ability to argue for and/or\n  against a particular approach or idea. This will be done by\n  having students read and critique a set of papers each week. In\n  addition, each week will include presentations from a number of\n  participants which aim to advocate or criticise each piece of\n  work.</p>\n<h2>Syllabus</h2>\n<p>The syllabus for this course will vary from year to year so as\n  to cover a mixture of older and more contemporary systems papers.\n  Contemporary papers will be generally selected from the past 5\n  years, primarily drawn from high quality conferences such as\n  SOSP, OSDI, ASPLOS, FAST, NSDI and EuroSys. Example topics might\n  include:</p>\n<ul>\n<li><em>Systems Research and System Design</em>,</li>\n<li><em>OS Structure and Virtual Memory</em>,</li>\n<li><em>Systems Virtualisation</em>,</li>\n<li><em>Consensus</em>,</li>\n<li><em>Scheduling</em>,</li>\n<li><em>Privacy</em>,</li>\n<li><em>Data Intensive Computing</em>, and</li>\n<li><em>Bugs</em>.</li>\n</ul>\n<p>The reading each week will involve a load equivalent to 3 full\n  length papers. Students will be expected to read these in detail\n  and prepare a written summary and review. In addition, each week\n  will contain one or more short presentations by students for each\n  paper. The types of presentation will include:</p>\n<ul>\n<li><strong>Overview</strong>: a balanced presentation of the\n    paper, covering both positive and negative aspects.</li>\n<li><strong>Advocacy</strong>: a positive spin on the paper,\n    aiming to convince others of its value.</li>\n<li><strong>Criticism</strong>: a negative take on the paper,\n    focusing on its weak spots and omissions.</li>\n</ul>\n<p>These presentation roles will be assigned in advance,\n  regardless of the <em>soi disant</em> absolute merit of the paper\n  or the preference of the student. Furthermore, all students \u2013\n  regardless of any assigned presentation role in a given week \u2013\n  will be expected to participate in the class by asking questions\n  and generally entering into the debate.</p>\n<h2>Objectives</h2>\n<p>On completion of this module students should have a broad\n  understanding of some key papers and concepts in computer systems\n  research, as well as an appreciation of how to argue for or\n  against any particular idea.</p>\n<h2>Coursework and practical work</h2>\n<p>Coursework will be the production of the weekly paper reviews.\n  Practical work will be presenting papers as appropriate, as well\n  as ongoing participation in the class.</p>\n<h2>Assessment</h2>\n<p>Assessment consists of:</p>\n<ul>\n<li>One essay per week for 7 weeks (10% each)</li>\n<li>Presentation (20%)</li>\n<li>Participation in class over the term (10%)</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Most of the reading for this course will be in the form of the\n  selected papers each week. However, the following may be useful\n  background reading to refresh your knowledge from undergraduate\n  courses:</p>\n<p>Silberschatz, A., Peterson, J.L. and Galvin, P.C. (2005).\n  <em>Operating systems concepts</em>. Addison-Wesley (7th\n  ed.).</p>\n<p>Tanenbaum, A.S. (2008). <em>Modern Operating Systems</em>.\n  Prentice-Hall (3rd ed.).</p>\n<p>Bacon, J. and Harris, T. (2003). <em>Operating systems</em>.\n  Addison-Wesley (3rd ed.).</p>\n<p>Anderson, T. and Dahlin, M. (2014). <em>Operating Systems:\n  Principles and Practice</em>. Recursive Books (2nd ed.).</p>\n<p>Hennessy, J. and Patterson, D. (2006). <em>Computer\n  architecture: a quantitative approach</em>. Elsevier (4th ed.).\n  ISBN\u00a0978-0-12-370490-0.</p>\n<p>Kleppmann M (2016) <em>Designing Data-Intensive\n  Applications</em>, O'Reilly (1st ed.)</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Advanced Topics in Computer Systems", "course_code": "R01", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R01", "lecturers": ["hh360", "jac22"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "R250": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course explores current research topics in machine\n  learning and/or their application to natural language processing\n  in sufficient depth that, at the end of the course, participants\n  will be in a position to contribute to research on their chosen\n  topics. Each topic will be introduced with a lecture which,\n  building on the material covered in the prerequisite courses,\n  will make the current research literature accessible. Each\n  lecture will be followed by up to three seminar sessions which\n  will typically be run as a reading group with student\n  presentations on recent papers from the literature followed by a\n  discussion.</p>\n<h2>Structure</h2>\n<p>Each student will attend 3 topics and each topic's sessions\n  will be spread over 5 contact hours. Students will be expected to\n  undertake readings for their selected topics. There will be some\n  group work.</p>\n<p>There will be a briefing session in Michaelmas term.</p>\n<h2>Syllabus</h2>\n<p>Students choose exactly three <strong>topics</strong> in\n  preferential order from a list to be published in Michaelmas\n  term. Students are assessed on one of these topics which\n  may\u00a0not necessarily be their first choice topic.</p>\n<p>Topics offered in 2020-21:</p>\n<ol>\n<li>Imitation learning\u00a0<em>Dr A. Vlachos</em></li>\n<li>Do LSTMs learn Syntax\u00a0<em>\u00a0Prof. E. J.\n    Briscoe</em></li>\n<li>SVM\u00a0\u00a0<em>Prof. M. Jamnik</em></li>\n<li>Graph neural networks\u00a0<em>Prof. P. Lio and Dr P.\n    Veli\u010dkovi\u0107</em></li>\n<li>Machine Learning and Invariances\u00a0<em>Dr C.\n    Misra</em></li>\n<li>Causal Inference\u00a0<em>Dr F. Husz\u00e1r</em></li>\n<li>Bias in datasets\u00a0<em>Dr M. Tomalin</em></li>\n<li>Non-standard NLP\u00a0<em>Dr A. P. Caines</em></li>\n<li>Reinforcement learning\u00a0<em>Dr A. S. Prorok</em></li>\n<li>Gaussian processes\u00a0<em>Prof. N. D. Lawrence</em></li>\n<li>Applications of ML to Psychiatry\u00a0<em>Dr S.\n    Morgan</em></li>\n</ol>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>be in a strong position to contribute to the research\n    topics covered;</li>\n<li>understand the fundamental methods (algorithms, data\n    analysis, specific tasks) underlying each topic;</li>\n<li>and be familiar with recent research papers and advances in\n    the field.</li>\n</ul>\n<h2>Coursework</h2>\n<p>Students will work in groups to give a presentation on\n  assigned papers. Each topic will typically consist of one\n  preliminary lecture followed by 3 reading and discussion\n  sessions. A typical topic can accommodate up to 9 students\n  presenting papers. There will be at least 10 minutes general\n  discussion per session.</p>\n<p>Full coursework details will be published by October.</p>\n<h2>Assessment</h2>\n<p>Coursework will be marked by the topic leaders and second\n  marked by the module conveners.</p>\n<ul>\n<li>Participation/attendance in\u00a0three topics, 10%</li>\n<li>Presentation (for one of the chosen topics), 20%</li>\n<li>Topic coursework (for one of the chosen\u00a0topics),\n    70%</li>\n</ul>\n<p>Individual topic coursework will be published late Michaelmas\n  term.</p>\n<p><em>Please note that students will be assessed on one of their\n  three chosen topics\u00a0but this may not\n  be\u00a0their\u00a0first choice</em>.</p>\n<h2>Recommended reading</h2>\n<p>To be confirmed.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Advanced topics in machine learning or natural language processing", "course_code": "R250", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R250", "lecturers": ["av308", "mj201"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "L44": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>Understanding, (automatically) analysing and modelling\n  people's affective and social behaviour is very important for\n  multiple domains such as enhancing human-computer and human-agent\n  interaction, improving gaming technology and players\u2019 experience,\n  behavioural analytics for the banking sector, etc.</p>\n<p>Accordingly, the aim of this module is to impart knowledge and\n  ability needed to make informed choices of models, data, and\n  techniques for sensing, recognition, and expression of human\n  affective and social behaviour (e.g., smile, frown, head\n  nodding/shaking, agreement/disagreement), and its use in the\n  design of innovative interactive technology (e.g., interaction\n  with virtual agents, robots, and games; single and multi-user\n  smart environments, e.g., in a car; implicit (multimedia)\n  tagging; clinical and biomedical studies, e.g., autism,\n  depression, pain).</p>\n<h2>Syllabus</h2>\n<p>The following list provides a representative list of\n  topics:</p>\n<ul>\n<li>Introduction, definitions, overview and applications</li>\n<li>Emotion theories</li>\n<li>Sensing: from multiple modalities of vision, audio, bio\n    signals, text</li>\n<li>Data acquisition and annotation</li>\n<li>Signal processing and feature extraction</li>\n<li>Automatic recognition, prediction and evaluation</li>\n<li>Synthesis: Affect and expression synthesis and\n    generation</li>\n<li>Emotional design frameworks</li>\n<li>Advanced topics and Ethical considerations</li>\n<li>Hands-on programming work (i.e., practicals and\n    mini-project)</li>\n</ul>\n<h2>Objectives</h2>\n<p>On completion of this module, students will:</p>\n<ul>\n<li>Understand the challenges in human-human affective and\n    communicative interaction (e.g. not what is said but how it is\n    said \u2013 using the body, head, face, intonation, etc.) and its\n    implication to Human-Computer Interaction;</li>\n<li>Demonstrate knowledge in current theories and trends in\n    designing emotionally and socially sensitive interactive\n    technology, as well as recent advances in human\n    audio/visual/bio signal processing, and recognition using\n    machine learning and pattern recognition techniques;</li>\n<li>Comprehend and apply (appropriate) methods for collection,\n    analysis, representation and evaluation of human affective and\n    communicative behaviour data;</li>\n<li>Demonstrate ability to computationally analyse, recognise\n    and evaluate human affective and social behaviour;</li>\n<li>Enhance programming skills for human affect and behaviour\n    analysis and understanding;</li>\n<li>Demonstrate critical thinking, analysis and synthesis while\n    making a decision on 'when' and 'how' to incorporate emotions\n    and social signals in a specific application context, and gain\n    practical experience in proposing and justifying computational\n    solution(s) of suitable nature and scope.</li>\n</ul>\n<h2>Assessment</h2>\n<p>Practicals: 15%<br/>\n  Seminars: 20%<br/>\n  Mini-Project: 65% (written report, code and presentation)</p>\n<p>Coursework will include:</p>\n<ul>\n<li>Practical 1 report (written report)</li>\n<li>Practical 2 report (written report)</li>\n<li>Practical 3 report (written report)</li>\n<li>Seminar presentation (PDF of presentation slides)</li>\n<li>Mini project report,\u00a0code and PDF of presentation\n    slides</li>\n</ul>\n<p><strong><em>NOTE: This module has a practical element. If the\n  module is run remotely\u00a0due to COVID-19 restrictions, changes\n  to the practical work and assessment will be\n  required\u00a0</em></strong></p>\n<h2>Recommended reading</h2>\n<p>Picard, R. (2000). <em>Affective Computing</em>. MIT\n  Press.</p>\n<p>Jeon, M. (2017). Emotions and Affect in Human Factors and\n  Human-Computer Interaction. Academic Press. <a href=\"https://www.elsevier.com/books/emotions-and-affect-in-human-factors-and-human-computer-interaction/jeon/978-0-12-801851-4\" target=\"_blank\">https://www.elsevier.com/books/emotions-and-affect-in-human-factors-and-human-computer-interaction/jeon/978-0-12-801851-4</a></p>\n<p>Calvo, R., D'Mello, S., Gratch, J. and Kappas, A. (2014) The\n  Oxford Handbook of Affective Computing. Oxford University Press.\n  <a href=\"https://www.oxfordhandbooks.com/view/10.1093/oxfordhb/9780199942237.001.0001/oxfordhb-9780199942237\" target=\"_blank\">https://www.oxfordhandbooks.com/view/10.1093/oxfordhb/9780199942237.001.0001/oxfordhb-9780199942237</a></p>\n<p><strong>Journals:</strong></p>\n<ol>\n<li>IEEE Transactions on Affective Computing <a href=\"https://www.computer.org/csdl/journal/ta\" target=\"_blank\">https://www.computer.org/csdl/journal/ta</a></li>\n</ol>\n<p><strong>Conference proceedings:</strong></p>\n<ol>\n<li>ACII: Affective Computing and Intelligent <a href=\"https://dblp.org/db/conf/acii/index\" target=\"_blank\">https://dblp.org/db/conf/acii/index</a></li>\n<li>ICMI: ACM International Conference on Multimodal\n    Interaction <a href=\"https://dblp.org/db/conf/icmi/icmi2019\" target=\"_blank\">https://dblp.org/db/conf/icmi/icmi2019</a></li>\n<li>FGR: IEEE Conference on Automatic Face and Gesture\n    Recognition <a href=\"https://dblp.org/db/conf/fgr/\" target=\"_blank\">https://dblp.org/db/conf/fgr/</a></li>\n</ol>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Affective Computing", "course_code": "L44", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L44", "lecturers": ["hg410"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "R254": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course examines major topics relating to cybercrime from\n  an interdisciplinary perspective. These include offence types and\n  techniques, targets, victimisation, social and financial cost,\n  criminal marketplaces, offenders, detection and prevention, and\n  regulation and policing. The course outlines: key debates in\n  cybercrime research; how crime is committed using computer\n  systems; and provides an understanding of how cybercrime is\n  regulated, policed, detected, and prevented.</p>\n<h2>Syllabus</h2>\n<p>The course will consist of eight two-hour sessions\n  covering:</p>\n<ul>\n<li>Tools and techniques of cybercrime</li>\n<li>Cybercrime victimisation</li>\n<li>Costs and harms of cybercrime</li>\n<li>Criminal marketplaces</li>\n<li>Cybercrime offenders and offender pathways</li>\n<li>Cybercrime prevention (situational and social\n    approaches)</li>\n<li>Regulation and policy</li>\n<li>Cybercrime and the criminal justice system</li>\n</ul>\n<p>\u00a0</p>\n<p>All participants are expected to attend and participate in\n  every class, and to read the specified papers beforehand. The\n  instructor must be notified of any absences in advance.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>Have a broad knowledge of the key themes, debates, theory,\n    and research in relation to cybercrime;</li>\n<li>Have developed further skills in critical analysis;</li>\n<li>Have developed skills in presenting a case study,\n    critically evaluating current issues, and writing about\n    cybercrime;</li>\n<li>Have a sound understanding of strategies to combat and\n    prevent cybercrime;</li>\n<li>Understand the ethical and practical challenges in\n    conducting cybercrime research.</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Please see Course Materials for recommended reading for each\n  session.</p>\n<p>\u00a0</p>\n", "course_name": "Cybercrime", "course_code": "R254", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/R254", "lecturers": ["ah793", "rja14", "rnc1"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "L47": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This reading group course examines foundations and current\n  research into distributed ledger (blockchain) technologies and\n  their applications. Students will read, review, and present\n  seminal research papers in this area. Once completed, students\n  should be able to integrate blockchain technologies into their\n  own research and gain familiarity with a range of research\n  skills.</p>\n<h2>Lectures</h2>\n<ol>\n<li>Introduction</li>\n<li>Consensus protocols</li>\n<li>Bitcoin and its variants</li>\n<li>Ethereum, smart contracts, and other permissionless\n    DLTs</li>\n<li>Hybrid and permissioned DLTs</li>\n<li>Applications</li>\n</ol>\n<p>The final format of the course will depend on the enrolment.\n  Each week, three or four class participants will critically\n  introduce papers using 15-20 minute conference-style\n  presentations. Each presentation will be followed by about 10\n  minutes of questions, then a guided discussion by all present.\n  Slides will be used for presentation.</p>\n<p>Students will give one or more presentations each term,\n  depending on the number of class participants. Each student will\n  also submit a paper review each week for one of the three papers\n  presented except for the week they will be making their own\n  presentation. Each review will follow a template and be up to\n  1,000 words. As a result, each student will produce 6-7 reviews\n  and at least one presentation, potentially two, depending on the\n  number of participants. All participants are expected to attend\n  and participate in every class; the instructor must be notified\n  of any absences in advance.</p>\n<h2>Learning objectives</h2>\n<p>There are two broad objectives: to acquire familiarity with a\n  body of work in the area of distributed ledgers and to learn some\n  specific research skills:</p>\n<ol>\n<li><a href=\"http://blizzard.cs.uwaterloo.ca/keshav/home/Papers/data/07/paper-reading.pdf\" target=\"_blank\">How to read a paper</a></li>\n<li><a href=\"http://pages.cs.wisc.edu/~markhill/the_task_of_the_referee.pdf\" target=\"_blank\">How to review a paper</a></li>\n<li><a href=\"http://blizzard.cs.uwaterloo.ca/keshav/wiki/index.php/Evaluating_a_research_paper\" target=\"_blank\">How to analyze a paper\u2019s strengths and\n    weaknesses</a></li>\n<li><a href=\"http://www-net.cs.umass.edu/kurose/talks/top_10_tips_for_writing_a_paper.ppt\" target=\"_blank\">Written</a> and <a href=\"http://blizzard.cs.uwaterloo.ca/keshav/wiki/index.php/Giving_and_attending_talks\" target=\"_blank\">oral</a> presentation skills</li>\n</ol>\n<h2>Assessment</h2>\n<p>You are expected to read all assigned papers and submit a\n  paper review each week. Each review must either follow the\n  provided review form [<a href=\"https://www.cl.cam.ac.uk/teaching/1920/R01/materials/review-form.pdf\" target=\"_blank\">PDF</a>] [<a href=\"https://www.cl.cam.ac.uk/teaching/1920/R01/materials/review-form.tex\" target=\"_blank\">Latex source</a>] or may be a PDF copy of your\n  presentation slide deck for those papers you are asked to\n  present. Each \u201creview\u201d is worth 10% of your total mark, and is\n  marked out of 100 with 60 a passing grade. Marks will be awarded\n  and penalties for late submission applied according to <a href=\"http://www.cl.cam.ac.uk/teaching/exams/acs_assessment.html\" target=\"_blank\">ACS Assessment Guidelines</a>. No extra marks are\n  available for submitting more than one review in any week.</p>\n<ul>\n<li>One paper review per week for 6 or 7 weeks, depending on\n    enrolment (10% each)</li>\n<li>Presentation (10% or 20%)</li>\n<li>Participation in class over the term (20%)</li>\n</ul>\n<h2>Recommended Reading</h2>\n<p>Narayanan, A. , Bonneau, J., Felten, E., Miller, A. and\n  Goldfeder, S. (2016). <em>Bitcoin and Cryptocurrency\n  Technologies: A Comprehensive Introduction</em>. Princeton\n  University Press.<br/>\n  (2016 Draft available here: <a href=\"https://d28rh4a8wq0iu5.cloudfront.net/bitcointech/readings/princeton_bitcoin_book.pdf\" target=\"_blank\">https://d28rh4a8wq0iu5.cloudfront.net/bitcointech/readings/princeton_bitcoin_book.pdf</a>)</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Distributed Ledger Technologies: Foundations and Applications", "course_code": "L47", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L47", "lecturers": ["sk818"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "P232": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course provides a practical introduction to aspects of\n  hardware security, in particular the reverse engineering of\n  embedded microcontroller devices that implement a cryptographic\n  application.</p>\n<p>The particular target on which the practical exercises center\n  this year will (likely) be the evaluation kit of an\n  authentication chip embedded in consumer electronics accessories,\n  such as ink-jet printer tanks or batteries, which implements a\n  challenge-response protocol based on elliptic-curve public-key\n  cryptography.</p>\n<h2>Sessions</h2>\n<ol>\n<li><strong>Lecture 1:</strong> Introduction to Hardware\n    Security (Skorobogatov)<br/>\n<strong>Exercise 1:</strong> ARM Cortex programming, debugging,\n    decompiling, logic analysis (Kuhn)</li>\n<li><strong>Lecture 2 + Exercise 2:</strong> PCB reverse\n    engineering (Skorobogatov)</li>\n<li><strong>Lecture 3:</strong> Public-key cryptography\n    (Kuhn)<br/>\n<strong>Exercise 3:</strong> firmware readout and protocol\n    logging (Skorobogatov+Kuhn)</li>\n<li><strong>Lecture 4:</strong> Elliptic-curve cryptography\n    (Kuhn)<br/>\n<strong>Exercise 4:</strong> decompilation \u00e2\u20ac\u201c communications\n    (Kuhn+Skorobogatov)</li>\n<li><strong>Lecture 5:</strong> Feedback on exercises\n    (Skorobogatov+Kuhn)<br/>\n<strong>Exercise 5:</strong> decompilation \u00e2\u20ac\u201c elliptic-curve\n    cryptography (Kuhn+You)</li>\n<li><strong>Exercise 6:</strong> re-implementation of\n    single-wire interface or elliptic-curve layer</li>\n<li><strong>Reading class 1:</strong> side-channel analysis\n    (Kuhn+You)</li>\n<li><strong>Reading class 2:</strong> VLSI reverse engineering,\n    fault attacks (Skorobogatov)</li>\n</ol>\n<p>In addition to these eight weekly 2-hour meetings, there will\n  also be an optional weekly 1-hour exercise help session.</p>\n<p>Each exercise is due after two weeks.</p>\n<h2>Objectives</h2>\n<p>On completion of this module, students should:</p>\n<ul>\n<li>have gained hands-on experience in some of the tools and\n    methods involved in reverse-engineering a digital product,</li>\n<li>better understand the problem of hardening a product design\n    against reverse engineering and tampering,</li>\n<li>be familiar with a range of hardware-level attack\n    techniques and countermeasures.</li>\n</ul>\n<h2>Coursework</h2>\n<p>The course includes three reading sessions in which several\n  papers are discussed. Each student is expected to give a 20\u201330\n  minute presentation covering 1\u20133 papers in one of these reading\n  sessions and prepare an essay on the topics covered.</p>\n<h2>Practical work</h2>\n<p>This module has a large practical element.</p>\n<p><strong><em>NOTE: If the module is run remotely\u00a0due to\n  COVID-19 restrictions, changes to the practical work will be\n  required\u00a0</em></strong></p>\n<h2>Assessment</h2>\n<p>60% exercises: each exercise handed in will be marked and the\n  scores of the four exercises with the highest mark will each\n  contribute 15% to the overall mark of the course.</p>\n<p>20% reading-class presentation.</p>\n<p>20% reading-class essay.</p>\n<h2>Recommended reading</h2>\n<p>Hankerson/Menezes/Vanstone: Guide to Elliptic Curve\n  Cryptography. Springer 2004.</p>\n<p>Mangard/Oswald/Popp: Power Analysis Attacks: Revealing the\n  Secrets of Smart Cards power analysis attacks. Springer 2007.</p>\n<h2>Further Information</h2>\n<p>Due to COVID-19, the method of teaching for this module will\n  be adjusted to cater for physical distancing and students who are\n  working remotely. We will confirm precisely how the module will\n  be taught closer to the start of term.</p>\n", "course_name": "Hardware Security Practicals", "course_code": "P232", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/P232", "lecturers": ["mgk25", "sps32", "frc26"], "lectures": 6, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "P230": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This is an advanced course in human-computer interaction, with\n  a specialist focus on intelligent user interfaces and interaction\n  with machine-learning and artificial intelligence technologies.\n  The format will be largely Practical, with students working in\n  pairs to carry out a mini-project involving empirical research\n  investigation. These studies will investigate human interaction\n  with some kind of model-based system for planning,\n  decision-making, automation etc. Possible study formats might\n  include: System evaluation, Field observation, Hypothesis testing\n  experiment, Design intervention or Corpus analysis, following set\n  examples from recent research publications. Project work will be\n  formally evaluated through a report and presentation.</p>\n<h2>Lectures</h2>\n<p>(note that Lectures 2-7 also include one hour class discussion\n  of practical work)<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Current research\n  themes in intelligent user interfaces<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Program\n  synthesis<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Mixed initiative\n  interaction<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Interpretability /\n  explainable AI<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Labelling as a\n  fundamental problem<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Machine learning\n  risks and bias<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Visualisation and\n  visual analytics<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 Student research\n  presentations</p>\n<h2>Objectives</h2>\n<p>By the end of the course students should:<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 be familiar with\n  current state of the art in intelligent interactive systems<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 understand the human\n  factors that are most critical in the design of such systems<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 be able to evaluate\n  evidence for and against the utility of novel systems<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 have experience of\n  conducting user studies meeting the quality criteria of this\n  field<br/>\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2022 be able to write up\n  and present user research in a professional manner</p>\n<h2>Recommended reading</h2>\n<p>Brad A. Myers and Richard McDaniel (2000). <a href=\"http://web.media.mit.edu/~lieber/Your-Wish/03-Myers.pdf\">Demonstrational\n  Interfaces: Sometimes You Need a Little Intelligence, Sometimes\n  You Need a Lot</a>.<br/>\n  \u00a0</p>\n", "course_name": "Interaction with Machine Learning", "course_code": "P230", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/P230", "lecturers": ["afb21"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}, "L310": {"supervisions": 0, "prerequisite_for": [], "past_exam_questions": null, "description": "<h2>Aims</h2>\n<p>This course teaches the foundations of autonomous mobile\n  robots, covering topics such as perception, motion control, and\n  planning. It also teaches algorithmic strategies that enable the\n  coordination of multi-robot systems and robot swarms. The course\n  will feature several practical sessions with hands-on robot\n  programming. The students will undertake mini-projects, which\n  will be formally evaluated through a report and presentation.</p>\n<h2>Lectures</h2>\n<ul>\n<li><strong>Robot motion and control.</strong> Kinematics,\n    control models, trajectory tracking.</li>\n<li><strong>Control architectures.</strong> Sensor-actuator\n    loops, reactive path planning.</li>\n<li><strong>Sensing.</strong> Sensors, perception.</li>\n<li><strong>Localization.</strong> Markov localization,\n    environment modeling, SLAM.</li>\n<li><strong>Navigation.</strong> Planning, receding horizon\n    control.</li>\n<li><strong>Multi-robot systems I.</strong> Centralization vs.\n    decentralization, robot swarms.</li>\n<li><strong>Multi-robot systems II.</strong> Consensus\n    algorithms, graph-theoretic methods.</li>\n<li><strong>Multi-robot systems III.</strong> Task\n    assignment.</li>\n<li><strong>Multi-robot systems IV.</strong> Multi-robot path\n    planning.</li>\n<li><strong>Robot learning.</strong> Introduction to\n    reinforcement learning for autonomous decision-making.</li>\n</ul>\n<h2>Objectives</h2>\n<p>By the end of the course students should:</p>\n<ul>\n<li>understand how to control a mobile robot;</li>\n<li>understand how a robot perceives its environment;</li>\n<li>understand how a robot plans actions (navigation\n    paths);</li>\n<li>know paradigms of coordination in systems of multiple\n    robots;</li>\n<li>know classical multi-robot problems and their solution\n    methods;</li>\n<li>Know how to use ROS (Robot Operating System, <a href=\"http://www.ros.org\" id=\"tex2html21\" name=\"tex2html21\">http://www.ros.org</a>).</li>\n</ul>\n<h2>Recommended reading</h2>\n<p>Siegwart, R., Nourbakhsh, I.R. and Scaramuzza, D. (2004).\n  <em>Autonomous mobile robots</em>. MIT Press.<br/>\n  Thrun, S., Wolfram B. and Dieter F. (2005). <em>Probabilistic\n  robotics</em>. MIT Press.<br/>\n  Mondada, F. and Mordechai B. (2018) <em>Elements of\n  Robotics</em>. Springer<br/>\n  Siciliano, B. and Khatib, O. (2016) <em>Springer handbook of\n  robotics</em>. Springer.<br/>\n  Mesbahi, M. and Egerstedt, M. (2010) <em>Graph theoretic methods\n  in multiagent networks</em>. Princeton University Press.</p>\n", "course_name": "Mobile Robot Systems", "course_code": "L310", "course_url": "https://www.cl.cam.ac.uk/teaching/2021/L310", "lecturers": ["asp45"], "lectures": 16, "year": "2021", "tripos_part": "3", "michaelmas": false, "lent": true, "easter": false}}